{"id":"4900cf5944d4f8b5d046bdbdc510890a","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@erc725/smart-contracts/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// errors\nimport {\n    OwnableCannotSetZeroAddressAsOwner,\n    OwnableCallerNotTheOwner\n} from \"../errors.sol\";\n\n/**\n * @title OwnableUnset\n * @dev modified version of OpenZeppelin implementation, where:\n * - _setOwner(address) function is internal, so this function can be used in constructor\n * of contracts implementation (instead of using transferOwnership(address)\n * - the contract does not inherit from Context contract\n */\nabstract contract OwnableUnset {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        _setOwner(newOwner);\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != msg.sender) {\n            revert OwnableCallerNotTheOwner(msg.sender);\n        }\n    }\n\n    /**\n     * @dev Changes the owner if `newOwner` and oldOwner are different\n     * This pattern is useful in inheritance.\n     */\n    function _setOwner(address newOwner) internal virtual {\n        if (newOwner != owner()) {\n            emit OwnershipTransferred(_owner, newOwner);\n            _owner = newOwner;\n        }\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.5;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC725X} from \"./interfaces/IERC725X.sol\";\n\n// libraries\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {BytesLib} from \"solidity-bytes-utils/contracts/BytesLib.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\n\n// constants\nimport {\n    _INTERFACEID_ERC725X,\n    OPERATION_0_CALL,\n    OPERATION_1_CREATE,\n    OPERATION_2_CREATE2,\n    OPERATION_3_STATICCALL,\n    OPERATION_4_DELEGATECALL\n} from \"./constants.sol\";\n\nimport {\n    ERC725X_InsufficientBalance,\n    ERC725X_UnknownOperationType,\n    ERC725X_MsgValueDisallowedInStaticCall,\n    ERC725X_MsgValueDisallowedInDelegateCall,\n    ERC725X_CreateOperationsRequireEmptyRecipientAddress,\n    ERC725X_ContractDeploymentFailed,\n    ERC725X_NoContractBytecodeProvided,\n    ERC725X_ExecuteParametersLengthMismatch,\n    ERC725X_ExecuteParametersEmptyArray\n} from \"./errors.sol\";\n\n/**\n * @title Core implementation of ERC725X sub-standard, a generic executor.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n * It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n */\nabstract contract ERC725XCore is OwnableUnset, ERC165, IERC725X {\n    /**\n     * @inheritdoc IERC725X\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     * - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully.\n     * - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0.\n     * - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\n     *\n     * @custom:events\n     * - {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL).\n     * - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2).\n     */\n    function execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) public payable virtual override onlyOwner returns (bytes memory) {\n        return _execute(operationType, target, value, data);\n    }\n\n    /**\n     * @inheritdoc IERC725X\n     * @custom:requirements\n     * - All the array parameters provided MUST be equal and have the same length.\n     * - SHOULD only be callable by the {owner} of the contract.\n     * - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\n     *\n     * @custom:warning\n     * - The `msg.value` should not be trusted for any method called with `operationType`: `DELEGATECALL` (4).\n     *\n     * @custom:events\n     * - {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL)\n     * - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\n     */\n    function executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) public payable virtual override onlyOwner returns (bytes[] memory) {\n        return _executeBatch(operationsType, targets, values, datas);\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(IERC165, ERC165) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725X ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev check the `operationType` provided and perform the associated low-level opcode after checking for requirements (see {execute}).\n     */\n    function _execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) internal virtual returns (bytes memory) {\n        // CALL\n        if (operationType == OPERATION_0_CALL) {\n            return _executeCall(target, value, data);\n        }\n\n        // Deploy with CREATE\n        if (operationType == OPERATION_1_CREATE) {\n            if (target != address(0)) {\n                revert ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n            }\n            return _deployCreate(value, data);\n        }\n\n        // Deploy with CREATE2\n        if (operationType == OPERATION_2_CREATE2) {\n            if (target != address(0)) {\n                revert ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n            }\n            return _deployCreate2(value, data);\n        }\n\n        // STATICCALL\n        if (operationType == OPERATION_3_STATICCALL) {\n            if (value != 0) {\n                revert ERC725X_MsgValueDisallowedInStaticCall();\n            }\n            return _executeStaticCall(target, data);\n        }\n\n        // DELEGATECALL\n        //\n        // WARNING! delegatecall is a dangerous operation type! use with EXTRA CAUTION\n        //\n        // delegate allows to call another deployed contract and use its functions\n        // to update the state of the current calling contract.\n        //\n        // this can lead to unexpected behaviour on the contract storage, such as:\n        // - updating any state variables (even if these are protected)\n        // - update the contract owner\n        // - run selfdestruct in the context of this contract\n        //\n        if (operationType == OPERATION_4_DELEGATECALL) {\n            if (value != 0) {\n                revert ERC725X_MsgValueDisallowedInDelegateCall();\n            }\n            return _executeDelegateCall(target, data);\n        }\n\n        revert ERC725X_UnknownOperationType(operationType);\n    }\n\n    /**\n     * @dev check each `operationType` provided in the batch and perform the associated low-level opcode after checking for requirements (see {executeBatch}).\n     */\n    function _executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) internal virtual returns (bytes[] memory) {\n        if (\n            operationsType.length != targets.length ||\n            (targets.length != values.length || values.length != datas.length)\n        ) {\n            revert ERC725X_ExecuteParametersLengthMismatch();\n        }\n\n        if (operationsType.length == 0) {\n            revert ERC725X_ExecuteParametersEmptyArray();\n        }\n\n        bytes[] memory result = new bytes[](operationsType.length);\n\n        for (uint256 i = 0; i < operationsType.length; ) {\n            result[i] = _execute(\n                operationsType[i],\n                targets[i],\n                values[i],\n                datas[i]\n            );\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Perform low-level call (operation type = 0)\n     * @param target The address on which call is executed\n     * @param value The value to be sent with the call\n     * @param data The data to be sent with the call\n     * @return result The data from the call\n     */\n    function _executeCall(\n        address target,\n        uint256 value,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        if (address(this).balance < value) {\n            revert ERC725X_InsufficientBalance(address(this).balance, value);\n        }\n\n        emit Executed(OPERATION_0_CALL, target, value, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.call{value: value}(\n            data\n        );\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Perform low-level staticcall (operation type = 3)\n     * @param target The address on which staticcall is executed\n     * @param data The data to be sent with the staticcall\n     * @return result The data returned from the staticcall\n     */\n    function _executeStaticCall(\n        address target,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        emit Executed(OPERATION_3_STATICCALL, target, 0, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.staticcall(data);\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Perform low-level delegatecall (operation type = 4)\n     * @param target The address on which delegatecall is executed\n     * @param data The data to be sent with the delegatecall\n     * @return result The data returned from the delegatecall\n     *\n     * @custom:warning The `msg.value` should not be trusted for any method called with `operationType`: `DELEGATECALL` (4).\n     */\n    function _executeDelegateCall(\n        address target,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        emit Executed(OPERATION_4_DELEGATECALL, target, 0, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.delegatecall(data);\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Deploy a contract using the `CREATE` opcode (operation type = 1)\n     * @param value The value to be sent to the contract created\n     * @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s)\n     * @return newContract The address of the contract created as bytes\n     */\n    function _deployCreate(\n        uint256 value,\n        bytes memory creationCode\n    ) internal virtual returns (bytes memory newContract) {\n        if (address(this).balance < value) {\n            revert ERC725X_InsufficientBalance(address(this).balance, value);\n        }\n\n        if (creationCode.length == 0) {\n            revert ERC725X_NoContractBytecodeProvided();\n        }\n\n        address contractAddress;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            contractAddress := create(\n                value,\n                add(creationCode, 0x20),\n                mload(creationCode)\n            )\n        }\n\n        if (contractAddress == address(0)) {\n            revert ERC725X_ContractDeploymentFailed();\n        }\n\n        emit ContractCreated(\n            OPERATION_1_CREATE,\n            contractAddress,\n            value,\n            bytes32(0)\n        );\n        return abi.encodePacked(contractAddress);\n    }\n\n    /**\n     * @dev Deploy a contract using the `CREATE2` opcode (operation type = 2)\n     * @param value The value to be sent to the contract created\n     * @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s) and a bytes32 salt\n     * @return newContract The address of the contract created as bytes\n     */\n    function _deployCreate2(\n        uint256 value,\n        bytes memory creationCode\n    ) internal virtual returns (bytes memory newContract) {\n        if (creationCode.length == 0) {\n            revert ERC725X_NoContractBytecodeProvided();\n        }\n\n        bytes32 salt = BytesLib.toBytes32(\n            creationCode,\n            creationCode.length - 32\n        );\n        bytes memory bytecode = BytesLib.slice(\n            creationCode,\n            0,\n            creationCode.length - 32\n        );\n        address contractAddress = Create2.deploy(value, salt, bytecode);\n\n        emit ContractCreated(OPERATION_2_CREATE2, contractAddress, value, salt);\n        return abi.encodePacked(contractAddress);\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\nimport {\n    ERC725Y_MsgValueDisallowed,\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray\n} from \"./errors.sol\";\n\n/**\n * @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\nabstract contract ERC725YCore is OwnableUnset, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        dataValue = _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     *  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(IERC165, ERC165) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract,\n * initializing it or transferring ownership of the contract.\n */\nerror OwnableCannotSetZeroAddressAsOwner();\n\n/**\n * @dev Reverts when only the owner is allowed to call the function.\n * @param callerAddress The address that tried to make the call.\n */\nerror OwnableCallerNotTheOwner(address callerAddress);\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for the ERC725X sub-standard, a generic executor.\n * @dev ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself).\n * It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n * It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n */\ninterface IERC725X is IERC165 {\n    /**\n     * @notice Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\n     * @dev Emitted when a new contract was created and deployed.\n     * @param operationType The opcode used to deploy the contract (`CREATE` or `CREATE2`).\n     * @param contractAddress The created contract address.\n     * @param value The amount of native tokens (in Wei) sent to fund the created contract on deployment.\n     * @param salt The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\n     */\n    event ContractCreated(\n        uint256 indexed operationType,\n        address indexed contractAddress,\n        uint256 value,\n        bytes32 indexed salt\n    );\n\n    /**\n     * @notice Called address `target` using `operationType` with `value` wei and `data`.\n     * @dev Emitted when calling an address `target` (EOA or contract) with `value`.\n     * @param operationType The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\n     * @param target The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\n     * @param value The amount of native tokens transferred along the call (in Wei).\n     * @param selector The first 4 bytes (= function selector) of the data sent with the call.\n     */\n    event Executed(\n        uint256 indexed operationType,\n        address indexed target,\n        uint256 value,\n        bytes4 indexed selector\n    );\n\n    /**\n     * @notice Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\n     *\n     * @param operationType The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\n     * @param target The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\n     * @param value The amount of native tokens to transfer (in Wei)\n     * @param data The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n     *\n     * @dev Generic executor function to:\n     *\n     * - send native tokens to any address.\n     * - interact with any contract by passing an abi-encoded function call in the `data` parameter.\n     * - deploy a contract by providing its creation bytecode in the `data` parameter.\n     *\n     * @custom:warning Be aware that `msg.value` is persisting between the caller and the callee when using `DELEGATECALL` (`4`) as `operationType`.\n     */\n    function execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) external payable returns (bytes memory);\n\n    /**\n     * @notice Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\n     *\n     * @dev Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\n     *\n     * @param operationsType The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\n     * @param targets The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\n     * @param values The list of native token amounts to transfer (in Wei).\n     * @param datas The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n     *\n     * @custom:warning The `msg.value` should not be trusted for any method called with the batch with `operationType`: `DELEGATECALL` (4).\n     */\n    function executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) external payable returns (bytes[] memory);\n}\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\n *\n * @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\n */\ninterface ILSP0ERC725Account {\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP0 = 0x24871b3d;\nbytes4 constant _INTERFACEID_ERC1271 = 0x1626ba7e;\n\n// ERC1271 - Standard Signature Validation\nbytes4 constant _ERC1271_SUCCESSVALUE = 0x1626ba7e;\nbytes4 constant _ERC1271_FAILVALUE = 0xffffffff;\n\n// --- Native Token Type Id\n\n// keccak256('LSP0ValueReceived')\nbytes32 constant _TYPEID_LSP0_VALUE_RECEIVED = 0x9c4705229491d365fb5434052e12a386d6771d976bea61070a8c694e8affea3d;\n\n// Ownership Transfer Type IDs\n\n// keccak256('LSP0OwnershipTransferStarted')\nbytes32 constant _TYPEID_LSP0_OwnershipTransferStarted = 0xe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac6926;\n\n// keccak256('LSP0OwnershipTransferred_SenderNotification')\nbytes32 constant _TYPEID_LSP0_OwnershipTransferred_SenderNotification = 0xa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814;\n\n// keccak256('LSP0OwnershipTransferred_RecipientNotification')\nbytes32 constant _TYPEID_LSP0_OwnershipTransferred_RecipientNotification = 0xceca317f109c43507871523e82dc2a3cc64dfa18f12da0b6db14f6e23f995538;\n"},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC1271} from \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\nimport {ILSP0ERC725Account} from \"./ILSP0ERC725Account.sol\";\nimport {\n    ILSP1UniversalReceiver\n} from \"../LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\";\n\nimport {\n    ILSP1UniversalReceiverDelegate as ILSP1Delegate\n} from \"../LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\";\n\n// libraries\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {LSP1Utils} from \"../LSP1UniversalReceiver/LSP1Utils.sol\";\nimport {LSP2Utils} from \"../LSP2ERC725YJSONSchema/LSP2Utils.sol\";\n\n// modules\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\nimport {ERC725XCore} from \"@erc725/smart-contracts/contracts/ERC725XCore.sol\";\nimport {\n    OwnableUnset\n} from \"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\";\nimport {LSP14Ownable2Step} from \"../LSP14Ownable2Step/LSP14Ownable2Step.sol\";\nimport {LSP17Extendable} from \"../LSP17ContractExtension/LSP17Extendable.sol\";\nimport {\n    LSP20CallVerification\n} from \"../LSP20CallVerification/LSP20CallVerification.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP0,\n    _INTERFACEID_ERC1271,\n    _ERC1271_SUCCESSVALUE,\n    _ERC1271_FAILVALUE,\n    _TYPEID_LSP0_VALUE_RECEIVED,\n    _TYPEID_LSP0_OwnershipTransferStarted,\n    _TYPEID_LSP0_OwnershipTransferred_SenderNotification,\n    _TYPEID_LSP0_OwnershipTransferred_RecipientNotification\n} from \"./LSP0Constants.sol\";\nimport {\n    _INTERFACEID_LSP1,\n    _INTERFACEID_LSP1_DELEGATE,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY\n} from \"../LSP1UniversalReceiver/LSP1Constants.sol\";\nimport {_INTERFACEID_LSP14} from \"../LSP14Ownable2Step/LSP14Constants.sol\";\n\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"../LSP17ContractExtension/LSP17Constants.sol\";\nimport {\n    _INTERFACEID_LSP20_CALL_VERIFICATION\n} from \"../LSP20CallVerification/LSP20Constants.sol\";\n\n// errors\nimport {\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray\n} from \"@erc725/smart-contracts/contracts/errors.sol\";\nimport {\n    NoExtensionFoundForFunctionSelector\n} from \"../LSP17ContractExtension/LSP17Errors.sol\";\n\n/**\n * @title The Core Implementation of [LSP-0-ERC725Account] Standard.\n *\n * @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\n */\nabstract contract LSP0ERC725AccountCore is\n    ERC725XCore,\n    ERC725YCore,\n    IERC1271,\n    ILSP0ERC725Account,\n    ILSP1UniversalReceiver,\n    LSP14Ownable2Step,\n    LSP17Extendable,\n    LSP20CallVerification\n{\n    using ERC165Checker for address;\n    using LSP1Utils for address;\n    using Address for address;\n\n    /**\n     * @dev Executed:\n     * - When receiving some native tokens without any additional data.\n     * - On empty calls to the contract.\n     *\n     * @custom:info This function internally delegates the handling of native tokens to the {universalReceiver} function\n     * passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and an empty bytes array as received data.\n     *\n     * @custom:events Emits a {UniversalReceiver} event when the `universalReceiver` logic is executed upon receiving native tokens.\n     */\n    receive() external payable virtual {\n        if (msg.value != 0) {\n            universalReceiver(_TYPEID_LSP0_VALUE_RECEIVED, \"\");\n        }\n    }\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens with some calldata.\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), return.\n     *\n     * @custom:info Whenever the call is associated with native tokens, the function will delegate the handling of native tokens internally to the {universalReceiver} function\n     * passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data, except when the native token will be sent directly to the extension.\n     *\n     * @custom:events {UniversalReceiver} event when receiving native tokens and extension function selector is not found or not payable.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            // if value is associated with the extension call, use the universalReceiver\n            if (msg.value != 0) {\n                universalReceiver(_TYPEID_LSP0_VALUE_RECEIVED, callData);\n            }\n            return \"\";\n        }\n\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @inheritdoc ILSP0ERC725Account\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert(\"LSP0: batchCalls reverted\");\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc ERC725XCore\n     *\n     * @custom:requirements\n     * - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     * - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully.\n     * - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`.\n     * - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\n     *\n     * @custom:events\n     * - {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4).\n     * - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2).\n     * - {UniversalReceiver} event when receiving native tokens.\n     */\n    function execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) public payable virtual override returns (bytes memory) {\n        if (msg.value != 0) {\n            emit UniversalReceiver(\n                msg.sender,\n                msg.value,\n                _TYPEID_LSP0_VALUE_RECEIVED,\n                abi.encodePacked(msg.sig),\n                \"\"\n            );\n        }\n\n        address accountOwner = owner();\n\n        // If the caller is the owner perform execute directly\n        if (msg.sender == accountOwner) {\n            return ERC725XCore._execute(operationType, target, value, data);\n        }\n\n        // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n        // Depending on the returnedStatus, a second call is done after execution\n        bool verifyAfter = LSP20CallVerification._verifyCall(accountOwner);\n\n        // Perform the execution\n        bytes memory result = ERC725XCore._execute(\n            operationType,\n            target,\n            value,\n            data\n        );\n\n        // if verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n        if (verifyAfter) {\n            LSP20CallVerification._verifyCallResult(\n                accountOwner,\n                abi.encode(result)\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * @inheritdoc ERC725XCore\n     *\n     * @custom:requirements\n     * - The length of the parameters provided must be equal.\n     * - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     * - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully.\n     * - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`.\n     * - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\n     *\n     * @custom:warning\n     * - The `msg.value` should not be trusted for any method called within the batch with `operationType`: `DELEGATECALL` (4).\n     *\n     * @custom:events\n     * - {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). (each iteration)\n     * - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2) (each iteration)\n     * - {UniversalReceiver} event when receiving native tokens.\n     */\n    function executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) public payable virtual override returns (bytes[] memory) {\n        if (msg.value != 0) {\n            emit UniversalReceiver(\n                msg.sender,\n                msg.value,\n                _TYPEID_LSP0_VALUE_RECEIVED,\n                abi.encodePacked(msg.sig),\n                \"\"\n            );\n        }\n\n        address accountOwner = owner();\n\n        // If the caller is the owner perform execute directly\n        if (msg.sender == accountOwner) {\n            return\n                ERC725XCore._executeBatch(\n                    operationsType,\n                    targets,\n                    values,\n                    datas\n                );\n        }\n\n        // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n        // Depending on the returnedStatus, a second call is done after execution\n        bool verifyAfter = LSP20CallVerification._verifyCall(accountOwner);\n\n        // Perform the execution\n        bytes[] memory results = ERC725XCore._executeBatch(\n            operationsType,\n            targets,\n            values,\n            datas\n        );\n\n        // if verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n        if (verifyAfter) {\n            LSP20CallVerification._verifyCallResult(\n                accountOwner,\n                abi.encode(results)\n            );\n        }\n\n        return results;\n    }\n\n    /**\n     * @inheritdoc ERC725YCore\n     *\n     * @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     *\n     * @custom:events\n     * - {UniversalReceiver} event when receiving native tokens.\n     * - {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override {\n        if (msg.value != 0) {\n            emit UniversalReceiver(\n                msg.sender,\n                msg.value,\n                _TYPEID_LSP0_VALUE_RECEIVED,\n                abi.encodePacked(msg.sig),\n                \"\"\n            );\n        }\n\n        address accountOwner = owner();\n\n        // If the caller is the owner perform setData directly\n        if (msg.sender == accountOwner) {\n            return _setData(dataKey, dataValue);\n        }\n\n        // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n        // Depending on the returnedStatus, a second call is done after setting data\n        bool verifyAfter = _verifyCall(accountOwner);\n\n        _setData(dataKey, dataValue);\n\n        // If verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n        // The setData function does not return, second parameter of {_verifyCallResult} will be empty\n        if (verifyAfter) {\n            _verifyCallResult(accountOwner, \"\");\n        }\n    }\n\n    /**\n     * @inheritdoc ERC725YCore\n     *\n     * @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     *\n     * @custom:events\n     * - {UniversalReceiver} event when receiving native tokens.\n     * - {DataChanged} event. (on each iteration of setting data)\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override {\n        if (msg.value != 0) {\n            emit UniversalReceiver(\n                msg.sender,\n                msg.value,\n                _TYPEID_LSP0_VALUE_RECEIVED,\n                abi.encodePacked(msg.sig),\n                \"\"\n            );\n        }\n\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        address accountOwner = owner();\n\n        // If the caller is the owner perform setData directly\n        if (msg.sender == accountOwner) {\n            for (uint256 i; i < dataKeys.length; ) {\n                _setData(dataKeys[i], dataValues[i]);\n\n                unchecked {\n                    ++i;\n                }\n            }\n\n            return;\n        }\n\n        // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n        // Depending on the returnedStatus, a second call is done after setting data\n        bool verifyAfter = _verifyCall(accountOwner);\n\n        for (uint256 i; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        // If verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n        // The setData function does not return, second parameter of {_verifyCallResult} will be empty\n        if (verifyAfter) {\n            _verifyCallResult(accountOwner, \"\");\n        }\n    }\n\n    /**\n     * @notice Notifying the contract by calling its `universalReceiver` function with the following informations: typeId: `typeId`; data: `data`.\n     *\n     * @dev Achieves the goal of [LSP-1-UniversalReceiver] by allowing the account to be notified about incoming/outgoing transactions and enabling reactions to these actions.\n     * The reaction is achieved by having two external contracts ([LSP1UniversalReceiverDelegate]) that react on the whole transaction and on the specific typeId, respectively.\n     *\n     * The function performs the following steps:\n     *\n     * 1. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY].\n     *      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.\n     *\n     *      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function.\n     *\n     *\n     * 2. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX] + `bytes32(typeId)`.\n     *   (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.\n     *\n     *      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function.\n     *\n     * This function delegates internally the handling of native tokens to the {universalReceiver} function itself passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data.\n     *\n     * @param typeId The type of call received.\n     * @param receivedData The data received.\n     *\n     * @return returnedValues The ABI encoded return value of the LSP1UniversalReceiverDelegate call and the LSP1TypeIdDelegate call.\n     *\n     * @custom:events\n     * - {UniversalReceiver} when receiving native tokens.\n     * - {UniversalReceiver} event with the function parameters, call options, and the response of the UniversalReceiverDelegates (URD) contract that was called.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes memory receivedData\n    ) public payable virtual override returns (bytes memory returnedValues) {\n        if (msg.value != 0 && (typeId != _TYPEID_LSP0_VALUE_RECEIVED)) {\n            universalReceiver(_TYPEID_LSP0_VALUE_RECEIVED, msg.data);\n        }\n\n        // Query the ERC725Y storage with the data key {_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY}\n        bytes memory lsp1DelegateValue = _getData(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY\n        );\n        bytes memory resultDefaultDelegate;\n\n        if (lsp1DelegateValue.length >= 20) {\n            address lsp1Delegate = address(bytes20(lsp1DelegateValue));\n\n            // Checking LSP1 InterfaceId support\n            if (\n                lsp1Delegate.supportsERC165InterfaceUnchecked(\n                    _INTERFACEID_LSP1_DELEGATE\n                )\n            ) {\n                resultDefaultDelegate = ILSP1Delegate(lsp1Delegate)\n                    .universalReceiverDelegate(\n                        msg.sender,\n                        msg.value,\n                        typeId,\n                        receivedData\n                    );\n            }\n        }\n\n        // Generate the data key {_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX + <bytes32 typeId>}\n        bytes32 lsp1typeIdDelegateKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n\n        // Query the ERC725Y storage with the data key {_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX + <bytes32 typeId>}\n        bytes memory lsp1TypeIdDelegateValue = _getData(lsp1typeIdDelegateKey);\n        bytes memory resultTypeIdDelegate;\n\n        if (lsp1TypeIdDelegateValue.length >= 20) {\n            address lsp1Delegate = address(bytes20(lsp1TypeIdDelegateValue));\n\n            // Checking LSP1 InterfaceId support\n            if (\n                lsp1Delegate.supportsERC165InterfaceUnchecked(\n                    _INTERFACEID_LSP1_DELEGATE\n                )\n            ) {\n                resultTypeIdDelegate = ILSP1Delegate(lsp1Delegate)\n                    .universalReceiverDelegate(\n                        msg.sender,\n                        msg.value,\n                        typeId,\n                        receivedData\n                    );\n            }\n        }\n\n        returnedValues = abi.encode(\n            resultDefaultDelegate,\n            resultTypeIdDelegate\n        );\n        emit UniversalReceiver(\n            msg.sender,\n            msg.value,\n            typeId,\n            receivedData,\n            returnedValues\n        );\n    }\n\n    /**\n     * @inheritdoc LSP14Ownable2Step\n     *\n     * @custom:requirements\n     * - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     * - When notifying the new owner via LSP1, the `typeId` used must be the `keccak256(...)` hash of [LSP0OwnershipTransferStarted].\n     * - Pending owner cannot accept ownership in the same tx via the LSP1 hook.\n     */\n    function transferOwnership(\n        address pendingNewOwner\n    ) public virtual override(LSP14Ownable2Step, OwnableUnset) {\n        address currentOwner = owner();\n\n        // If the caller is the owner perform transferOwnership directly\n        if (msg.sender == currentOwner) {\n            // set the transfer ownership lock\n            _inTransferOwnership = true;\n\n            // set the pending owner\n            LSP14Ownable2Step._transferOwnership(pendingNewOwner);\n            emit OwnershipTransferStarted(currentOwner, pendingNewOwner);\n\n            // notify the pending owner through LSP1\n            pendingNewOwner.notifyUniversalReceiver(\n                _TYPEID_LSP0_OwnershipTransferStarted,\n                abi.encode(currentOwner, pendingNewOwner)\n            );\n\n            // reset the transfer ownership lock\n            _inTransferOwnership = false;\n        } else {\n            // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n            // Depending on the returnedStatus, a second call is done after transferring ownership\n            bool verifyAfter = _verifyCall(currentOwner);\n\n            // set the transfer ownership lock\n            _inTransferOwnership = true;\n\n            // Set the pending owner if the call is allowed\n            LSP14Ownable2Step._transferOwnership(pendingNewOwner);\n            emit OwnershipTransferStarted(currentOwner, pendingNewOwner);\n\n            // notify the pending owner through LSP1\n            pendingNewOwner.notifyUniversalReceiver(\n                _TYPEID_LSP0_OwnershipTransferStarted,\n                abi.encode(currentOwner, pendingNewOwner)\n            );\n\n            // reset the transfer ownership lock\n            _inTransferOwnership = false;\n\n            // If verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n            // The transferOwnership function does not return, second parameter of {_verifyCallResult} will be empty\n            if (verifyAfter) {\n                _verifyCallResult(currentOwner, \"\");\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc LSP14Ownable2Step\n     *\n     * @custom:requirements\n     * - Only the {pendingOwner} can call this function.\n     * - When notifying the previous owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_SenderNotification].\n     * - When notifying the new owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_RecipientNotification].\n     */\n    function acceptOwnership() public virtual override notInTransferOwnership {\n        address previousOwner = owner();\n        address pendingOwnerAddress = pendingOwner();\n\n        bool verifyAfter;\n\n        if (msg.sender != pendingOwnerAddress) {\n            // If the caller is not the owner, call {lsp20VerifyCall} on the pending owner\n            // Depending on the successStatus returned, a second call is done after transferring ownership\n            verifyAfter = _verifyCall(pendingOwnerAddress);\n\n            _setOwner(pendingOwnerAddress);\n            delete _pendingOwner;\n            delete _renounceOwnershipStartedAt;\n        } else {\n            _acceptOwnership();\n        }\n\n        // notify the previous owner if supports LSP1\n        previousOwner.notifyUniversalReceiver(\n            _TYPEID_LSP0_OwnershipTransferred_SenderNotification,\n            abi.encode(previousOwner, pendingOwnerAddress)\n        );\n\n        // notify the pending owner if supports LSP1\n        pendingOwnerAddress.notifyUniversalReceiver(\n            _TYPEID_LSP0_OwnershipTransferred_RecipientNotification,\n            abi.encode(previousOwner, pendingOwnerAddress)\n        );\n\n        // If msg.sender != pendingOwnerAddress & verifyAfter is true, Call {lsp20VerifyCallResult} on the new owner\n        // The transferOwnership function does not return, second parameter of {_verifyCallResult} will be empty\n        if (verifyAfter) {\n            _verifyCallResult(pendingOwnerAddress, \"\");\n        }\n    }\n\n    /**\n     * @inheritdoc LSP14Ownable2Step\n     *\n     * @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n     *\n     * @custom:danger Leaves the contract without an owner. Once ownership of the contract has been renounced, any functions that are restricted to be called by the owner or an address allowed by the owner will be permanently inaccessible, making these functions not callable anymore and unusable.\n     *\n     */\n    function renounceOwnership()\n        public\n        virtual\n        override(LSP14Ownable2Step, OwnableUnset)\n    {\n        address accountOwner = owner();\n\n        // If the caller is the owner perform renounceOwnership directly\n        if (msg.sender == accountOwner) {\n            address previousOwner = owner();\n            LSP14Ownable2Step._renounceOwnership();\n\n            if (owner() == address(0)) {\n                previousOwner.notifyUniversalReceiver(\n                    _TYPEID_LSP0_OwnershipTransferred_SenderNotification,\n                    abi.encode(accountOwner, address(0))\n                );\n            }\n        } else {\n            // If the caller is not the owner, call {lsp20VerifyCall} on the owner\n            // Depending on the returnedStatus, a second call is done after transferring ownership\n            bool verifyAfter = _verifyCall(accountOwner);\n\n            address previousOwner = owner();\n            LSP14Ownable2Step._renounceOwnership();\n\n            if (owner() == address(0)) {\n                previousOwner.notifyUniversalReceiver(\n                    _TYPEID_LSP0_OwnershipTransferred_SenderNotification,\n                    abi.encode(accountOwner, address(0))\n                );\n            }\n\n            // If verifyAfter is true, Call {lsp20VerifyCallResult} on the owner\n            // The transferOwnership function does not return, second parameter of {_verifyCallResult} will be empty\n            if (verifyAfter) {\n                _verifyCallResult(accountOwner, \"\");\n            }\n        }\n    }\n\n    /**\n     * @notice Checking if this contract supports the interface defined by the `bytes4` interface ID `interfaceId`.\n     *\n     * @dev Achieves the goal of [ERC-165] to detect supported interfaces and [LSP-17-ContractExtension] by\n     * checking if the interfaceId being queried is supported on another linked extension.\n     *\n     * If the contract doesn't support the `interfaceId`, it forwards the call to the\n     * `supportsInterface` extension according to [LSP-17-ContractExtension], and checks if the extension\n     * implements the interface defined by `interfaceId`.\n     *\n     * @param interfaceId The interface ID to check if the contract supports it.\n     *\n     * @return `true` if this contract implements the interface defined by `interfaceId`, `false` otherwise.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    )\n        public\n        view\n        virtual\n        override(ERC725XCore, ERC725YCore, LSP17Extendable)\n        returns (bool)\n    {\n        return\n            interfaceId == _INTERFACEID_ERC1271 ||\n            interfaceId == _INTERFACEID_LSP0 ||\n            interfaceId == _INTERFACEID_LSP1 ||\n            interfaceId == _INTERFACEID_LSP14 ||\n            interfaceId == _INTERFACEID_LSP20_CALL_VERIFICATION ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    /**\n     * @notice Achieves the goal of [EIP-1271] by validating signatures of smart contracts\n     * according to their own logic.\n     *\n     * @dev Handles two cases:\n     *\n     * 1. If the owner is an EOA, recovers an address from the hash and the signature provided:\n     *\n     *      - Returns the `_ERC1271_SUCCESSVALUE` if the address recovered is the same as the owner, indicating that it was a valid signature.\n     *\n     *      - If the address is different, it returns the `_ERC1271_FAILVALUE` indicating that the signature is not valid.\n     *\n     * 2. If the owner is a smart contract, it forwards the call of {isValidSignature()} to the owner contract:\n     *\n     *      - If the contract fails or returns the `_ERC1271_FAILVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_FAILVALUE`, indicating that the signature is not valid.\n     *\n     *      - If the {isValidSignature()} on the owner returned the `_ERC1271_SUCCESSVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_SUCCESSVALUE`, indicating that it's a valid signature.\n     *\n     * @param dataHash The hash of the data to be validated.\n     * @param signature A signature that can validate the previous parameter (Hash).\n     *\n     * @return returnedStatus A `bytes4` value that indicates if the signature is valid or not.\n     *\n     * @custom:warning This function does not enforce by default the inclusion of the address of this contract in the signature digest.\n     * It is recommended that protocols or applications using this contract include the targeted address (= this contract) in the data to sign.\n     * To ensure that a signature is valid for a specific LSP0ERC725Account and prevent signatures from the same EOA to be replayed\n     * across different LSP0ERC725Accounts.\n     */\n    function isValidSignature(\n        bytes32 dataHash,\n        bytes memory signature\n    ) public view virtual override returns (bytes4 returnedStatus) {\n        address _owner = owner();\n\n        // If owner is a contract\n        if (_owner.code.length != 0) {\n            (bool success, bytes memory result) = _owner.staticcall(\n                abi.encodeWithSelector(\n                    IERC1271.isValidSignature.selector,\n                    dataHash,\n                    signature\n                )\n            );\n\n            bool isValid = (success &&\n                result.length == 32 &&\n                abi.decode(result, (bytes32)) ==\n                bytes32(_ERC1271_SUCCESSVALUE));\n\n            return isValid ? _ERC1271_SUCCESSVALUE : _ERC1271_FAILVALUE;\n        }\n        // If owner is an EOA\n        else {\n            // if isValidSignature fail, the error is catched in returnedError\n            (address recoveredAddress, ECDSA.RecoverError returnedError) = ECDSA\n                .tryRecover(dataHash, signature);\n\n            // if recovering throws an error, return the fail value\n            if (returnedError != ECDSA.RecoverError.NoError)\n                return _ERC1271_FAILVALUE;\n\n            // if recovering is successful and the recovered address matches the owner's address,\n            // return the ERC1271 success value. Otherwise, return the ERC1271 fail value\n            // matches the address of the owner, otherwise return fail value\n            return\n                recoveredAddress == _owner\n                    ? _ERC1271_SUCCESSVALUE\n                    : _ERC1271_FAILVALUE;\n        }\n    }\n\n    // Internal functions\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value sent with the call to the extension if the function selector is mapped to a payable extension.\n     *\n     * Reverts if there is no extension for the function being called, except for the `bytes4(0)` function selector, which passes even if there is no extension for it.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint If you would like to forward the `msg.value` to the extension contract, you should store an additional `0x01` byte after the address of the extension under the corresponding LSP17 data key.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool isForwardingValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if value is associated with the extension call and extension function selector is not payable, use the universalReceiver\n        if (msg.value != 0 && !isForwardingValue) {\n            universalReceiver(_TYPEID_LSP0_VALUE_RECEIVED, callData);\n        }\n\n        // if no extension was found for bytes4(0) return don't revert\n        if (msg.sig == bytes4(0) && extension == address(0)) return \"\";\n\n        // if no extension was found for other function selectors, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: isForwardingValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address and the boolean indicating whether to forward the value received to the extension, stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     * - If the stored value is 20 bytes, return false for the boolean\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        bytes memory extensionData = ERC725YCore._getData(\n            mappedExtensionDataKey\n        );\n\n        // Prevent casting data shorter than 20 bytes to an address to avoid\n        // unintentionally calling a different extension, return address(0) instead.\n        if (extensionData.length < 20) {\n            return (address(0), false);\n        }\n\n        // CHECK if the `extensionData` is 21 bytes long\n        // - 20 bytes = extension's address\n        // - 1 byte `0x01` as a boolean indicating if the contract should forward the value to the extension or not\n        if (extensionData.length == 21) {\n            // If the last byte is set to `0x01` (`true`)\n            // this indicates that the contract should forward the value to the extension\n            if (extensionData[20] == 0x01) {\n                // Return the address of the extension\n                return (address(bytes20(extensionData)), true);\n            }\n        }\n\n        return (address(bytes20(extensionData)), false);\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP14 - Ownable 2-step standard, an extension of the [EIP173] (Ownable) standard with 2-step process to transfer or renounce ownership.\n */\ninterface ILSP14Ownable2Step {\n    /**\n     * @dev Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\n     * @notice The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\n     * @param previousOwner The address of the previous owner.\n     * @param newOwner The address of the new owner.\n     */\n    event OwnershipTransferStarted(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @inheritdoc OwnableUnset\n     * event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n     */\n\n    /**\n     * @dev Emitted when starting the {renounceOwnership(..)} 2-step process.\n     * @notice Ownership renouncement initiated.\n     */\n    event RenounceOwnershipStarted();\n\n    /**\n     * @dev Emitted when the ownership of the contract has been renounced.\n     * @notice Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`.\n     */\n    event OwnershipRenounced();\n\n    /**\n     * @inheritdoc OwnableUnset\n     * function {owner()} external view returns (address);\n     */\n\n    /**\n     * @dev The address that ownership of the contract is transferred to.\n     * This address may use {acceptOwnership()} to gain ownership of the contract.\n     */\n    function pendingOwner() external view returns (address);\n\n    /**\n     * @dev Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner.\n     *\n     * If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\n     *\n     * @notice Transfer ownership initiated by `newOwner`.\n     *\n     * @param newOwner The address of the new owner.\n     */\n    function transferOwnership(address newOwner) external;\n\n    /**\n     * @dev Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}.\n     *\n     * Once this function is called:\n     * - The current {owner()} will lose access to the functions restricted to the {owner()} only.\n     * - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\n     *\n     * @notice `msg.sender` is accepting ownership of contract: `address(this)`.\n     */\n    function acceptOwnership() external;\n\n    /**\n     * @dev Renounce ownership of the contract in a 2-step process.\n     *\n     * 1. The first call will initiate the process of renouncing ownership.\n     * 2. The second call is used as a confirmation and will leave the contract without an owner.\n     *\n     * @notice `msg.sender` is renouncing ownership of contract `address(this)`.\n     */\n    function renounceOwnership() external;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nbytes4 constant _INTERFACEID_LSP14 = 0x94be5999;\n\n// --- Type IDs\n\n// keccak256('LSP14OwnershipTransferStarted')\nbytes32 constant _TYPEID_LSP14_OwnershipTransferStarted = 0xee9a7c0924f740a2ca33d59b7f0c2929821ea9837ce043ce91c1823e9c4e52c0;\n\n// keccak256('LSP14OwnershipTransferred_SenderNotification')\nbytes32 constant _TYPEID_LSP14_OwnershipTransferred_SenderNotification = 0xa124442e1cc7b52d8e2ede2787d43527dc1f3ae0de87f50dd03e27a71834f74c;\n\n// keccak256('LSP14OwnershipTransferred_RecipientNotification')\nbytes32 constant _TYPEID_LSP14_OwnershipTransferred_RecipientNotification = 0xe32c7debcb817925ba4883fdbfc52797187f28f73f860641dab1a68d9b32902c;\n"},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to renounce ownership before the initial confirmation delay.\n * @notice Cannot confirm ownership renouncement yet. The ownership renouncement is allowed from: `renounceOwnershipStart` until: `renounceOwnershipEnd`.\n *\n * @param renounceOwnershipStart The start timestamp when one can confirm the renouncement of ownership.\n * @param renounceOwnershipEnd The end timestamp when one can confirm the renouncement of ownership.\n */\nerror LSP14NotInRenounceOwnershipInterval(\n    uint256 renounceOwnershipStart,\n    uint256 renounceOwnershipEnd\n);\n\n/**\n * @dev Reverts when trying to transfer ownership to the `address(this)`.\n * @notice Cannot transfer ownership to the address of the contract itself.\n */\nerror LSP14CannotTransferOwnershipToSelf();\n\n/**\n * @dev Reverts when pending owner accept ownership in the same transaction of transferring ownership.\n * @notice Cannot accept ownership in the same transaction with {transferOwnership(...)}.\n */\nerror LSP14MustAcceptOwnershipInSeparateTransaction();\n\n/**\n * @dev Reverts when the `caller` that is trying to accept ownership of the contract is not the pending owner.\n * @param caller The address that tried to accept ownership.\n */\nerror LSP14CallerNotPendingOwner(address caller);\n"},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {ILSP14Ownable2Step} from \"./ILSP14Ownable2Step.sol\";\n\n// modules\nimport {\n    OwnableUnset\n} from \"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\";\n\n// libraries\nimport {LSP1Utils} from \"../LSP1UniversalReceiver/LSP1Utils.sol\";\n\n// errors\nimport {\n    LSP14CallerNotPendingOwner,\n    LSP14MustAcceptOwnershipInSeparateTransaction,\n    LSP14CannotTransferOwnershipToSelf,\n    LSP14NotInRenounceOwnershipInterval\n} from \"./LSP14Errors.sol\";\n\n// constants\nimport {\n    _TYPEID_LSP14_OwnershipTransferStarted,\n    _TYPEID_LSP14_OwnershipTransferred_SenderNotification,\n    _TYPEID_LSP14_OwnershipTransferred_RecipientNotification\n} from \"./LSP14Constants.sol\";\n\n/**\n * @title LSP14Ownable2Step\n * @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42), Yamen Merhi (YamenMerhi), Daniel Afteni (B00ste)\n * @dev This contract is a modified version of the [`OwnableUnset.sol`] implementation, where transferring and renouncing ownership works as a 2-step process. This can be used as a confirmation mechanism to prevent potential mistakes when transferring ownership of the contract, where the control of the contract could be lost forever. (_e.g: providing the wrong address as a parameter to the function, transferring ownership to an EOA for which the user lost its private key, etc..._)\n */\nabstract contract LSP14Ownable2Step is ILSP14Ownable2Step, OwnableUnset {\n    using LSP1Utils for address;\n\n    /**\n     * @dev The number of block that MUST pass before one is able to confirm renouncing ownership.\n     * @return Number of blocks.\n     */\n    uint256 public constant RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY = 200;\n\n    /**\n     * @dev The number of blocks during which one can renounce ownership.\n     * @return Number of blocks.\n     */\n    uint256 public constant RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD = 200;\n\n    /**\n     * @dev The block number saved when initiating the process of renouncing ownerhsip.\n     */\n    uint256 internal _renounceOwnershipStartedAt;\n\n    /**\n     * @dev see {pendingOwner()}\n     */\n    address internal _pendingOwner;\n\n    /**\n     * @dev The boolean that indicates whether the contract is in an active ownership transfer phase\n     */\n    bool internal _inTransferOwnership;\n\n    /**\n     * @dev reverts when {_inTransferOwnership} variable is true\n     */\n    modifier notInTransferOwnership() virtual {\n        if (_inTransferOwnership) {\n            revert LSP14MustAcceptOwnershipInSeparateTransaction();\n        }\n        _;\n    }\n\n    /**\n     * @inheritdoc ILSP14Ownable2Step\n     *\n     * @custom:info If no ownership transfer is in progress, the pendingOwner will be `address(0).`.\n     */\n    function pendingOwner() public view virtual override returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @inheritdoc ILSP14Ownable2Step\n     *\n     * @custom:requirements `newOwner` cannot accept ownership of the contract in the same transaction. (For instance, via a callback from its {universalReceiver(...)} function).\n     */\n    function transferOwnership(\n        address newOwner\n    ) public virtual override(OwnableUnset, ILSP14Ownable2Step) onlyOwner {\n        // set the transfer ownership lock\n        _inTransferOwnership = true;\n\n        _transferOwnership(newOwner);\n\n        address currentOwner = owner();\n        emit OwnershipTransferStarted(currentOwner, newOwner);\n\n        newOwner.notifyUniversalReceiver(\n            _TYPEID_LSP14_OwnershipTransferStarted,\n            abi.encode(currentOwner, newOwner)\n        );\n\n        // reset the transfer ownership lock\n        _inTransferOwnership = false;\n    }\n\n    /**\n     * @inheritdoc ILSP14Ownable2Step\n     *\n     * @custom:requirements This function can only be called by the {pendingOwner()}.\n     */\n    function acceptOwnership() public virtual override notInTransferOwnership {\n        address previousOwner = owner();\n\n        _acceptOwnership();\n\n        previousOwner.notifyUniversalReceiver(\n            _TYPEID_LSP14_OwnershipTransferred_SenderNotification,\n            abi.encode(previousOwner, msg.sender)\n        );\n\n        msg.sender.notifyUniversalReceiver(\n            _TYPEID_LSP14_OwnershipTransferred_RecipientNotification,\n            abi.encode(previousOwner, msg.sender)\n        );\n    }\n\n    /**\n     * @inheritdoc ILSP14Ownable2Step\n     *\n     * @custom:danger Leaves the contract without an owner. Once ownership of the contract has been renounced, any function that is restricted to be called only by the owner will be permanently inaccessible, making these functions not callable anymore and unusable.\n     */\n    function renounceOwnership()\n        public\n        virtual\n        override(OwnableUnset, ILSP14Ownable2Step)\n        onlyOwner\n    {\n        address previousOwner = owner();\n        _renounceOwnership();\n\n        if (owner() == address(0)) {\n            previousOwner.notifyUniversalReceiver(\n                _TYPEID_LSP14_OwnershipTransferred_SenderNotification,\n                abi.encode(previousOwner, address(0))\n            );\n        }\n    }\n\n    // --- Internal methods\n\n    /**\n     * @dev Set the pending owner of the contract and cancel any renounce ownership process that was previously started.\n     *\n     * @param newOwner The address of the new pending owner.\n     *\n     * @custom:requirements `newOwner` cannot be the address of the contract itself.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        if (newOwner == address(this))\n            revert LSP14CannotTransferOwnershipToSelf();\n\n        _pendingOwner = newOwner;\n        delete _renounceOwnershipStartedAt;\n    }\n\n    /**\n     * @dev Set the pending owner of the contract as the new owner.\n     */\n    function _acceptOwnership() internal virtual {\n        if (msg.sender != pendingOwner())\n            revert LSP14CallerNotPendingOwner(msg.sender);\n\n        _setOwner(msg.sender);\n        delete _pendingOwner;\n        delete _renounceOwnershipStartedAt;\n    }\n\n    /**\n     * @dev Initiate or confirm the process of renouncing ownership after a specific delay of blocks have passed.\n     */\n    function _renounceOwnership() internal virtual {\n        uint256 currentBlock = block.number;\n        uint256 confirmationPeriodStart = _renounceOwnershipStartedAt +\n            RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY;\n        uint256 confirmationPeriodEnd = confirmationPeriodStart +\n            RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD;\n\n        // On the creation of a new network, `currentBlock` will be smaller than `confirmationPeriodEnd`,\n        // `_renounceOwnershipStartedAt == 0` will indicate that a renounceOwnership call is happening for the first time\n        if (\n            currentBlock > confirmationPeriodEnd ||\n            _renounceOwnershipStartedAt == 0\n        ) {\n            _renounceOwnershipStartedAt = currentBlock;\n            delete _pendingOwner;\n            emit RenounceOwnershipStarted();\n            return;\n        }\n\n        if (currentBlock < confirmationPeriodStart) {\n            revert LSP14NotInRenounceOwnershipInterval(\n                confirmationPeriodStart,\n                confirmationPeriodEnd\n            );\n        }\n\n        _setOwner(address(0));\n        delete _renounceOwnershipStartedAt;\n        delete _pendingOwner;\n        emit OwnershipRenounced();\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overrided.\n     * Up to the implementor contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver Delegate standard.\n * @dev This interface allows contracts implementing the LSP1UniversalReceiver function to delegate the reaction logic to another contract or account. By doing so, the main logic doesn't need to reside within the `universalReceiver` function itself, offering modularity and flexibility.\n */\ninterface ILSP1UniversalReceiverDelegate {\n    /**\n     * @dev A delegate function that reacts to calls forwarded from the `universalReceiver(..)` function. This allows for modular handling of the logic based on the `typeId` and `data` provided by the initial caller.\n     * @notice Reacted on received notification forwarded from `universalReceiver` with `typeId` & `data`.\n     *\n     * @param sender The address of the EOA or smart contract that initially called the `universalReceiver` function.\n     * @param value The amount sent by the `sender` to the `universalReceiver` function.\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the initial call to `universalReceiver`.\n     */\n    function universalReceiverDelegate(\n        address sender,\n        uint256 value,\n        bytes32 typeId,\n        bytes memory data\n    ) external returns (bytes memory);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"../LSP2ERC725YJSONSchema/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"../LSP1UniversalReceiver/LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface for the LSP20 Call Verification standard, a set of functions intended to perform verifications on behalf of another contract.\n *\n * @dev Interface to be inherited for contract supporting LSP20-CallVerification\n */\ninterface ILSP20CallVerifier {\n    /**\n     * @return returnedStatus MUST return the first 3 bytes of `lsp20VerifyCall(address,uint256,bytes)` function selector if the call to\n     * the function is allowed, concatened with a byte that determines if the lsp20VerifyCallResult function should\n     * be called after the original function call. The byte that invoke the lsp20VerifyCallResult function is strictly `0x01`.\n     *\n     * @param requestor The address that requested to make the call to `target`.\n     * @param target The address of the contract that implements the `LSP20CallVerification` interface.\n     * @param caller The address who called the function on the `target` contract.\n     * @param value The value sent by the caller to the function called on the msg.sender\n     * @param callData The calldata sent by the caller to the msg.sender\n     */\n    function lsp20VerifyCall(\n        address requestor,\n        address target,\n        address caller,\n        uint256 value,\n        bytes memory callData\n    ) external returns (bytes4 returnedStatus);\n\n    /**\n     * @return MUST return the lsp20VerifyCallResult function selector if the call to the function is allowed\n     *\n     * @param callHash The keccak256 hash of the parameters of {lsp20VerifyCall} concatenated\n     * @param callResult The value result of the function called on the msg.sender\n     */\n    function lsp20VerifyCallResult(\n        bytes32 callHash,\n        bytes memory callResult\n    ) external returns (bytes4);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {ILSP20CallVerifier as ILSP20} from \"./ILSP20CallVerifier.sol\";\n\n// errors\nimport {\n    LSP20CallVerificationFailed,\n    LSP20CallingVerifierFailed,\n    LSP20EOACannotVerifyCall\n} from \"./LSP20Errors.sol\";\n\n/**\n * @title Implementation of a contract calling the verification functions according to LSP20 - Call Verification standard.\n *\n * @dev Module to be inherited used to verify the execution of functions according to a verifier address.\n * Verification can happen before or after execution based on a returnedStatus.\n */\nabstract contract LSP20CallVerification {\n    /**\n     * @dev Calls {lsp20VerifyCall} function on the logicVerifier.\n     *\n     * @custom:info\n     * - Reverts in case the value returned does not match the returned status (lsp20VerifyCall selector).\n     * - Returns whether a verification after the execution should happen based on the last byte of the `returnedStatus`.\n     * - Reverts with no reason if the  data returned by `ILSP20(logicVerifier).lsp20VerifyCall(...)` cannot be decoded (_e.g:_ any other data type besides `bytes4`).\n     * See this link for more info: https://forum.soliditylang.org/t/call-for-feedback-the-future-of-try-catch-in-solidity/1497.\n     */\n    function _verifyCall(\n        address logicVerifier\n    ) internal virtual returns (bool verifyAfter) {\n        if (logicVerifier.code.length == 0) {\n            revert LSP20EOACannotVerifyCall(logicVerifier);\n        }\n\n        // Reverts with no reason if the returned data type is not a `bytes4` value\n        try\n            ILSP20(logicVerifier).lsp20VerifyCall(\n                msg.sender,\n                address(this),\n                msg.sender,\n                msg.value,\n                msg.data\n            )\n        returns (bytes4 returnedStatus) {\n            if (\n                bytes3(returnedStatus) !=\n                bytes3(ILSP20.lsp20VerifyCall.selector)\n            ) {\n                revert LSP20CallVerificationFailed({\n                    postCall: false,\n                    returnedStatus: returnedStatus\n                });\n            }\n\n            return returnedStatus[3] == 0x01;\n        } catch (bytes memory errorData) {\n            _revertWithLSP20DefaultError(false, errorData);\n        }\n    }\n\n    /**\n     * @dev Calls {lsp20VerifyCallResult} function on the logicVerifier.\n     *\n     * @custom:info\n     * - Reverts in case the value returned does not match the returned status (lsp20VerifyCallResult selector).\n     * - Reverts with no reason if the data returned by `ILSP20(logicVerifier).lsp20VerifyCallResult(...)` cannot be decoded (_e.g:_ any other data type besides `bytes4`).\n     * See this link for more info: https://forum.soliditylang.org/t/call-for-feedback-the-future-of-try-catch-in-solidity/1497.\n     */\n    function _verifyCallResult(\n        address logicVerifier,\n        bytes memory callResult\n    ) internal virtual {\n        // Reverts with no reason if the returned data type is not a `bytes4` value\n        try\n            ILSP20(logicVerifier).lsp20VerifyCallResult(\n                keccak256(\n                    abi.encodePacked(\n                        msg.sender,\n                        address(this),\n                        msg.sender,\n                        msg.value,\n                        msg.data\n                    )\n                ),\n                callResult\n            )\n        returns (bytes4 returnedStatus) {\n            if (returnedStatus != ILSP20.lsp20VerifyCallResult.selector) {\n                revert LSP20CallVerificationFailed({\n                    postCall: true,\n                    returnedStatus: returnedStatus\n                });\n            }\n\n            return;\n        } catch (bytes memory errorData) {\n            _revertWithLSP20DefaultError(true, errorData);\n        }\n    }\n\n    function _revertWithLSP20DefaultError(\n        bool postCall,\n        bytes memory returnedData\n    ) internal pure virtual {\n        // Look for revert reason and bubble it up if present\n        if (returnedData.length != 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returnedData)\n                revert(add(32, returnedData), returndata_size)\n            }\n        } else {\n            revert LSP20CallingVerifierFailed(postCall);\n        }\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// bytes4(keccak256(\"LSP20CallVerification\"))\nbytes4 constant _INTERFACEID_LSP20_CALL_VERIFICATION = 0x1a0eb6a5;\n\n// `lsp20VerifyCall(address,address,address,uint256,bytes)` selector XOR `lsp20VerifyCallResult(bytes32,bytes)` selector\nbytes4 constant _INTERFACEID_LSP20_CALL_VERIFIER = 0x0d6ecac7;\n\n// bytes4(bytes.concat(bytes3(ILSP20.lsp20VerifyCall.selector), hex\"01\"))\nbytes4 constant _LSP20_VERIFY_CALL_SUCCESS_VALUE_WITH_POST_VERIFICATION = 0xde928f01;\n\n// bytes4(bytes.concat(bytes3(ILSP20.lsp20VerifyCall.selector), hex\"00\"))\nbytes4 constant _LSP20_VERIFY_CALL_SUCCESS_VALUE_WITHOUT_POST_VERIFICATION = 0xde928f00;\n\n// bytes4(ILSP20.lsp20VerifyCallResult.selector)\nbytes4 constant _LSP20_VERIFY_CALL_RESULT_SUCCESS_VALUE = 0xd3fc45d3;\n"},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when the call to the owner fail with no revert reason\n * @param postCall True if the execution call was done, False otherwise\n */\nerror LSP20CallingVerifierFailed(bool postCall);\n\n/**\n * @dev reverts when the call to the owner does not return the LSP20 success value\n * @param postCall True if the execution call was done, False otherwise\n * @param returnedStatus The bytes4 decoded data returned by the logic verifier.\n */\nerror LSP20CallVerificationFailed(bool postCall, bytes4 returnedStatus);\n\n/**\n * @dev Reverts when the logic verifier is an Externally Owned Account (EOA) that cannot return the LSP20 success value.\n * @param logicVerifier The address of the logic verifier\n */\nerror LSP20EOACannotVerifyCall(address logicVerifier);\n"},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/Version.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nabstract contract Version {\n    /**\n     * @dev Get the version of the contract.\n     * @notice Contract version.\n     *\n     * @return The version of the the contract.\n     */\n    // DO NOT CHANGE\n    // Comments block below is used by release-please to automatically update the version in this file.\n    // x-release-please-start-version\n    string public constant VERSION = \"0.14.0\";\n\n    // x-release-please-end\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/UP.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {Version} from \"@lukso/lsp-smart-contracts/contracts/Version.sol\";\nimport {LSP0ERC725AccountCore} from \"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol\";\nimport {OwnableUnset} from \"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\";\n\n// constants\nimport {_TYPEID_LSP0_VALUE_RECEIVED} from \"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol\";\n\n/**\n * @title Deployable Implementation of [LSP-0-ERC725Account] Standard.\n *\n * @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\n *\n * @dev A smart contract account including basic functionalities such as:\n * - Detecting supported standards using [ERC-165]\n * - Executing several operation on other addresses including creating contracts using [ERC-725X]\n * - A generic data key-value store using [ERC-725Y]\n * - Validating signatures using [ERC-1271]\n * - Receiving notification and react on them using [LSP-1-UniversalReceiver]\n * - Safer ownership management through 2-steps transfer using [LSP-14-Ownable2Step]\n * - Extending the account with new functions and interfaceIds of future standards using [LSP-17-ContractExtension]\n * - Verifying calls on the owner to make it easier to interact with the account directly using [LSP-20-CallVerification]\n */\ncontract LSP0ERC725Account is LSP0ERC725AccountCore, Version {\n    /**\n     * @notice Deploying a LSP0ERC725Account contract with owner set to address `initialOwner`.\n     *\n     * @dev Set `initialOwner` as the contract owner.\n     * - The `constructor` also allows funding the contract on deployment.\n     * - The `initialOwner` will then be allowed to call protected functions marked with the `onlyOwner` modifier.\n     *\n     * @param initialOwner The owner of the contract.\n     *\n     * @custom:events\n     * - {UniversalReceiver} event when funding the contract on deployment.\n     * - {OwnershipTransferred} event when `initialOwner` is set as the contract {owner}.\n     */\n    constructor(address initialOwner) payable {\n        if (msg.value != 0) {\n            emit UniversalReceiver(\n                msg.sender,\n                msg.value,\n                _TYPEID_LSP0_VALUE_RECEIVED,\n                \"\",\n                \"\"\n            );\n        }\n\n        OwnableUnset._setOwner(initialOwner);\n    }\n}\n"},"solidity-bytes-utils/contracts/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n              add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n              not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                    sc,\n                    add(\n                        and(\n                            fslot,\n                            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                        ),\n                        and(mload(mc), mask)\n                    )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        view\n        returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725XCore.sol","exportedSymbols":{"Address":[4465],"BytesLib":[6720],"Create2":[4546],"ERC165":[5165],"ERC725XCore":[588],"ERC725X_ContractDeploymentFailed":[989],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[986],"ERC725X_ExecuteParametersEmptyArray":[998],"ERC725X_ExecuteParametersLengthMismatch":[995],"ERC725X_InsufficientBalance":[972],"ERC725X_MsgValueDisallowedInDelegateCall":[983],"ERC725X_MsgValueDisallowedInStaticCall":[980],"ERC725X_NoContractBytecodeProvided":[992],"ERC725X_UnknownOperationType":[977],"IERC165":[5371],"IERC725X":[1070],"OPERATION_0_CALL":[834],"OPERATION_1_CREATE":[837],"OPERATION_2_CREATE2":[840],"OPERATION_3_STATICCALL":[843],"OPERATION_4_DELEGATECALL":[846],"OwnableUnset":[955],"_INTERFACEID_ERC725X":[828]},"id":589,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":5372,"src":"78:80:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"86:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol","file":"./interfaces/IERC725X.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":1071,"src":"159:51:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"167:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":4547,"src":"225:66:0","symbolAliases":[{"foreign":{"id":6,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"233:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":4466,"src":"292:66:0","symbolAliases":[{"foreign":{"id":8,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"300:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","file":"solidity-bytes-utils/contracts/BytesLib.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":6721,"src":"359:69:0","symbolAliases":[{"foreign":{"id":10,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"367:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":13,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":5166,"src":"441:78:0","symbolAliases":[{"foreign":{"id":12,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"449:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":15,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":956,"src":"520:55:0","symbolAliases":[{"foreign":{"id":14,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"528:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","file":"./constants.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":847,"src":"590:188:0","symbolAliases":[{"foreign":{"id":16,"name":"_INTERFACEID_ERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"603:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":17,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"629:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":18,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"651:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":19,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"675:19:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":20,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"700:22:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":21,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"728:24:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":589,"sourceUnit":1008,"src":"780:409:0","symbolAliases":[{"foreign":{"id":23,"name":"ERC725X_InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"793:27:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":24,"name":"ERC725X_UnknownOperationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"826:28:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":25,"name":"ERC725X_MsgValueDisallowedInStaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"860:38:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":26,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"904:40:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":27,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"950:52:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":28,"name":"ERC725X_ContractDeploymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"1008:32:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":29,"name":"ERC725X_NoContractBytecodeProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1046:34:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":30,"name":"ERC725X_ExecuteParametersLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1086:39:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":31,"name":"ERC725X_ExecuteParametersEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1131:35:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":34,"name":"OwnableUnset","nameLocations":["1701:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"1701:12:0"},"id":35,"nodeType":"InheritanceSpecifier","src":"1701:12:0"},{"baseName":{"id":36,"name":"ERC165","nameLocations":["1715:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5165,"src":"1715:6:0"},"id":37,"nodeType":"InheritanceSpecifier","src":"1715:6:0"},{"baseName":{"id":38,"name":"IERC725X","nameLocations":["1723:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":1070,"src":"1723:8:0"},"id":39,"nodeType":"InheritanceSpecifier","src":"1723:8:0"}],"canonicalName":"ERC725XCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1191:476:0","text":" @title Core implementation of ERC725X sub-standard, a generic executor.\n @author Fabian Vogelsteller <fabian@lukso.network>\n It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n This is the basis for a smart contract based account system, but could also be used as a proxy account system."},"fullyImplemented":true,"id":588,"linearizedBaseContracts":[588,1070,5165,5371,955],"name":"ERC725XCore","nameLocation":"1686:11:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1050],"body":{"id":63,"nodeType":"Block","src":"2720:68:0","statements":[{"expression":{"arguments":[{"id":57,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"2746:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":58,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2761:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":59,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2769:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2776:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2737:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":55,"id":62,"nodeType":"Return","src":"2730:51:0"}]},"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"1738:784:0","text":" @inheritdoc IERC725X\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully.\n - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0.\n - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\n @custom:events\n - {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL).\n - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2)."},"functionSelector":"44c028fe","id":64,"implemented":true,"kind":"function","modifiers":[{"id":52,"kind":"modifierInvocation","modifierName":{"id":51,"name":"onlyOwner","nameLocations":["2687:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"2687:9:0"},"nodeType":"ModifierInvocation","src":"2687:9:0"}],"name":"execute","nameLocation":"2536:7:0","nodeType":"FunctionDefinition","overrides":{"id":50,"nodeType":"OverrideSpecifier","overrides":[],"src":"2678:8:0"},"parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"operationType","nameLocation":"2561:13:0","nodeType":"VariableDeclaration","scope":64,"src":"2553:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"target","nameLocation":"2592:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2584:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"value","nameLocation":"2616:5:0","nodeType":"VariableDeclaration","scope":64,"src":"2608:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"data","nameLocation":"2644:4:0","nodeType":"VariableDeclaration","scope":64,"src":"2631:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":47,"name":"bytes","nodeType":"ElementaryTypeName","src":"2631:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2543:111:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2706:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":53,"name":"bytes","nodeType":"ElementaryTypeName","src":"2706:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2705:14:0"},"scope":588,"src":"2527:261:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1069],"body":{"id":93,"nodeType":"Block","src":"3786:77:0","statements":[{"expression":{"arguments":[{"id":87,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"3817:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":88,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3833:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":89,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3842:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":90,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"3850:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":86,"name":"_executeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3803:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bytes memory[] memory)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":85,"id":92,"nodeType":"Return","src":"3796:60:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2794:754:0","text":" @inheritdoc IERC725X\n @custom:requirements\n - All the array parameters provided MUST be equal and have the same length.\n - SHOULD only be callable by the {owner} of the contract.\n - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\n @custom:warning\n - The `msg.value` should not be trusted for any method called with `operationType`: `DELEGATECALL` (4).\n @custom:events\n - {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL)\n - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)"},"functionSelector":"31858452","id":94,"implemented":true,"kind":"function","modifiers":[{"id":81,"kind":"modifierInvocation","modifierName":{"id":80,"name":"onlyOwner","nameLocations":["3751:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"3751:9:0"},"nodeType":"ModifierInvocation","src":"3751:9:0"}],"name":"executeBatch","nameLocation":"3562:12:0","nodeType":"FunctionDefinition","overrides":{"id":79,"nodeType":"OverrideSpecifier","overrides":[],"src":"3742:8:0"},"parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"operationsType","nameLocation":"3601:14:0","nodeType":"VariableDeclaration","scope":94,"src":"3584:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67,"nodeType":"ArrayTypeName","src":"3584:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"targets","nameLocation":"3642:7:0","nodeType":"VariableDeclaration","scope":94,"src":"3625:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"3625:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":70,"nodeType":"ArrayTypeName","src":"3625:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"values","nameLocation":"3676:6:0","nodeType":"VariableDeclaration","scope":94,"src":"3659:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73,"nodeType":"ArrayTypeName","src":"3659:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"datas","nameLocation":"3707:5:0","nodeType":"VariableDeclaration","scope":94,"src":"3692:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":75,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":76,"nodeType":"ArrayTypeName","src":"3692:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3574:144:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"3770:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":82,"name":"bytes","nodeType":"ElementaryTypeName","src":"3770:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":83,"nodeType":"ArrayTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3769:16:0"},"scope":588,"src":"3553:310:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[5164,5370],"body":{"id":114,"nodeType":"Block","src":"4033:123:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":105,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4062:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":106,"name":"_INTERFACEID_ERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4077:20:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4062:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":110,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4137:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":108,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4113:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725XCore_$588_$","typeString":"type(contract super ERC725XCore)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4119:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5164,"src":"4113:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4113:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4062:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":104,"id":113,"nodeType":"Return","src":"4043:106:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3869:37:0","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":115,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3920:17:0","nodeType":"FunctionDefinition","overrides":{"id":101,"nodeType":"OverrideSpecifier","overrides":[{"id":99,"name":"IERC165","nameLocations":["4001:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5371,"src":"4001:7:0"},{"id":100,"name":"ERC165","nameLocations":["4010:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5165,"src":"4010:6:0"}],"src":"3992:25:0"},"parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"interfaceId","nameLocation":"3954:11:0","nodeType":"VariableDeclaration","scope":115,"src":"3947:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":96,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3947:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3937:34:0"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"4027:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":102,"name":"bool","nodeType":"ElementaryTypeName","src":"4027:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4026:6:0"},"scope":588,"src":"3911:245:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"4487:1786:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":129,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4517:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":130,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4534:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4517:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":139,"nodeType":"IfStatement","src":"4513:104:0","trueBody":{"id":138,"nodeType":"Block","src":"4552:65:0","statements":[{"expression":{"arguments":[{"id":133,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"4586:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"4594:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":135,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4601:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":132,"name":"_executeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4573:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes memory) returns (bytes memory)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":128,"id":137,"nodeType":"Return","src":"4566:40:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":140,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4661:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":141,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4678:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4661:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":160,"nodeType":"IfStatement","src":"4657:232:0","trueBody":{"id":159,"nodeType":"Block","src":"4698:191:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":143,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"4716:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4734:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4726:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"4726:7:0","typeDescriptions":{}}},"id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4726:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4716:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":153,"nodeType":"IfStatement","src":"4712:120:0","trueBody":{"id":152,"nodeType":"Block","src":"4738:94:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":149,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"4763:52:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"RevertStatement","src":"4756:61:0"}]}},{"expression":{"arguments":[{"id":155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"4866:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"4873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":154,"name":"_deployCreate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4852:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) returns (bytes memory)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4852:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":128,"id":158,"nodeType":"Return","src":"4845:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":161,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4934:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":162,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4951:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4934:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":181,"nodeType":"IfStatement","src":"4930:234:0","trueBody":{"id":180,"nodeType":"Block","src":"4972:192:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":164,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"4990:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5008:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5000:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:0","typeDescriptions":{}}},"id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4990:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":174,"nodeType":"IfStatement","src":"4986:120:0","trueBody":{"id":173,"nodeType":"Block","src":"5012:94:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":170,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"5037:52:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"RevertStatement","src":"5030:61:0"}]}},{"expression":{"arguments":[{"id":176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"5141:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":177,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"5148:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":175,"name":"_deployCreate2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"5126:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) returns (bytes memory)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":128,"id":179,"nodeType":"Return","src":"5119:34:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":182,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"5200:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":183,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"5217:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5200:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":199,"nodeType":"IfStatement","src":"5196:218:0","trueBody":{"id":198,"nodeType":"Block","src":"5241:173:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"5259:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5268:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5259:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":192,"nodeType":"IfStatement","src":"5255:96:0","trueBody":{"id":191,"nodeType":"Block","src":"5271:80:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":188,"name":"ERC725X_MsgValueDisallowedInStaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5296:38:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"RevertStatement","src":"5289:47:0"}]}},{"expression":{"arguments":[{"id":194,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"5390:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":195,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"5398:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":193,"name":"_executeStaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5371:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5371:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":128,"id":197,"nodeType":"Return","src":"5364:39:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"5986:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":201,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"6003:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5986:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":217,"nodeType":"IfStatement","src":"5982:224:0","trueBody":{"id":216,"nodeType":"Block","src":"6029:177:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"6047:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6056:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6047:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":210,"nodeType":"IfStatement","src":"6043:98:0","trueBody":{"id":209,"nodeType":"Block","src":"6059:82:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6084:40:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6084:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"RevertStatement","src":"6077:49:0"}]}},{"expression":{"arguments":[{"id":212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"6182:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":213,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"6190:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":211,"name":"_executeDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6161:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6161:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":128,"id":215,"nodeType":"Return","src":"6154:41:0"}]}},{"errorCall":{"arguments":[{"id":219,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"6252:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":218,"name":"ERC725X_UnknownOperationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6223:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6223:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"RevertStatement","src":"6216:50:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"4162:151:0","text":" @dev check the `operationType` provided and perform the associated low-level opcode after checking for requirements (see {execute})."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"4327:8:0","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"operationType","nameLocation":"4353:13:0","nodeType":"VariableDeclaration","scope":223,"src":"4345:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"target","nameLocation":"4384:6:0","nodeType":"VariableDeclaration","scope":223,"src":"4376:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"4376:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"value","nameLocation":"4408:5:0","nodeType":"VariableDeclaration","scope":223,"src":"4400:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"data","nameLocation":"4436:4:0","nodeType":"VariableDeclaration","scope":223,"src":"4423:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":123,"name":"bytes","nodeType":"ElementaryTypeName","src":"4423:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4335:111:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"4473:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"4473:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:14:0"},"scope":588,"src":"4318:1955:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":321,"nodeType":"Block","src":"6663:805:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":242,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"6690:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6705:6:0","memberName":"length","nodeType":"MemberAccess","src":"6690:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":244,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6715:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6723:6:0","memberName":"length","nodeType":"MemberAccess","src":"6715:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6690:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":247,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6746:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6754:6:0","memberName":"length","nodeType":"MemberAccess","src":"6746:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":249,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6764:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6771:6:0","memberName":"length","nodeType":"MemberAccess","src":"6764:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6746:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":252,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6781:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6788:6:0","memberName":"length","nodeType":"MemberAccess","src":"6781:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":254,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"6798:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6804:6:0","memberName":"length","nodeType":"MemberAccess","src":"6798:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6781:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6746:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6745:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6690:121:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":264,"nodeType":"IfStatement","src":"6673:222:0","trueBody":{"id":263,"nodeType":"Block","src":"6822:73:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":260,"name":"ERC725X_ExecuteParametersLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6843:39:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"RevertStatement","src":"6836:48:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":265,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"6909:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6924:6:0","memberName":"length","nodeType":"MemberAccess","src":"6909:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6934:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6909:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":273,"nodeType":"IfStatement","src":"6905:101:0","trueBody":{"id":272,"nodeType":"Block","src":"6937:69:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":269,"name":"ERC725X_ExecuteParametersEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"6958:35:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6958:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"RevertStatement","src":"6951:44:0"}]}},{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"result","nameLocation":"7031:6:0","nodeType":"VariableDeclaration","scope":321,"src":"7016:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":276,"name":"bytes","nodeType":"ElementaryTypeName","src":"7016:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":277,"nodeType":"ArrayTypeName","src":"7016:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":285,"initialValue":{"arguments":[{"expression":{"id":282,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7052:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:6:0","memberName":"length","nodeType":"MemberAccess","src":"7052:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7040:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":279,"name":"bytes","nodeType":"ElementaryTypeName","src":"7044:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":280,"nodeType":"ArrayTypeName","src":"7044:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7040:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7016:58:0"},{"body":{"id":317,"nodeType":"Block","src":"7134:304:0","statements":[{"expression":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7148:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":296,"indexExpression":{"id":295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7155:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7148:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":298,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7186:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":300,"indexExpression":{"id":299,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7201:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7186:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":301,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7221:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":303,"indexExpression":{"id":302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7229:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7221:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":304,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"7249:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":306,"indexExpression":{"id":305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7256:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7249:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":307,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7276:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":309,"indexExpression":{"id":308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7282:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7276:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":297,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"7160:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:138:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7148:150:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":312,"nodeType":"ExpressionStatement","src":"7148:150:0"},{"id":316,"nodeType":"UncheckedBlock","src":"7382:46:0","statements":[{"expression":{"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7410:3:0","subExpression":{"id":313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7412:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ExpressionStatement","src":"7410:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"7105:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":291,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7109:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7124:6:0","memberName":"length","nodeType":"MemberAccess","src":"7109:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7105:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"initializationExpression":{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"i","nameLocation":"7098:1:0","nodeType":"VariableDeclaration","scope":318,"src":"7090:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"7090:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":289,"initialValue":{"hexValue":"30","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7102:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7090:13:0"},"nodeType":"ForStatement","src":"7085:353:0"},{"expression":{"id":319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7455:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":241,"id":320,"nodeType":"Return","src":"7448:13:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6279:170:0","text":" @dev check each `operationType` provided in the batch and perform the associated low-level opcode after checking for requirements (see {executeBatch})."},"id":322,"implemented":true,"kind":"function","modifiers":[],"name":"_executeBatch","nameLocation":"6463:13:0","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"operationsType","nameLocation":"6503:14:0","nodeType":"VariableDeclaration","scope":322,"src":"6486:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":226,"nodeType":"ArrayTypeName","src":"6486:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"targets","nameLocation":"6544:7:0","nodeType":"VariableDeclaration","scope":322,"src":"6527:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"6527:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":229,"nodeType":"ArrayTypeName","src":"6527:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"values","nameLocation":"6578:6:0","nodeType":"VariableDeclaration","scope":322,"src":"6561:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"6561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ArrayTypeName","src":"6561:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"datas","nameLocation":"6609:5:0","nodeType":"VariableDeclaration","scope":322,"src":"6594:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":234,"name":"bytes","nodeType":"ElementaryTypeName","src":"6594:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":235,"nodeType":"ArrayTypeName","src":"6594:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6476:144:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"6647:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"6647:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":239,"nodeType":"ArrayTypeName","src":"6647:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6646:16:0"},"scope":588,"src":"6454:1014:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"7907:538:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":336,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7929:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}],"id":335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7921:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"7921:7:0","typeDescriptions":{}}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7921:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7935:7:0","memberName":"balance","nodeType":"MemberAccess","src":"7921:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7945:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7921:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":351,"nodeType":"IfStatement","src":"7917:124:0","trueBody":{"id":350,"nodeType":"Block","src":"7952:89:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8009:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8001:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"8001:7:0","typeDescriptions":{}}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8015:7:0","memberName":"balance","nodeType":"MemberAccess","src":"8001:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8024:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":341,"name":"ERC725X_InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"7973:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"RevertStatement","src":"7966:64:0"}]}},{"eventCall":{"arguments":[{"id":353,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8065:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":354,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8083:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8091:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8098:6:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":352,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"8056:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8056:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"EmitStatement","src":"8051:60:0"},{"assignments":[363,365],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"success","nameLocation":"8187:7:0","nodeType":"VariableDeclaration","scope":380,"src":"8182:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"8182:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"returnData","nameLocation":"8209:10:0","nodeType":"VariableDeclaration","scope":380,"src":"8196:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":364,"name":"bytes","nodeType":"ElementaryTypeName","src":"8196:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":372,"initialValue":{"arguments":[{"id":370,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8262:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":366,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8223:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8230:4:0","memberName":"call","nodeType":"MemberAccess","src":"8223:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8242:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8223:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8223:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8181:95:0"},{"expression":{"arguments":[{"id":375,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"8347:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":376,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"8372:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8400:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":373,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"8305:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4465_$","typeString":"type(library Address)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8313:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4444,"src":"8305:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8305:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":333,"id":379,"nodeType":"Return","src":"8286:152:0"}]},"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"7474:279:0","text":" @dev Perform low-level call (operation type = 0)\n @param target The address on which call is executed\n @param value The value to be sent with the call\n @param data The data to be sent with the call\n @return result The data from the call"},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_executeCall","nameLocation":"7767:12:0","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"target","nameLocation":"7797:6:0","nodeType":"VariableDeclaration","scope":381,"src":"7789:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"7789:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"value","nameLocation":"7821:5:0","nodeType":"VariableDeclaration","scope":381,"src":"7813:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"7813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"data","nameLocation":"7849:4:0","nodeType":"VariableDeclaration","scope":381,"src":"7836:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":328,"name":"bytes","nodeType":"ElementaryTypeName","src":"7836:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7779:80:0"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"result","nameLocation":"7899:6:0","nodeType":"VariableDeclaration","scope":381,"src":"7886:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":331,"name":"bytes","nodeType":"ElementaryTypeName","src":"7886:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7885:21:0"},"scope":588,"src":"7758:687:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"8845:376:0","statements":[{"eventCall":{"arguments":[{"id":392,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"8869:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":393,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8893:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8901:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":397,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8904:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":395,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8904:6:0","typeDescriptions":{}}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8904:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":391,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"8860:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8860:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"EmitStatement","src":"8855:62:0"},{"assignments":[402,404],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"success","nameLocation":"8993:7:0","nodeType":"VariableDeclaration","scope":417,"src":"8988:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"8988:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"returnData","nameLocation":"9015:10:0","nodeType":"VariableDeclaration","scope":417,"src":"9002:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":403,"name":"bytes","nodeType":"ElementaryTypeName","src":"9002:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":409,"initialValue":{"arguments":[{"id":407,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"9047:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":405,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9029:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9036:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"9029:17:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8987:65:0"},{"expression":{"arguments":[{"id":412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"9123:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":413,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9148:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9176:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":410,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"9081:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4465_$","typeString":"type(library Address)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9089:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4444,"src":"9081:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":390,"id":416,"nodeType":"Return","src":"9062:152:0"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"8451:257:0","text":" @dev Perform low-level staticcall (operation type = 3)\n @param target The address on which staticcall is executed\n @param data The data to be sent with the staticcall\n @return result The data returned from the staticcall"},"id":418,"implemented":true,"kind":"function","modifiers":[],"name":"_executeStaticCall","nameLocation":"8722:18:0","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"target","nameLocation":"8758:6:0","nodeType":"VariableDeclaration","scope":418,"src":"8750:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"data","nameLocation":"8787:4:0","nodeType":"VariableDeclaration","scope":418,"src":"8774:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"8774:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8740:57:0"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"result","nameLocation":"8837:6:0","nodeType":"VariableDeclaration","scope":418,"src":"8824:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":388,"name":"bytes","nodeType":"ElementaryTypeName","src":"8824:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8823:21:0"},"scope":588,"src":"8713:508:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":454,"nodeType":"Block","src":"9763:380:0","statements":[{"eventCall":{"arguments":[{"id":429,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9787:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":430,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"9813:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9821:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9831:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9824:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":432,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9824:6:0","typeDescriptions":{}}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":428,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"9778:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9778:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"EmitStatement","src":"9773:64:0"},{"assignments":[439,441],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"success","nameLocation":"9913:7:0","nodeType":"VariableDeclaration","scope":454,"src":"9908:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":438,"name":"bool","nodeType":"ElementaryTypeName","src":"9908:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"returnData","nameLocation":"9935:10:0","nodeType":"VariableDeclaration","scope":454,"src":"9922:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":440,"name":"bytes","nodeType":"ElementaryTypeName","src":"9922:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":446,"initialValue":{"arguments":[{"id":444,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9969:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":442,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"9949:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9956:12:0","memberName":"delegatecall","nodeType":"MemberAccess","src":"9949:19:0","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9907:67:0"},{"expression":{"arguments":[{"id":449,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"10045:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":450,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"10070:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10098:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":447,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"10003:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4465_$","typeString":"type(library Address)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10011:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4444,"src":"10003:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10003:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":427,"id":453,"nodeType":"Return","src":"9984:152:0"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"9227:397:0","text":" @dev Perform low-level delegatecall (operation type = 4)\n @param target The address on which delegatecall is executed\n @param data The data to be sent with the delegatecall\n @return result The data returned from the delegatecall\n @custom:warning The `msg.value` should not be trusted for any method called with `operationType`: `DELEGATECALL` (4)."},"id":455,"implemented":true,"kind":"function","modifiers":[],"name":"_executeDelegateCall","nameLocation":"9638:20:0","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"target","nameLocation":"9676:6:0","nodeType":"VariableDeclaration","scope":455,"src":"9668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"9668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"data","nameLocation":"9705:4:0","nodeType":"VariableDeclaration","scope":455,"src":"9692:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":422,"name":"bytes","nodeType":"ElementaryTypeName","src":"9692:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9658:57:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"result","nameLocation":"9755:6:0","nodeType":"VariableDeclaration","scope":455,"src":"9742:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":425,"name":"bytes","nodeType":"ElementaryTypeName","src":"9742:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9741:21:0"},"scope":588,"src":"9629:514:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":522,"nodeType":"Block","src":"10628:826:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":467,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10650:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}],"id":466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10642:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:0","typeDescriptions":{}}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10642:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10656:7:0","memberName":"balance","nodeType":"MemberAccess","src":"10642:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"10666:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10642:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"10638:124:0","trueBody":{"id":481,"nodeType":"Block","src":"10673:89:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":475,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10730:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$588","typeString":"contract ERC725XCore"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10722:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"10722:7:0","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10722:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10736:7:0","memberName":"balance","nodeType":"MemberAccess","src":"10722:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"10745:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":472,"name":"ERC725X_InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"10694:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10694:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"RevertStatement","src":"10687:64:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"10776:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10789:6:0","memberName":"length","nodeType":"MemberAccess","src":"10776:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10799:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10776:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":491,"nodeType":"IfStatement","src":"10772:98:0","trueBody":{"id":490,"nodeType":"Block","src":"10802:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":487,"name":"ERC725X_NoContractBytecodeProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10823:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10823:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"RevertStatement","src":"10816:43:0"}]}},{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"contractAddress","nameLocation":"10888:15:0","nodeType":"VariableDeclaration","scope":522,"src":"10880:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"10880:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":494,"nodeType":"VariableDeclarationStatement","src":"10880:23:0"},{"AST":{"nodeType":"YulBlock","src":"10978:164:0","statements":[{"nodeType":"YulAssignment","src":"10992:140:0","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11035:5:0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"11062:12:0"},{"kind":"number","nodeType":"YulLiteral","src":"11076:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11058:3:0"},"nodeType":"YulFunctionCall","src":"11058:23:0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"11105:12:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11099:5:0"},"nodeType":"YulFunctionCall","src":"11099:19:0"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"11011:6:0"},"nodeType":"YulFunctionCall","src":"11011:121:0"},"variableNames":[{"name":"contractAddress","nodeType":"YulIdentifier","src":"10992:15:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":493,"isOffset":false,"isSlot":false,"src":"10992:15:0","valueSize":1},{"declaration":460,"isOffset":false,"isSlot":false,"src":"11062:12:0","valueSize":1},{"declaration":460,"isOffset":false,"isSlot":false,"src":"11105:12:0","valueSize":1},{"declaration":458,"isOffset":false,"isSlot":false,"src":"11035:5:0","valueSize":1}],"id":495,"nodeType":"InlineAssembly","src":"10969:173:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"11156:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11175:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"11175:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11175:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11156:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"11152:101:0","trueBody":{"id":505,"nodeType":"Block","src":"11187:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":502,"name":"ERC725X_ContractDeploymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"11208:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11208:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"11201:41:0"}]}},{"eventCall":{"arguments":[{"id":508,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"11297:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":509,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"11329:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"11358:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11385:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11377:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11377:7:0","typeDescriptions":{}}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":507,"name":"ContractCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11268:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,uint256,bytes32)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11268:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"EmitStatement","src":"11263:134:0"},{"expression":{"arguments":[{"id":519,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"11431:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":517,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11414:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11418:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"11414:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11414:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":464,"id":521,"nodeType":"Return","src":"11407:40:0"}]},"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"10149:335:0","text":" @dev Deploy a contract using the `CREATE` opcode (operation type = 1)\n @param value The value to be sent to the contract created\n @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s)\n @return newContract The address of the contract created as bytes"},"id":523,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate","nameLocation":"10498:13:0","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"value","nameLocation":"10529:5:0","nodeType":"VariableDeclaration","scope":523,"src":"10521:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"10521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"creationCode","nameLocation":"10557:12:0","nodeType":"VariableDeclaration","scope":523,"src":"10544:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":459,"name":"bytes","nodeType":"ElementaryTypeName","src":"10544:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10511:64:0"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"newContract","nameLocation":"10615:11:0","nodeType":"VariableDeclaration","scope":523,"src":"10602:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":462,"name":"bytes","nodeType":"ElementaryTypeName","src":"10602:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10601:26:0"},"scope":588,"src":"10489:965:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":586,"nodeType":"Block","src":"11960:574:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":533,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"11974:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11987:6:0","memberName":"length","nodeType":"MemberAccess","src":"11974:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11997:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11974:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"11970:98:0","trueBody":{"id":540,"nodeType":"Block","src":"12000:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":537,"name":"ERC725X_NoContractBytecodeProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"12021:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12021:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"12014:43:0"}]}},{"assignments":[543],"declarations":[{"constant":false,"id":543,"mutability":"mutable","name":"salt","nameLocation":"12086:4:0","nodeType":"VariableDeclaration","scope":586,"src":"12078:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12078:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":552,"initialValue":{"arguments":[{"id":546,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"12125:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":547,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"12151:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12164:6:0","memberName":"length","nodeType":"MemberAccess","src":"12151:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12151:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":544,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"12093:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesLib_$6720_$","typeString":"type(library BytesLib)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12102:9:0","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":6685,"src":"12093:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:92:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12078:107:0"},{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"bytecode","nameLocation":"12208:8:0","nodeType":"VariableDeclaration","scope":586,"src":"12195:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"12195:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":564,"initialValue":{"arguments":[{"id":557,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"12247:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12273:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":559,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"12288:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12301:6:0","memberName":"length","nodeType":"MemberAccess","src":"12288:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12310:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12288:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":555,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"12219:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesLib_$6720_$","typeString":"type(library BytesLib)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12228:5:0","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":6451,"src":"12219:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12219:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12195:127:0"},{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"contractAddress","nameLocation":"12340:15:0","nodeType":"VariableDeclaration","scope":586,"src":"12332:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12332:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"id":569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"12373:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":570,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"12380:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":571,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"12386:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":567,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"12358:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$4546_$","typeString":"type(library Create2)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12366:6:0","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":4511,"src":"12358:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12332:63:0"},{"eventCall":{"arguments":[{"id":575,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"12427:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":576,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"12448:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"12465:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":578,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"12472:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":574,"name":"ContractCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"12411:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,uint256,bytes32)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12411:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"12406:71:0"},{"expression":{"arguments":[{"id":583,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"12511:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":581,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12494:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12498:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"12494:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12494:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":532,"id":585,"nodeType":"Return","src":"12487:40:0"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"11460:355:0","text":" @dev Deploy a contract using the `CREATE2` opcode (operation type = 2)\n @param value The value to be sent to the contract created\n @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s) and a bytes32 salt\n @return newContract The address of the contract created as bytes"},"id":587,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate2","nameLocation":"11829:14:0","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"value","nameLocation":"11861:5:0","nodeType":"VariableDeclaration","scope":587,"src":"11853:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"creationCode","nameLocation":"11889:12:0","nodeType":"VariableDeclaration","scope":587,"src":"11876:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"11876:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11843:64:0"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"newContract","nameLocation":"11947:11:0","nodeType":"VariableDeclaration","scope":587,"src":"11934:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":530,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11933:26:0"},"scope":588,"src":"11820:714:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":589,"src":"1668:10868:0","usedErrors":[960,965,972,977,980,983,986,989,992,995,998]}],"src":"39:12498:0"},"id":0},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","exportedSymbols":{"ERC165":[5165],"ERC725YCore":[823],"ERC725Y_DataKeysValuesEmptyArray":[1004],"ERC725Y_DataKeysValuesLengthMismatch":[1001],"ERC725Y_MsgValueDisallowed":[1007],"IERC165":[5371],"IERC725Y":[1121],"OwnableUnset":[955],"_INTERFACEID_ERC725Y":[831]},"id":824,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":590,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":5372,"src":"78:80:1","symbolAliases":[{"foreign":{"id":591,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"86:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":1122,"src":"159:51:1","symbolAliases":[{"foreign":{"id":593,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"167:8:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":5166,"src":"223:78:1","symbolAliases":[{"foreign":{"id":595,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"231:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":956,"src":"302:55:1","symbolAliases":[{"foreign":{"id":597,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"310:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","file":"./constants.sol","id":600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":847,"src":"372:53:1","symbolAliases":[{"foreign":{"id":599,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"380:20:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":1008,"src":"427:142:1","symbolAliases":[{"foreign":{"id":601,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"440:26:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":602,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"472:36:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":603,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"514:32:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":606,"name":"OwnableUnset","nameLocations":["986:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"986:12:1"},"id":607,"nodeType":"InheritanceSpecifier","src":"986:12:1"},{"baseName":{"id":608,"name":"ERC165","nameLocations":["1000:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":5165,"src":"1000:6:1"},"id":609,"nodeType":"InheritanceSpecifier","src":"1000:6:1"},{"baseName":{"id":610,"name":"IERC725Y","nameLocations":["1008:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1121,"src":"1008:8:1"},"id":611,"nodeType":"InheritanceSpecifier","src":"1008:8:1"}],"canonicalName":"ERC725YCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"571:381:1","text":" @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,1121,5165,5371,955],"name":"ERC725YCore","nameLocation":"971:11:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"1023:77:1","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":616,"mutability":"mutable","name":"_store","nameLocation":"1140:6:1","nodeType":"VariableDeclaration","scope":823,"src":"1105:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":615,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1105:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":614,"name":"bytes","nodeType":"ElementaryTypeName","src":"1124:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"baseFunctions":[1092],"body":{"id":631,"nodeType":"Block","src":"1307:46:1","statements":[{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1317:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":627,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1338:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":626,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1329:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1317:29:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":630,"nodeType":"ExpressionStatement","src":"1317:29:1"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1153:39:1","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1206:7:1","nodeType":"FunctionDefinition","overrides":{"id":621,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:1"},"parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"dataKey","nameLocation":"1231:7:1","nodeType":"VariableDeclaration","scope":632,"src":"1223:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1213:31:1"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"dataValue","nameLocation":"1296:9:1","nodeType":"VariableDeclaration","scope":632,"src":"1283:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":622,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:24:1"},"scope":823,"src":"1197:156:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1102],"body":{"id":678,"nodeType":"Block","src":"1531:330:1","statements":[{"expression":{"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":643,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"1541:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":647,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1566:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:1","memberName":"length","nodeType":"MemberAccess","src":"1566:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1554:11:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":644,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":645,"nodeType":"ArrayTypeName","src":"1558:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"1541:41:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":651,"nodeType":"ExpressionStatement","src":"1541:41:1"},{"body":{"id":674,"nodeType":"Block","src":"1636:191:1","statements":[{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":660,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"1650:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":662,"indexExpression":{"id":661,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1661:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1650:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":664,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1675:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":666,"indexExpression":{"id":665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1675:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":663,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1666:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1650:37:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":669,"nodeType":"ExpressionStatement","src":"1650:37:1"},{"id":673,"nodeType":"UncheckedBlock","src":"1771:46:1","statements":[{"expression":{"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1799:3:1","subExpression":{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1801:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":672,"nodeType":"ExpressionStatement","src":"1799:3:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1613:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":657,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1617:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:1","memberName":"length","nodeType":"MemberAccess","src":"1617:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1613:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"initializationExpression":{"assignments":[653],"declarations":[{"constant":false,"id":653,"mutability":"mutable","name":"i","nameLocation":"1606:1:1","nodeType":"VariableDeclaration","scope":675,"src":"1598:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":655,"initialValue":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1598:13:1"},"nodeType":"ForStatement","src":"1593:234:1"},{"expression":{"id":676,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"1844:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":642,"id":677,"nodeType":"Return","src":"1837:17:1"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"1359:39:1","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":679,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1412:12:1","nodeType":"FunctionDefinition","overrides":{"id":638,"nodeType":"OverrideSpecifier","overrides":[],"src":"1486:8:1"},"parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"dataKeys","nameLocation":"1451:8:1","nodeType":"VariableDeclaration","scope":679,"src":"1434:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1434:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":635,"nodeType":"ArrayTypeName","src":"1434:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1424:41:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"dataValues","nameLocation":"1519:10:1","nodeType":"VariableDeclaration","scope":679,"src":"1504:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"1504:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":640,"nodeType":"ArrayTypeName","src":"1504:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1503:27:1"},"scope":823,"src":"1403:458:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":703,"nodeType":"Block","src":"2448:110:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2462:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2466:5:1","memberName":"value","nodeType":"MemberAccess","src":"2462:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2475:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2462:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":697,"nodeType":"IfStatement","src":"2458:55:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":694,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2485:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2485:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"RevertStatement","src":"2478:35:1"}},{"expression":{"arguments":[{"id":699,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2532:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":700,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"2541:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":698,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"2523:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"2523:28:1"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"1867:454:1","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":704,"implemented":true,"kind":"function","modifiers":[{"id":688,"kind":"modifierInvocation","modifierName":{"id":687,"name":"onlyOwner","nameLocations":["2438:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"2438:9:1"},"nodeType":"ModifierInvocation","src":"2438:9:1"}],"name":"setData","nameLocation":"2335:7:1","nodeType":"FunctionDefinition","overrides":{"id":686,"nodeType":"OverrideSpecifier","overrides":[],"src":"2429:8:1"},"parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"dataKey","nameLocation":"2360:7:1","nodeType":"VariableDeclaration","scope":704,"src":"2352:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2352:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"dataValue","nameLocation":"2390:9:1","nodeType":"VariableDeclaration","scope":704,"src":"2377:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"2377:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2342:63:1"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"2448:0:1"},"scope":823,"src":"2326:232:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1120],"body":{"id":767,"nodeType":"Block","src":"3216:623:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3314:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3318:5:1","memberName":"value","nodeType":"MemberAccess","src":"3314:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3327:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3314:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":724,"nodeType":"IfStatement","src":"3310:55:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"3337:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3337:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"RevertStatement","src":"3330:35:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":725,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3380:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3389:6:1","memberName":"length","nodeType":"MemberAccess","src":"3380:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":727,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3399:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3410:6:1","memberName":"length","nodeType":"MemberAccess","src":"3399:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3380:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":734,"nodeType":"IfStatement","src":"3376:112:1","trueBody":{"id":733,"nodeType":"Block","src":"3418:70:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":730,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3439:36:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3439:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"RevertStatement","src":"3432:45:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":735,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3502:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3511:6:1","memberName":"length","nodeType":"MemberAccess","src":"3502:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3521:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3502:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"3498:92:1","trueBody":{"id":742,"nodeType":"Block","src":"3524:66:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":739,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"3545:32:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"RevertStatement","src":"3538:41:1"}]}},{"body":{"id":765,"nodeType":"Block","src":"3643:190:1","statements":[{"expression":{"arguments":[{"baseExpression":{"id":753,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3666:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":755,"indexExpression":{"id":754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3675:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3666:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":756,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3679:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":758,"indexExpression":{"id":757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3690:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":752,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"3657:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"3657:36:1"},{"id":764,"nodeType":"UncheckedBlock","src":"3777:46:1","statements":[{"expression":{"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3805:3:1","subExpression":{"id":761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3807:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":763,"nodeType":"ExpressionStatement","src":"3805:3:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3620:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":749,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3624:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3633:6:1","memberName":"length","nodeType":"MemberAccess","src":"3624:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3620:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"initializationExpression":{"assignments":[745],"declarations":[{"constant":false,"id":745,"mutability":"mutable","name":"i","nameLocation":"3613:1:1","nodeType":"VariableDeclaration","scope":766,"src":"3605:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":747,"initialValue":{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3617:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3605:13:1"},"nodeType":"ForStatement","src":"3600:233:1"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"2564:507:1","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":768,"implemented":true,"kind":"function","modifiers":[{"id":715,"kind":"modifierInvocation","modifierName":{"id":714,"name":"onlyOwner","nameLocations":["3206:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"3206:9:1"},"nodeType":"ModifierInvocation","src":"3206:9:1"}],"name":"setDataBatch","nameLocation":"3085:12:1","nodeType":"FunctionDefinition","overrides":{"id":713,"nodeType":"OverrideSpecifier","overrides":[],"src":"3197:8:1"},"parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"dataKeys","nameLocation":"3124:8:1","nodeType":"VariableDeclaration","scope":768,"src":"3107:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":707,"nodeType":"ArrayTypeName","src":"3107:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"dataValues","nameLocation":"3157:10:1","nodeType":"VariableDeclaration","scope":768,"src":"3142:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"3142:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":710,"nodeType":"ArrayTypeName","src":"3142:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3097:76:1"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"3216:0:1"},"scope":823,"src":"3076:763:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":780,"nodeType":"Block","src":"4439:39:1","statements":[{"expression":{"baseExpression":{"id":776,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4456:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":778,"indexExpression":{"id":777,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4463:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4456:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":775,"id":779,"nodeType":"Return","src":"4449:22:1"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"3845:485:1","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4344:8:1","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"dataKey","nameLocation":"4370:7:1","nodeType":"VariableDeclaration","scope":781,"src":"4362:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4362:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4352:31:1"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"dataValue","nameLocation":"4428:9:1","nodeType":"VariableDeclaration","scope":781,"src":"4415:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":773,"name":"bytes","nodeType":"ElementaryTypeName","src":"4415:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4414:24:1"},"scope":823,"src":"4335:143:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"5130:90:1","statements":[{"expression":{"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":789,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5140:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":791,"indexExpression":{"id":790,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5147:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5140:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":792,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5158:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5140:27:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":794,"nodeType":"ExpressionStatement","src":"5140:27:1"},{"eventCall":{"arguments":[{"id":796,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5194:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":797,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5203:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":795,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"5182:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"EmitStatement","src":"5177:36:1"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"4484:543:1","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"5041:8:1","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"dataKey","nameLocation":"5067:7:1","nodeType":"VariableDeclaration","scope":801,"src":"5059:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5059:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"dataValue","nameLocation":"5097:9:1","nodeType":"VariableDeclaration","scope":801,"src":"5084:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"5084:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5049:63:1"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"5130:0:1"},"scope":823,"src":"5032:188:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[5164,5370],"body":{"id":821,"nodeType":"Block","src":"5390:123:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5419:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":813,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5434:20:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5419:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":817,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5494:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":815,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725YCore_$823_$","typeString":"type(contract super ERC725YCore)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5476:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5164,"src":"5470:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5419:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":811,"id":820,"nodeType":"Return","src":"5400:106:1"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"5226:37:1","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":822,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"5277:17:1","nodeType":"FunctionDefinition","overrides":{"id":808,"nodeType":"OverrideSpecifier","overrides":[{"id":806,"name":"IERC165","nameLocations":["5358:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":5371,"src":"5358:7:1"},{"id":807,"name":"ERC165","nameLocations":["5367:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":5165,"src":"5367:6:1"}],"src":"5349:25:1"},"parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"interfaceId","nameLocation":"5311:11:1","nodeType":"VariableDeclaration","scope":822,"src":"5304:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":803,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5304:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5294:34:1"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"5384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"5384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5383:6:1"},"scope":823,"src":"5268:245:1","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":824,"src":"953:4562:1","usedErrors":[960,965,1001,1004,1007]}],"src":"39:5477:1"},"id":1},"@erc725/smart-contracts/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[834],"OPERATION_1_CREATE":[837],"OPERATION_2_CREATE2":[840],"OPERATION_3_STATICCALL":[843],"OPERATION_4_DELEGATECALL":[846],"_INTERFACEID_ERC725X":[828],"_INTERFACEID_ERC725Y":[831]},"id":847,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"constant":true,"id":828,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:2","nodeType":"VariableDeclaration","scope":847,"src":"88:49:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":826,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:2","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":831,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:2","nodeType":"VariableDeclaration","scope":847,"src":"139:49:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":829,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:2","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":834,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:2","nodeType":"VariableDeclaration","scope":847,"src":"218:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":837,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:2","nodeType":"VariableDeclaration","scope":847,"src":"257:39:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":840,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:2","nodeType":"VariableDeclaration","scope":847,"src":"298:40:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":843,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:2","nodeType":"VariableDeclaration","scope":847,"src":"340:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":846,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:2","nodeType":"VariableDeclaration","scope":847,"src":"385:45:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:2"},"id":2},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","exportedSymbols":{"OwnableCallerNotTheOwner":[965],"OwnableCannotSetZeroAddressAsOwner":[960],"OwnableUnset":[955]},"id":956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":848,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"../errors.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":956,"sourceUnit":1008,"src":"67:101:3","symbolAliases":[{"foreign":{"id":849,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"80:34:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":850,"name":"OwnableCallerNotTheOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"120:24:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"OwnableUnset","contractDependencies":[],"contractKind":"contract","documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"170:317:3","text":" @title OwnableUnset\n @dev modified version of OpenZeppelin implementation, where:\n - _setOwner(address) function is internal, so this function can be used in constructor\n of contracts implementation (instead of using transferOwnership(address)\n - the contract does not inherit from Context contract"},"fullyImplemented":true,"id":955,"linearizedBaseContracts":[955],"name":"OwnableUnset","nameLocation":"506:12:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":854,"mutability":"mutable","name":"_owner","nameLocation":"541:6:3","nodeType":"VariableDeclaration","scope":955,"src":"525:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":860,"name":"OwnershipTransferred","nameLocation":"560:20:3","nodeType":"EventDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"606:13:3","nodeType":"VariableDeclaration","scope":860,"src":"590:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"645:8:3","nodeType":"VariableDeclaration","scope":860,"src":"629:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"580:79:3"},"src":"554:106:3"},{"body":{"id":868,"nodeType":"Block","src":"791:30:3","statements":[{"expression":{"id":866,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"808:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":865,"id":867,"nodeType":"Return","src":"801:13:3"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"666:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":869,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"745:5:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"750:2:3"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"782:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"781:9:3"},"scope":955,"src":"736:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":876,"nodeType":"Block","src":"930:41:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":872,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"940:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"940:13:3"},{"id":875,"nodeType":"PlaceholderStatement","src":"963:1:3"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"827:77:3","text":" @dev Throws if called by any account other than the owner."},"id":877,"name":"onlyOwner","nameLocation":"918:9:3","nodeType":"ModifierDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"927:2:3"},"src":"909:62:3","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"1367:38:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:3","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1387:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":883,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"1377:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1377:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"1377:21:3"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"977:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":891,"implemented":true,"kind":"function","modifiers":[{"id":881,"kind":"modifierInvocation","modifierName":{"id":880,"name":"onlyOwner","nameLocations":["1357:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1357:9:3"},"nodeType":"ModifierInvocation","src":"1357:9:3"}],"name":"renounceOwnership","nameLocation":"1322:17:3","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"1339:2:3"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"1367:0:3"},"scope":955,"src":"1313:92:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":914,"nodeType":"Block","src":"1624:141:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1638:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:3","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1650:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1638:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":909,"nodeType":"IfStatement","src":"1634:96:3","trueBody":{"id":908,"nodeType":"Block","src":"1662:68:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":905,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1683:34:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"RevertStatement","src":"1676:43:3"}]}},{"expression":{"arguments":[{"id":911,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1749:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":910,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"1739:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1739:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"1739:19:3"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1411:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":915,"implemented":true,"kind":"function","modifiers":[{"id":897,"kind":"modifierInvocation","modifierName":{"id":896,"name":"onlyOwner","nameLocations":["1614:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1614:9:3"},"nodeType":"ModifierInvocation","src":"1614:9:3"}],"name":"transferOwnership","nameLocation":"1563:17:3","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"newOwner","nameLocation":"1589:8:3","nodeType":"VariableDeclaration","scope":915,"src":"1581:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1580:18:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"1624:0:3"},"scope":955,"src":"1554:211:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":931,"nodeType":"Block","src":"1883:111:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":919,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"1897:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1908:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1908:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1897:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":930,"nodeType":"IfStatement","src":"1893:95:3","trueBody":{"id":929,"nodeType":"Block","src":"1920:68:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":924,"name":"OwnableCallerNotTheOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"1941:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"RevertStatement","src":"1934:43:3"}]}}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"1771:62:3","text":" @dev Throws if the sender is not the owner."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1847:11:3","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"1858:2:3"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"1883:0:3"},"scope":955,"src":"1838:156:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"2187:140:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2201:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2213:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2201:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":952,"nodeType":"IfStatement","src":"2197:124:3","trueBody":{"id":951,"nodeType":"Block","src":"2222:99:3","statements":[{"eventCall":{"arguments":[{"id":943,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2262:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2270:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2241:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"EmitStatement","src":"2236:43:3"},{"expression":{"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":947,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2293:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":948,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2302:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2293:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":950,"nodeType":"ExpressionStatement","src":"2293:17:3"}]}}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"2000:128:3","text":" @dev Changes the owner if `newOwner` and oldOwner are different\n This pattern is useful in inheritance."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"2142:9:3","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"newOwner","nameLocation":"2160:8:3","nodeType":"VariableDeclaration","scope":954,"src":"2152:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"2152:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2151:18:3"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"2187:0:3"},"scope":955,"src":"2133:194:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":956,"src":"488:1841:3","usedErrors":[960,965]}],"src":"32:2298:3"},"id":3},"@erc725/smart-contracts/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[989],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[986],"ERC725X_ExecuteParametersEmptyArray":[998],"ERC725X_ExecuteParametersLengthMismatch":[995],"ERC725X_InsufficientBalance":[972],"ERC725X_MsgValueDisallowedInDelegateCall":[983],"ERC725X_MsgValueDisallowedInStaticCall":[980],"ERC725X_NoContractBytecodeProvided":[992],"ERC725X_UnknownOperationType":[977],"ERC725Y_DataKeysValuesEmptyArray":[1004],"ERC725Y_DataKeysValuesLengthMismatch":[1001],"ERC725Y_MsgValueDisallowed":[1007],"OwnableCallerNotTheOwner":[965],"OwnableCannotSetZeroAddressAsOwner":[960]},"id":1008,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":957,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:4"},{"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"64:168:4","text":" @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract,\n initializing it or transferring ownership of the contract."},"errorSelector":"1ad8836c","id":960,"name":"OwnableCannotSetZeroAddressAsOwner","nameLocation":"239:34:4","nodeType":"ErrorDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"273:2:4"},"src":"233:43:4"},{"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"278:141:4","text":" @dev Reverts when only the owner is allowed to call the function.\n @param callerAddress The address that tried to make the call."},"errorSelector":"bf1169c5","id":965,"name":"OwnableCallerNotTheOwner","nameLocation":"426:24:4","nodeType":"ErrorDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"callerAddress","nameLocation":"459:13:4","nodeType":"VariableDeclaration","scope":965,"src":"451:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"450:23:4"},"src":"420:54:4"},{"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"476:336:4","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"errorSelector":"0df9a8f8","id":972,"name":"ERC725X_InsufficientBalance","nameLocation":"819:27:4","nodeType":"ErrorDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"balance","nameLocation":"855:7:4","nodeType":"VariableDeclaration","scope":972,"src":"847:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"value","nameLocation":"872:5:4","nodeType":"VariableDeclaration","scope":972,"src":"864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:32:4"},"src":"813:66:4"},{"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"881:314:4","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"errorSelector":"7583b3bc","id":977,"name":"ERC725X_UnknownOperationType","nameLocation":"1202:28:4","nodeType":"ErrorDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"1239:21:4","nodeType":"VariableDeclaration","scope":977,"src":"1231:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1230:31:4"},"src":"1196:66:4"},{"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"1264:282:4","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"errorSelector":"72f2bc6a","id":980,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1553:38:4","nodeType":"ErrorDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"1591:2:4"},"src":"1547:47:4"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"1596:277:4","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"errorSelector":"5ac83135","id":983,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1880:40:4","nodeType":"ErrorDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"1920:2:4"},"src":"1874:49:4"},{"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"1925:246:4","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"3041824a","id":986,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"2178:52:4","nodeType":"ErrorDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"2230:2:4"},"src":"2172:61:4"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"2235:181:4","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"0b07489b","id":989,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2423:32:4","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"2455:2:4"},"src":"2417:41:4"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"2460:224:4","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"b81cd8d9","id":992,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2691:34:4","nodeType":"ErrorDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"2725:2:4"},"src":"2685:43:4"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"2730:208:4","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"errorSelector":"3ff55f4d","id":995,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2945:39:4","nodeType":"ErrorDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"2984:2:4"},"src":"2939:48:4"},{"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"2989:114:4","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"errorSelector":"e9ad2b5f","id":998,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"3110:35:4","nodeType":"ErrorDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"3145:2:4"},"src":"3104:44:4"},{"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3150:175:4","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"errorSelector":"3bcc8979","id":1001,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"3332:36:4","nodeType":"ErrorDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3368:2:4"},"src":"3326:45:4"},{"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"3373:110:4","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"errorSelector":"97da5f95","id":1004,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3490:32:4","nodeType":"ErrorDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"3522:2:4"},"src":"3484:41:4"},{"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"3527:87:4","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"errorSelector":"f36ba737","id":1007,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3621:26:4","nodeType":"ErrorDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"3647:2:4"},"src":"3615:35:4"}],"src":"39:3612:4"},"id":4},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol","exportedSymbols":{"IERC165":[5371],"IERC725X":[1070]},"id":1071,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":1009,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":5372,"src":"75:80:5","symbolAliases":[{"foreign":{"id":1010,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"83:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1013,"name":"IERC165","nameLocations":["714:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":5371,"src":"714:7:5"},"id":1014,"nodeType":"InheritanceSpecifier","src":"714:7:5"}],"canonicalName":"IERC725X","contractDependencies":[],"contractKind":"interface","documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"157:534:5","text":" @title The interface for the ERC725X sub-standard, a generic executor.\n @dev ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself).\n It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n This is the basis for a smart contract based account system, but could also be used as a proxy account system."},"fullyImplemented":false,"id":1070,"linearizedBaseContracts":[1070,5371],"name":"IERC725X","nameLocation":"702:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"728:628:5","text":" @notice Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\n @dev Emitted when a new contract was created and deployed.\n @param operationType The opcode used to deploy the contract (`CREATE` or `CREATE2`).\n @param contractAddress The created contract address.\n @param value The amount of native tokens (in Wei) sent to fund the created contract on deployment.\n @param salt The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`."},"eventSelector":"a1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c3","id":1025,"name":"ContractCreated","nameLocation":"1367:15:5","nodeType":"EventDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"indexed":true,"mutability":"mutable","name":"operationType","nameLocation":"1408:13:5","nodeType":"VariableDeclaration","scope":1025,"src":"1392:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"1447:15:5","nodeType":"VariableDeclaration","scope":1025,"src":"1431:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1480:5:5","nodeType":"VariableDeclaration","scope":1025,"src":"1472:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1023,"indexed":true,"mutability":"mutable","name":"salt","nameLocation":"1511:4:5","nodeType":"VariableDeclaration","scope":1025,"src":"1495:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1495:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1382:139:5"},"src":"1361:161:5"},{"anonymous":false,"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"1528:613:5","text":" @notice Called address `target` using `operationType` with `value` wei and `data`.\n @dev Emitted when calling an address `target` (EOA or contract) with `value`.\n @param operationType The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\n @param target The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\n @param value The amount of native tokens transferred along the call (in Wei).\n @param selector The first 4 bytes (= function selector) of the data sent with the call."},"eventSelector":"4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e","id":1036,"name":"Executed","nameLocation":"2152:8:5","nodeType":"EventDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"indexed":true,"mutability":"mutable","name":"operationType","nameLocation":"2186:13:5","nodeType":"VariableDeclaration","scope":1036,"src":"2170:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2225:6:5","nodeType":"VariableDeclaration","scope":1036,"src":"2209:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2249:5:5","nodeType":"VariableDeclaration","scope":1036,"src":"2241:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"indexed":true,"mutability":"mutable","name":"selector","nameLocation":"2279:8:5","nodeType":"VariableDeclaration","scope":1036,"src":"2264:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1033,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2264:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2160:133:5"},"src":"2146:148:5"},{"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"2300:1001:5","text":" @notice Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\n @param operationType The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\n @param target The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\n @param value The amount of native tokens to transfer (in Wei)\n @param data The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n @dev Generic executor function to:\n - send native tokens to any address.\n - interact with any contract by passing an abi-encoded function call in the `data` parameter.\n - deploy a contract by providing its creation bytecode in the `data` parameter.\n @custom:warning Be aware that `msg.value` is persisting between the caller and the callee when using `DELEGATECALL` (`4`) as `operationType`."},"functionSelector":"44c028fe","id":1050,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3315:7:5","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"operationType","nameLocation":"3340:13:5","nodeType":"VariableDeclaration","scope":1050,"src":"3332:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3332:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"target","nameLocation":"3371:6:5","nodeType":"VariableDeclaration","scope":1050,"src":"3363:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"3363:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"value","nameLocation":"3395:5:5","nodeType":"VariableDeclaration","scope":1050,"src":"3387:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"data","nameLocation":"3423:4:5","nodeType":"VariableDeclaration","scope":1050,"src":"3410:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3322:111:5"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"3460:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1047,"name":"bytes","nodeType":"ElementaryTypeName","src":"3460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:14:5"},"scope":1070,"src":"3306:168:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"3480:896:5","text":" @notice Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\n @dev Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\n @param operationsType The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\n @param targets The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\n @param values The list of native token amounts to transfer (in Wei).\n @param datas The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n @custom:warning The `msg.value` should not be trusted for any method called with the batch with `operationType`: `DELEGATECALL` (4)."},"functionSelector":"31858452","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"4390:12:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"operationsType","nameLocation":"4429:14:5","nodeType":"VariableDeclaration","scope":1069,"src":"4412:31:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"nodeType":"ArrayTypeName","src":"4412:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"targets","nameLocation":"4470:7:5","nodeType":"VariableDeclaration","scope":1069,"src":"4453:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"4453:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1056,"nodeType":"ArrayTypeName","src":"4453:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"values","nameLocation":"4504:6:5","nodeType":"VariableDeclaration","scope":1069,"src":"4487:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1059,"nodeType":"ArrayTypeName","src":"4487:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"datas","nameLocation":"4535:5:5","nodeType":"VariableDeclaration","scope":1069,"src":"4520:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"4520:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1062,"nodeType":"ArrayTypeName","src":"4520:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4402:144:5"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"4573:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"4573:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1066,"nodeType":"ArrayTypeName","src":"4573:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4572:16:5"},"scope":1070,"src":"4381:208:5","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1071,"src":"692:3899:5","usedErrors":[]}],"src":"36:4556:5"},"id":5},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[5371],"IERC725Y":[1121]},"id":1122,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":1072,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1122,"sourceUnit":5372,"src":"75:80:6","symbolAliases":[{"foreign":{"id":1073,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"83:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1076,"name":"IERC165","nameLocations":["502:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5371,"src":"502:7:6"},"id":1077,"nodeType":"InheritanceSpecifier","src":"502:7:6"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"157:322:6","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":1121,"linearizedBaseContracts":[1121,5371],"name":"IERC725Y","nameLocation":"490:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"516:373:6","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":1084,"name":"DataChanged","nameLocation":"900:11:6","nodeType":"EventDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:6","nodeType":"VariableDeclaration","scope":1084,"src":"912:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1082,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:6","nodeType":"VariableDeclaration","scope":1084,"src":"937:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:6"},"src":"894:60:6"},{"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"960:361:6","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":1092,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:6","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:6","nodeType":"VariableDeclaration","scope":1092,"src":"1352:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:6"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:6","nodeType":"VariableDeclaration","scope":1092,"src":"1397:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:6"},"scope":1121,"src":"1326:95:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"1427:353:6","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:6","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:6","nodeType":"VariableDeclaration","scope":1102,"src":"1816:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1095,"nodeType":"ArrayTypeName","src":"1816:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:6"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:6","nodeType":"VariableDeclaration","scope":1102,"src":"1871:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1098,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1099,"nodeType":"ArrayTypeName","src":"1871:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:6"},"scope":1121,"src":"1785:113:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"1904:536:6","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:6","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:6","nodeType":"VariableDeclaration","scope":1110,"src":"2462:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:6","nodeType":"VariableDeclaration","scope":1110,"src":"2479:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:6"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"2519:0:6"},"scope":1121,"src":"2445:75:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"2526:478:6","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":1120,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:6","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:6","nodeType":"VariableDeclaration","scope":1120,"src":"3040:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1113,"nodeType":"ArrayTypeName","src":"3040:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:6","nodeType":"VariableDeclaration","scope":1120,"src":"3075:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1116,"nodeType":"ArrayTypeName","src":"3075:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:6"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"3123:0:6"},"scope":1121,"src":"3009:115:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1122,"src":"480:2646:6","usedErrors":[]}],"src":"36:3091:6"},"id":6},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol","exportedSymbols":{"ILSP0ERC725Account":[1135]},"id":1136,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1123,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP0ERC725Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"64:216:7","text":" @title Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\n @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)"},"fullyImplemented":false,"id":1135,"linearizedBaseContracts":[1135],"name":"ILSP0ERC725Account","nameLocation":"291:18:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"316:460:7","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1134,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"790:10:7","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"data","nameLocation":"827:4:7","nodeType":"VariableDeclaration","scope":1134,"src":"810:21:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1126,"name":"bytes","nodeType":"ElementaryTypeName","src":"810:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1127,"nodeType":"ArrayTypeName","src":"810:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"800:37:7"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"results","nameLocation":"871:7:7","nodeType":"VariableDeclaration","scope":1134,"src":"856:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"856:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1131,"nodeType":"ArrayTypeName","src":"856:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"855:24:7"},"scope":1135,"src":"781:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1136,"src":"281:601:7","usedErrors":[]}],"src":"39:844:7"},"id":7},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol","exportedSymbols":{"_ERC1271_FAILVALUE":[1149],"_ERC1271_SUCCESSVALUE":[1146],"_INTERFACEID_ERC1271":[1143],"_INTERFACEID_LSP0":[1140],"_TYPEID_LSP0_OwnershipTransferStarted":[1155],"_TYPEID_LSP0_OwnershipTransferred_RecipientNotification":[1161],"_TYPEID_LSP0_OwnershipTransferred_SenderNotification":[1158],"_TYPEID_LSP0_VALUE_RECEIVED":[1152]},"id":1162,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"constant":true,"id":1140,"mutability":"constant","name":"_INTERFACEID_LSP0","nameLocation":"108:17:8","nodeType":"VariableDeclaration","scope":1162,"src":"92:46:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1138,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783234383731623364","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:8","typeDescriptions":{"typeIdentifier":"t_rational_612834109_by_1","typeString":"int_const 612834109"},"value":"0x24871b3d"},"visibility":"internal"},{"constant":true,"id":1143,"mutability":"constant","name":"_INTERFACEID_ERC1271","nameLocation":"156:20:8","nodeType":"VariableDeclaration","scope":1162,"src":"140:49:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1141,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"179:10:8","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"constant":true,"id":1146,"mutability":"constant","name":"_ERC1271_SUCCESSVALUE","nameLocation":"251:21:8","nodeType":"VariableDeclaration","scope":1162,"src":"235:50:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1144,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"275:10:8","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"constant":true,"id":1149,"mutability":"constant","name":"_ERC1271_FAILVALUE","nameLocation":"303:18:8","nodeType":"VariableDeclaration","scope":1162,"src":"287:47:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1147,"name":"bytes4","nodeType":"ElementaryTypeName","src":"287:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"324:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"internal"},{"constant":true,"id":1152,"mutability":"constant","name":"_TYPEID_LSP0_VALUE_RECEIVED","nameLocation":"417:27:8","nodeType":"VariableDeclaration","scope":1162,"src":"400:113:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"400:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839633437303532323934393164333635666235343334303532653132613338366436373731643937366265613631303730613863363934653861666665613364","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"447:66:8","typeDescriptions":{"typeIdentifier":"t_rational_70686285961604950920806211732789936779336649279463392163660348800248498350653_by_1","typeString":"int_const 7068...(69 digits omitted)...0653"},"value":"0x9c4705229491d365fb5434052e12a386d6771d976bea61070a8c694e8affea3d"},"visibility":"internal"},{"constant":true,"id":1155,"mutability":"constant","name":"_TYPEID_LSP0_OwnershipTransferStarted","nameLocation":"610:37:8","nodeType":"VariableDeclaration","scope":1162,"src":"593:123:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865313731313763396432363635643164626562343739656438303538626265626465336335306163353065326536353631396636303030366361616336393236","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"650:66:8","typeDescriptions":{"typeIdentifier":"t_rational_101970208830827842342045397398428405290962075809797208835923719250899100264742_by_1","typeString":"int_const 1019...(70 digits omitted)...4742"},"value":"0xe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac6926"},"visibility":"internal"},{"constant":true,"id":1158,"mutability":"constant","name":"_TYPEID_LSP0_OwnershipTransferred_SenderNotification","nameLocation":"796:52:8","nodeType":"VariableDeclaration","scope":1162,"src":"779:138:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"779:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861346535396339333164313466376338613761333530323766393265653430623566323838366239666463646237386633306263356563636535613266383134","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"851:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74584995784094879258197140902702068663775852884950847598921907427942938638356_by_1","typeString":"int_const 7458...(69 digits omitted)...8356"},"value":"0xa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814"},"visibility":"internal"},{"constant":true,"id":1161,"mutability":"constant","name":"_TYPEID_LSP0_OwnershipTransferred_RecipientNotification","nameLocation":"1000:55:8","nodeType":"VariableDeclaration","scope":1162,"src":"983:141:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"983:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863656361333137663130396334333530373837313532336538326463326133636336346466613138663132646130623664623134663665323366393935353338","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1058:66:8","typeDescriptions":{"typeIdentifier":"t_rational_93533691526471608619640232985592865632484953515781287531315828254921486587192_by_1","typeString":"int_const 9353...(69 digits omitted)...7192"},"value":"0xceca317f109c43507871523e82dc2a3cc64dfa18f12da0b6db14f6e23f995538"},"visibility":"internal"}],"src":"39:1087:8"},"id":8},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol","exportedSymbols":{"Address":[4465],"ECDSA":[5141],"ERC165Checker":[5359],"ERC725XCore":[588],"ERC725YCore":[823],"ERC725Y_DataKeysValuesEmptyArray":[1004],"ERC725Y_DataKeysValuesLengthMismatch":[1001],"IERC1271":[4135],"ILSP0ERC725Account":[1135],"ILSP1Delegate":[3044],"ILSP1UniversalReceiver":[3026],"LSP0ERC725AccountCore":[2455],"LSP14Ownable2Step":[2837],"LSP17Extendable":[2999],"LSP1Utils":[3143],"LSP20CallVerification":[3341],"LSP2Utils":[4114],"NoExtensionFoundForFunctionSelector":[2855],"OwnableUnset":[955],"_ERC1271_FAILVALUE":[1149],"_ERC1271_SUCCESSVALUE":[1146],"_INTERFACEID_ERC1271":[1143],"_INTERFACEID_LSP0":[1140],"_INTERFACEID_LSP1":[3049],"_INTERFACEID_LSP14":[2497],"_INTERFACEID_LSP1_DELEGATE":[3052],"_INTERFACEID_LSP20_CALL_VERIFICATION":[3346],"_LSP17_EXTENSION_PREFIX":[2848],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[3058],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[3055],"_TYPEID_LSP0_OwnershipTransferStarted":[1155],"_TYPEID_LSP0_OwnershipTransferred_RecipientNotification":[1161],"_TYPEID_LSP0_OwnershipTransferred_SenderNotification":[1158],"_TYPEID_LSP0_VALUE_RECEIVED":[1152]},"id":2456,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1163,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":1165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":4136,"src":"78:73:9","symbolAliases":[{"foreign":{"id":1164,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"86:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol","file":"./ILSP0ERC725Account.sol","id":1167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":1136,"src":"152:60:9","symbolAliases":[{"foreign":{"id":1166,"name":"ILSP0ERC725Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"160:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","file":"../LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","id":1169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3027,"src":"213:97:9","symbolAliases":[{"foreign":{"id":1168,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"226:22:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol","file":"../LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol","id":1171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3045,"src":"312:130:9","symbolAliases":[{"foreign":{"id":1170,"name":"ILSP1UniversalReceiverDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"325:30:9","typeDescriptions":{}},"local":"ILSP1Delegate","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":5142,"src":"457:75:9","symbolAliases":[{"foreign":{"id":1172,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"465:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":1175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":5360,"src":"533:98:9","symbolAliases":[{"foreign":{"id":1174,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"546:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":1177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":4466,"src":"632:66:9","symbolAliases":[{"foreign":{"id":1176,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"640:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol","file":"../LSP1UniversalReceiver/LSP1Utils.sol","id":1179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3144,"src":"699:65:9","symbolAliases":[{"foreign":{"id":1178,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"707:9:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","file":"../LSP2ERC725YJSONSchema/LSP2Utils.sol","id":1181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":4115,"src":"765:65:9","symbolAliases":[{"foreign":{"id":1180,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"773:9:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":1183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":824,"src":"843:78:9","symbolAliases":[{"foreign":{"id":1182,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"851:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725XCore.sol","file":"@erc725/smart-contracts/contracts/ERC725XCore.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":589,"src":"922:78:9","symbolAliases":[{"foreign":{"id":1184,"name":"ERC725XCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"930:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":956,"src":"1001:93:9","symbolAliases":[{"foreign":{"id":1186,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1014:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol","file":"../LSP14Ownable2Step/LSP14Ownable2Step.sol","id":1189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2838,"src":"1095:77:9","symbolAliases":[{"foreign":{"id":1188,"name":"LSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1103:17:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol","file":"../LSP17ContractExtension/LSP17Extendable.sol","id":1191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3000,"src":"1173:78:9","symbolAliases":[{"foreign":{"id":1190,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"1181:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol","file":"../LSP20CallVerification/LSP20CallVerification.sol","id":1193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3342,"src":"1252:95:9","symbolAliases":[{"foreign":{"id":1192,"name":"LSP20CallVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1265:21:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol","file":"./LSP0Constants.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":1162,"src":"1362:332:9","symbolAliases":[{"foreign":{"id":1194,"name":"_INTERFACEID_LSP0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1375:17:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1195,"name":"_INTERFACEID_ERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"1398:20:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1196,"name":"_ERC1271_SUCCESSVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1424:21:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1197,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1451:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1198,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1475:27:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1199,"name":"_TYPEID_LSP0_OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"1508:37:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1200,"name":"_TYPEID_LSP0_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1551:52:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1201,"name":"_TYPEID_LSP0_OwnershipTransferred_RecipientNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"1609:55:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","file":"../LSP1UniversalReceiver/LSP1Constants.sol","id":1207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3059,"src":"1695:204:9","symbolAliases":[{"foreign":{"id":1203,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1708:17:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1204,"name":"_INTERFACEID_LSP1_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"1731:26:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1205,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"1763:40:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1206,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"1809:37:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol","file":"../LSP14Ownable2Step/LSP14Constants.sol","id":1209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2507,"src":"1900:75:9","symbolAliases":[{"foreign":{"id":1208,"name":"_INTERFACEID_LSP14","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"1908:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","file":"../LSP17ContractExtension/LSP17Constants.sol","id":1211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2849,"src":"1977:91:9","symbolAliases":[{"foreign":{"id":1210,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1990:23:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol","file":"../LSP20CallVerification/LSP20Constants.sol","id":1213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3359,"src":"2069:103:9","symbolAliases":[{"foreign":{"id":1212,"name":"_INTERFACEID_LSP20_CALL_VERIFICATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"2082:36:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"@erc725/smart-contracts/contracts/errors.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":1008,"src":"2184:142:9","symbolAliases":[{"foreign":{"id":1214,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"2197:36:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1215,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"2239:32:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","file":"../LSP17ContractExtension/LSP17Errors.sol","id":1218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2866,"src":"2327:100:9","symbolAliases":[{"foreign":{"id":1217,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2340:35:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1220,"name":"ERC725XCore","nameLocations":["2633:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"2633:11:9"},"id":1221,"nodeType":"InheritanceSpecifier","src":"2633:11:9"},{"baseName":{"id":1222,"name":"ERC725YCore","nameLocations":["2650:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"2650:11:9"},"id":1223,"nodeType":"InheritanceSpecifier","src":"2650:11:9"},{"baseName":{"id":1224,"name":"IERC1271","nameLocations":["2667:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":4135,"src":"2667:8:9"},"id":1225,"nodeType":"InheritanceSpecifier","src":"2667:8:9"},{"baseName":{"id":1226,"name":"ILSP0ERC725Account","nameLocations":["2681:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"2681:18:9"},"id":1227,"nodeType":"InheritanceSpecifier","src":"2681:18:9"},{"baseName":{"id":1228,"name":"ILSP1UniversalReceiver","nameLocations":["2705:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":3026,"src":"2705:22:9"},"id":1229,"nodeType":"InheritanceSpecifier","src":"2705:22:9"},{"baseName":{"id":1230,"name":"LSP14Ownable2Step","nameLocations":["2733:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2837,"src":"2733:17:9"},"id":1231,"nodeType":"InheritanceSpecifier","src":"2733:17:9"},{"baseName":{"id":1232,"name":"LSP17Extendable","nameLocations":["2756:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2999,"src":"2756:15:9"},"id":1233,"nodeType":"InheritanceSpecifier","src":"2756:15:9"},{"baseName":{"id":1234,"name":"LSP20CallVerification","nameLocations":["2777:21:9"],"nodeType":"IdentifierPath","referencedDeclaration":3341,"src":"2777:21:9"},"id":1235,"nodeType":"InheritanceSpecifier","src":"2777:21:9"}],"canonicalName":"LSP0ERC725AccountCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"2429:156:9","text":" @title The Core Implementation of [LSP-0-ERC725Account] Standard.\n @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)"},"fullyImplemented":true,"id":2455,"linearizedBaseContracts":[2455,3341,2999,2837,3026,1135,4135,823,1121,588,1070,5165,5371,955,2492],"name":"LSP0ERC725AccountCore","nameLocation":"2604:21:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1238,"libraryName":{"id":1236,"name":"ERC165Checker","nameLocations":["2811:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":5359,"src":"2811:13:9"},"nodeType":"UsingForDirective","src":"2805:32:9","typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1241,"libraryName":{"id":1239,"name":"LSP1Utils","nameLocations":["2848:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"2848:9:9"},"nodeType":"UsingForDirective","src":"2842:28:9","typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"2862:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1244,"libraryName":{"id":1242,"name":"Address","nameLocations":["2881:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4465,"src":"2881:7:9"},"nodeType":"UsingForDirective","src":"2875:26:9","typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"2893:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1259,"nodeType":"Block","src":"3459:111:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3473:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3477:5:9","memberName":"value","nodeType":"MemberAccess","src":"3473:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3473:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1258,"nodeType":"IfStatement","src":"3469:95:9","trueBody":{"id":1257,"nodeType":"Block","src":"3489:75:9","statements":[{"expression":{"arguments":[{"id":1253,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3521:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3550:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1252,"name":"universalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3503:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) returns (bytes memory)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3503:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1256,"nodeType":"ExpressionStatement","src":"3503:50:9"}]}}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"2907:512:9","text":" @dev Executed:\n - When receiving some native tokens without any additional data.\n - On empty calls to the contract.\n @custom:info This function internally delegates the handling of native tokens to the {universalReceiver} function\n passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and an empty bytes array as received data.\n @custom:events Emits a {UniversalReceiver} event when the `universalReceiver` logic is executed upon receiving native tokens."},"id":1260,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"3431:2:9"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[],"src":"3459:0:9"},"scope":2455,"src":"3424:146:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1292,"nodeType":"Block","src":"5884:338:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5898:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5902:4:9","memberName":"data","nodeType":"MemberAccess","src":"5898:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5907:6:9","memberName":"length","nodeType":"MemberAccess","src":"5898:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5916:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5898:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1287,"nodeType":"IfStatement","src":"5894:270:9","trueBody":{"id":1286,"nodeType":"Block","src":"5919:245:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6026:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:5:9","memberName":"value","nodeType":"MemberAccess","src":"6026:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6039:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6026:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"nodeType":"IfStatement","src":"6022:109:9","trueBody":{"id":1282,"nodeType":"Block","src":"6042:89:9","statements":[{"expression":{"arguments":[{"id":1278,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6078:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1279,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6107:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1277,"name":"universalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"6060:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) returns (bytes memory)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6060:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1281,"nodeType":"ExpressionStatement","src":"6060:56:9"}]}},{"expression":{"hexValue":"","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6151:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1267,"id":1285,"nodeType":"Return","src":"6144:9:9"}]}},{"expression":{"arguments":[{"id":1289,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6206:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1288,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[2381],"referencedDeclaration":2381,"src":"6181:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1267,"id":1291,"nodeType":"Return","src":"6174:41:9"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"3576:2154:9","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens with some calldata.\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), return.\n @custom:info Whenever the call is associated with native tokens, the function will delegate the handling of native tokens internally to the {universalReceiver} function\n passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data, except when the native token will be sent directly to the extension.\n @custom:events {UniversalReceiver} event when receiving native tokens and extension function selector is not found or not payable."},"id":1293,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"callData","nameLocation":"5821:8:9","nodeType":"VariableDeclaration","scope":1293,"src":"5806:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"5806:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5796:39:9"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"5870:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"5870:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5869:14:9"},"scope":2455,"src":"5788:434:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[1134],"body":{"id":1362,"nodeType":"Block","src":"6514:960:9","statements":[{"expression":{"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"6524:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6546:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6551:6:9","memberName":"length","nodeType":"MemberAccess","src":"6546:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6534:11:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1305,"name":"bytes","nodeType":"ElementaryTypeName","src":"6538:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1306,"nodeType":"ArrayTypeName","src":"6538:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"6524:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1312,"nodeType":"ExpressionStatement","src":"6524:34:9"},{"body":{"id":1360,"nodeType":"Block","src":"6603:865:9","statements":[{"assignments":[1321,1323],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"success","nameLocation":"6623:7:9","nodeType":"VariableDeclaration","scope":1360,"src":"6618:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1320,"name":"bool","nodeType":"ElementaryTypeName","src":"6618:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"result","nameLocation":"6645:6:9","nodeType":"VariableDeclaration","scope":1360,"src":"6632:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1322,"name":"bytes","nodeType":"ElementaryTypeName","src":"6632:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1333,"initialValue":{"arguments":[{"baseExpression":{"id":1329,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6699:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1331,"indexExpression":{"id":1330,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6704:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6699:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":1326,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6663:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LSP0ERC725AccountCore_$2455","typeString":"contract LSP0ERC725AccountCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP0ERC725AccountCore_$2455","typeString":"contract LSP0ERC725AccountCore"}],"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6655:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:9","typeDescriptions":{}}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6655:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6669:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"6655:26:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6655:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6617:103:9"},{"condition":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6739:8:9","subExpression":{"id":1334,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6740:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1349,"nodeType":"IfStatement","src":"6735:629:9","trueBody":{"id":1348,"nodeType":"Block","src":"6749:615:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"6841:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6848:6:9","memberName":"length","nodeType":"MemberAccess","src":"6841:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6841:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1346,"nodeType":"Block","src":"7274:76:9","statements":[{"expression":{"arguments":[{"hexValue":"4c5350303a20626174636843616c6c73207265766572746564","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7303:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff386dbcb1aa30fe75dc1688ef2484c609e6f34f17710a6791ce87ec883580dd","typeString":"literal_string \"LSP0: batchCalls reverted\""},"value":"LSP0: batchCalls reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ff386dbcb1aa30fe75dc1688ef2484c609e6f34f17710a6791ce87ec883580dd","typeString":"literal_string \"LSP0: batchCalls reverted\""}],"id":1342,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7296:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7296:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"7296:35:9"}]},"id":1347,"nodeType":"IfStatement","src":"6837:513:9","trueBody":{"id":1341,"nodeType":"Block","src":"6861:407:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7101:149:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7127:36:9","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7156:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7150:5:9"},"nodeType":"YulFunctionCall","src":"7150:13:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7131:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7199:2:9","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"7203:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:9"},"nodeType":"YulFunctionCall","src":"7195:15:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7212:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7188:6:9"},"nodeType":"YulFunctionCall","src":"7188:40:9"},"nodeType":"YulExpressionStatement","src":"7188:40:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1323,"isOffset":false,"isSlot":false,"src":"7156:6:9","valueSize":1},{"declaration":1323,"isOffset":false,"isSlot":false,"src":"7203:6:9","valueSize":1}],"id":1340,"nodeType":"InlineAssembly","src":"7092:158:9"}]}}]}},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1350,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"7378:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1352,"indexExpression":{"id":1351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7386:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7378:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7391:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7378:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1355,"nodeType":"ExpressionStatement","src":"7378:19:9"},{"id":1359,"nodeType":"UncheckedBlock","src":"7412:46:9","statements":[{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7440:3:9","subExpression":{"id":1356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"7442:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1358,"nodeType":"ExpressionStatement","src":"7440:3:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6584:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6588:4:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:6:9","memberName":"length","nodeType":"MemberAccess","src":"6588:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6584:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"initializationExpression":{"assignments":[1314],"declarations":[{"constant":false,"id":1314,"mutability":"mutable","name":"i","nameLocation":"6581:1:9","nodeType":"VariableDeclaration","scope":1361,"src":"6573:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"6573:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1315,"nodeType":"VariableDeclarationStatement","src":"6573:9:9"},"nodeType":"ForStatement","src":"6568:900:9"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"6228:167:9","text":" @inheritdoc ILSP0ERC725Account\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"6409:10:9","nodeType":"FunctionDefinition","overrides":{"id":1299,"nodeType":"OverrideSpecifier","overrides":[],"src":"6472:8:9"},"parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"data","nameLocation":"6446:4:9","nodeType":"VariableDeclaration","scope":1363,"src":"6429:21:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6429:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1296,"nodeType":"ArrayTypeName","src":"6429:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6419:37:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"results","nameLocation":"6505:7:9","nodeType":"VariableDeclaration","scope":1363,"src":"6490:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"6490:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1301,"nodeType":"ArrayTypeName","src":"6490:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6489:24:9"},"scope":2455,"src":"6400:1074:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[64],"body":{"id":1449,"nodeType":"Block","src":"8544:1184:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8558:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8562:5:9","memberName":"value","nodeType":"MemberAccess","src":"8558:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8571:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8558:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"8554:244:9","trueBody":{"id":1396,"nodeType":"Block","src":"8574:224:9","statements":[{"eventCall":{"arguments":[{"expression":{"id":1383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8628:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8632:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8628:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8656:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8660:5:9","memberName":"value","nodeType":"MemberAccess","src":"8656:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1387,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8683:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":1390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8745:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8749:3:9","memberName":"sig","nodeType":"MemberAccess","src":"8745:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1388,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8728:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8732:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"8728:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8771:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1382,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"8593:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8593:194:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"EmitStatement","src":"8588:199:9"}]}},{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"accountOwner","nameLocation":"8816:12:9","nodeType":"VariableDeclaration","scope":1449,"src":"8808:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"8808:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1402,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1400,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8831:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8831:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8808:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8916:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8920:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8916:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1405,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"8930:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8916:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"nodeType":"IfStatement","src":"8912:120:9","trueBody":{"id":1415,"nodeType":"Block","src":"8944:88:9","statements":[{"expression":{"arguments":[{"id":1409,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"8986:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1410,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"9001:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9009:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1412,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9016:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1407,"name":"ERC725XCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8965:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725XCore_$588_$","typeString":"type(contract ERC725XCore)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8977:8:9","memberName":"_execute","nodeType":"MemberAccess","referencedDeclaration":223,"src":"8965:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8965:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1377,"id":1414,"nodeType":"Return","src":"8958:63:9"}]}},{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"verifyAfter","nameLocation":"9208:11:9","nodeType":"VariableDeclaration","scope":1449,"src":"9203:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1417,"name":"bool","nodeType":"ElementaryTypeName","src":"9203:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[{"id":1421,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"9256:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1419,"name":"LSP20CallVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"9222:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP20CallVerification_$3341_$","typeString":"type(contract LSP20CallVerification)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9244:11:9","memberName":"_verifyCall","nodeType":"MemberAccess","referencedDeclaration":3259,"src":"9222:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9203:66:9"},{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"result","nameLocation":"9326:6:9","nodeType":"VariableDeclaration","scope":1449,"src":"9313:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1424,"name":"bytes","nodeType":"ElementaryTypeName","src":"9313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"id":1428,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"9369:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1429,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"9396:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9416:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9435:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1426,"name":"ERC725XCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9335:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725XCore_$588_$","typeString":"type(contract ERC725XCore)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9347:8:9","memberName":"_execute","nodeType":"MemberAccess","referencedDeclaration":223,"src":"9335:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:114:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9313:136:9"},{"condition":{"id":1434,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9541:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"9537:161:9","trueBody":{"id":1445,"nodeType":"Block","src":"9554:144:9","statements":[{"expression":{"arguments":[{"id":1438,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"9625:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"9666:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1439,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9655:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9659:6:9","memberName":"encode","nodeType":"MemberAccess","src":"9655:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1435,"name":"LSP20CallVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"9568:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP20CallVerification_$3341_$","typeString":"type(contract LSP20CallVerification)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9590:17:9","memberName":"_verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3320,"src":"9568:39:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9568:119:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"9568:119:9"}]}},{"expression":{"id":1447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"9715:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1377,"id":1448,"nodeType":"Return","src":"9708:13:9"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"7480:876:9","text":" @inheritdoc ERC725XCore\n @custom:requirements\n - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully.\n - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`.\n - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\n @custom:events\n - {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4).\n - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2).\n - {UniversalReceiver} event when receiving native tokens."},"functionSelector":"44c028fe","id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"8370:7:9","nodeType":"FunctionDefinition","overrides":{"id":1374,"nodeType":"OverrideSpecifier","overrides":[],"src":"8512:8:9"},"parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"operationType","nameLocation":"8395:13:9","nodeType":"VariableDeclaration","scope":1450,"src":"8387:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"8387:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"target","nameLocation":"8426:6:9","nodeType":"VariableDeclaration","scope":1450,"src":"8418:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"8418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"value","nameLocation":"8450:5:9","nodeType":"VariableDeclaration","scope":1450,"src":"8442:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"8442:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"data","nameLocation":"8478:4:9","nodeType":"VariableDeclaration","scope":1450,"src":"8465:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1371,"name":"bytes","nodeType":"ElementaryTypeName","src":"8465:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8377:111:9"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1450,"src":"8530:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1375,"name":"bytes","nodeType":"ElementaryTypeName","src":"8530:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8529:14:9"},"scope":2455,"src":"8361:1367:9","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[94],"body":{"id":1544,"nodeType":"Block","src":"11091:1321:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11105:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11109:5:9","memberName":"value","nodeType":"MemberAccess","src":"11105:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11105:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"11101:244:9","trueBody":{"id":1488,"nodeType":"Block","src":"11121:224:9","statements":[{"eventCall":{"arguments":[{"expression":{"id":1475,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11175:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11179:6:9","memberName":"sender","nodeType":"MemberAccess","src":"11175:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11203:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:9","memberName":"value","nodeType":"MemberAccess","src":"11203:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1479,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"11230:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":1482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11292:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11296:3:9","memberName":"sig","nodeType":"MemberAccess","src":"11292:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11275:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11279:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"11275:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11275:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11318:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1474,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11140:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:194:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1487,"nodeType":"EmitStatement","src":"11135:199:9"}]}},{"assignments":[1491],"declarations":[{"constant":false,"id":1491,"mutability":"mutable","name":"accountOwner","nameLocation":"11363:12:9","nodeType":"VariableDeclaration","scope":1544,"src":"11355:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"11355:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1494,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"11378:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11378:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11355:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11463:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11467:6:9","memberName":"sender","nodeType":"MemberAccess","src":"11463:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1497,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"11477:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11463:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1508,"nodeType":"IfStatement","src":"11459:243:9","trueBody":{"id":1507,"nodeType":"Block","src":"11491:211:9","statements":[{"expression":{"arguments":[{"id":1501,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"11575:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1502,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"11611:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1503,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"11640:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1504,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11668:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":1499,"name":"ERC725XCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11528:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725XCore_$588_$","typeString":"type(contract ERC725XCore)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11540:13:9","memberName":"_executeBatch","nodeType":"MemberAccess","referencedDeclaration":322,"src":"11528:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bytes memory[] memory)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11528:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":1469,"id":1506,"nodeType":"Return","src":"11505:186:9"}]}},{"assignments":[1510],"declarations":[{"constant":false,"id":1510,"mutability":"mutable","name":"verifyAfter","nameLocation":"11878:11:9","nodeType":"VariableDeclaration","scope":1544,"src":"11873:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1509,"name":"bool","nodeType":"ElementaryTypeName","src":"11873:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1515,"initialValue":{"arguments":[{"id":1513,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"11926:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1511,"name":"LSP20CallVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"11892:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP20CallVerification_$3341_$","typeString":"type(contract LSP20CallVerification)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11914:11:9","memberName":"_verifyCall","nodeType":"MemberAccess","referencedDeclaration":3259,"src":"11892:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11892:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11873:66:9"},{"assignments":[1520],"declarations":[{"constant":false,"id":1520,"mutability":"mutable","name":"results","nameLocation":"11998:7:9","nodeType":"VariableDeclaration","scope":1544,"src":"11983:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1519,"nodeType":"ArrayTypeName","src":"11983:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":1528,"initialValue":{"arguments":[{"id":1523,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"12047:14:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1524,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"12075:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1525,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"12096:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1526,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12116:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":1521,"name":"ERC725XCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"12008:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725XCore_$588_$","typeString":"type(contract ERC725XCore)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12020:13:9","memberName":"_executeBatch","nodeType":"MemberAccess","referencedDeclaration":322,"src":"12008:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bytes memory[] memory)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:123:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11983:148:9"},{"condition":{"id":1529,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"12223:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"12219:162:9","trueBody":{"id":1540,"nodeType":"Block","src":"12236:145:9","statements":[{"expression":{"arguments":[{"id":1533,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"12307:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1536,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"12348:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":1534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12337:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12341:6:9","memberName":"encode","nodeType":"MemberAccess","src":"12337:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12337:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1530,"name":"LSP20CallVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"12250:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP20CallVerification_$3341_$","typeString":"type(contract LSP20CallVerification)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12272:17:9","memberName":"_verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3320,"src":"12250:39:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12250:120:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"12250:120:9"}]}},{"expression":{"id":1542,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"12398:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":1469,"id":1543,"nodeType":"Return","src":"12391:14:9"}]},"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"9734:1129:9","text":" @inheritdoc ERC725XCore\n @custom:requirements\n - The length of the parameters provided must be equal.\n - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully.\n - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`.\n - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\n @custom:warning\n - The `msg.value` should not be trusted for any method called within the batch with `operationType`: `DELEGATECALL` (4).\n @custom:events\n - {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). (each iteration)\n - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2) (each iteration)\n - {UniversalReceiver} event when receiving native tokens."},"functionSelector":"31858452","id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"10877:12:9","nodeType":"FunctionDefinition","overrides":{"id":1465,"nodeType":"OverrideSpecifier","overrides":[],"src":"11057:8:9"},"parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"operationsType","nameLocation":"10916:14:9","nodeType":"VariableDeclaration","scope":1545,"src":"10899:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ArrayTypeName","src":"10899:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"targets","nameLocation":"10957:7:9","nodeType":"VariableDeclaration","scope":1545,"src":"10940:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"10940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1456,"nodeType":"ArrayTypeName","src":"10940:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"values","nameLocation":"10991:6:9","nodeType":"VariableDeclaration","scope":1545,"src":"10974:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"10974:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ArrayTypeName","src":"10974:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"datas","nameLocation":"11022:5:9","nodeType":"VariableDeclaration","scope":1545,"src":"11007:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1461,"name":"bytes","nodeType":"ElementaryTypeName","src":"11007:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1462,"nodeType":"ArrayTypeName","src":"11007:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10889:144:9"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"11075:14:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1466,"name":"bytes","nodeType":"ElementaryTypeName","src":"11075:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1467,"nodeType":"ArrayTypeName","src":"11075:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"11074:16:9"},"scope":2455,"src":"10868:1544:9","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[704],"body":{"id":1609,"nodeType":"Block","src":"12855:991:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12869:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12873:5:9","memberName":"value","nodeType":"MemberAccess","src":"12869:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12882:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12869:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"12865:244:9","trueBody":{"id":1572,"nodeType":"Block","src":"12885:224:9","statements":[{"eventCall":{"arguments":[{"expression":{"id":1559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12939:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12943:6:9","memberName":"sender","nodeType":"MemberAccess","src":"12939:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12967:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12971:5:9","memberName":"value","nodeType":"MemberAccess","src":"12967:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1563,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"12994:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":1566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13056:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13060:3:9","memberName":"sig","nodeType":"MemberAccess","src":"13056:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1564,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13039:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13043:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"13039:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13039:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13082:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1558,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"12904:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:194:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"EmitStatement","src":"12899:199:9"}]}},{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"mutability":"mutable","name":"accountOwner","nameLocation":"13127:12:9","nodeType":"VariableDeclaration","scope":1609,"src":"13119:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"13119:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1578,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1576,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"13142:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13119:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13227:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13231:6:9","memberName":"sender","nodeType":"MemberAccess","src":"13227:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1581,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"13241:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13227:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1589,"nodeType":"IfStatement","src":"13223:92:9","trueBody":{"id":1588,"nodeType":"Block","src":"13255:60:9","statements":[{"expression":{"arguments":[{"id":1584,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"13285:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1585,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"13294:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1583,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"13276:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":1553,"id":1587,"nodeType":"Return","src":"13269:35:9"}]}},{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"verifyAfter","nameLocation":"13494:11:9","nodeType":"VariableDeclaration","scope":1609,"src":"13489:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1590,"name":"bool","nodeType":"ElementaryTypeName","src":"13489:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1595,"initialValue":{"arguments":[{"id":1593,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"13520:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1592,"name":"_verifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"13508:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13508:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13489:44:9"},{"expression":{"arguments":[{"id":1597,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"13553:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1598,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"13562:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1596,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"13544:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13544:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"13544:28:9"},{"condition":{"id":1601,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"13767:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"13763:77:9","trueBody":{"id":1607,"nodeType":"Block","src":"13780:60:9","statements":[{"expression":{"arguments":[{"id":1603,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"13812:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13826:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1602,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"13794:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13794:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"ExpressionStatement","src":"13794:35:9"}]}}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"12418:320:9","text":" @inheritdoc ERC725YCore\n @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n @custom:events\n - {UniversalReceiver} event when receiving native tokens.\n - {DataChanged} event."},"functionSelector":"7f23690c","id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"setData","nameLocation":"12752:7:9","nodeType":"FunctionDefinition","overrides":{"id":1552,"nodeType":"OverrideSpecifier","overrides":[],"src":"12846:8:9"},"parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"dataKey","nameLocation":"12777:7:9","nodeType":"VariableDeclaration","scope":1610,"src":"12769:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12769:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"dataValue","nameLocation":"12807:9:9","nodeType":"VariableDeclaration","scope":1610,"src":"12794:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1549,"name":"bytes","nodeType":"ElementaryTypeName","src":"12794:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12759:63:9"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"12855:0:9"},"scope":2455,"src":"12743:1103:9","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[768],"body":{"id":1730,"nodeType":"Block","src":"14343:1511:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14357:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14361:5:9","memberName":"value","nodeType":"MemberAccess","src":"14357:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14370:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14357:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1640,"nodeType":"IfStatement","src":"14353:244:9","trueBody":{"id":1639,"nodeType":"Block","src":"14373:224:9","statements":[{"eventCall":{"arguments":[{"expression":{"id":1626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14427:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14431:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14427:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14455:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14459:5:9","memberName":"value","nodeType":"MemberAccess","src":"14455:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1630,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"14482:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14544:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14548:3:9","memberName":"sig","nodeType":"MemberAccess","src":"14544:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1631,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14527:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14531:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"14527:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14570:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1625,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"14392:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14392:194:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1638,"nodeType":"EmitStatement","src":"14387:199:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1641,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"14611:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14620:6:9","memberName":"length","nodeType":"MemberAccess","src":"14611:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1643,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"14630:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14641:6:9","memberName":"length","nodeType":"MemberAccess","src":"14630:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14611:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"nodeType":"IfStatement","src":"14607:112:9","trueBody":{"id":1649,"nodeType":"Block","src":"14649:70:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"14670:36:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14670:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"RevertStatement","src":"14663:45:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1651,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"14733:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14742:6:9","memberName":"length","nodeType":"MemberAccess","src":"14733:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14752:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14733:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1659,"nodeType":"IfStatement","src":"14729:92:9","trueBody":{"id":1658,"nodeType":"Block","src":"14755:66:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1655,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"14776:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14776:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"RevertStatement","src":"14769:41:9"}]}},{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"accountOwner","nameLocation":"14839:12:9","nodeType":"VariableDeclaration","scope":1730,"src":"14831:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"14831:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"14854:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14854:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14831:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14939:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14943:6:9","memberName":"sender","nodeType":"MemberAccess","src":"14939:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1667,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"14953:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14939:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1693,"nodeType":"IfStatement","src":"14935:257:9","trueBody":{"id":1692,"nodeType":"Block","src":"14967:225:9","statements":[{"body":{"id":1689,"nodeType":"Block","src":"15020:141:9","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1677,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"15047:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1679,"indexExpression":{"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15056:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15047:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1680,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"15060:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1682,"indexExpression":{"id":1681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15071:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15060:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1676,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"15038:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15038:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"15038:36:9"},{"id":1688,"nodeType":"UncheckedBlock","src":"15093:54:9","statements":[{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15125:3:9","subExpression":{"id":1685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15127:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"15125:3:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"14997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1673,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"15001:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15010:6:9","memberName":"length","nodeType":"MemberAccess","src":"15001:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14997:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"initializationExpression":{"assignments":[1670],"declarations":[{"constant":false,"id":1670,"mutability":"mutable","name":"i","nameLocation":"14994:1:9","nodeType":"VariableDeclaration","scope":1690,"src":"14986:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"14986:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"nodeType":"VariableDeclarationStatement","src":"14986:9:9"},"nodeType":"ForStatement","src":"14981:180:9"},{"functionReturnParameters":1620,"id":1691,"nodeType":"Return","src":"15175:7:9"}]}},{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"verifyAfter","nameLocation":"15371:11:9","nodeType":"VariableDeclaration","scope":1730,"src":"15366:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1694,"name":"bool","nodeType":"ElementaryTypeName","src":"15366:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1699,"initialValue":{"arguments":[{"id":1697,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"15397:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1696,"name":"_verifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"15385:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15385:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15366:44:9"},{"body":{"id":1720,"nodeType":"Block","src":"15460:121:9","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1708,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"15483:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1710,"indexExpression":{"id":1709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"15492:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15483:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1711,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"15496:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1713,"indexExpression":{"id":1712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"15507:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15496:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1707,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"15474:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15474:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"ExpressionStatement","src":"15474:36:9"},{"id":1719,"nodeType":"UncheckedBlock","src":"15525:46:9","statements":[{"expression":{"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15553:3:9","subExpression":{"id":1716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"15555:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1718,"nodeType":"ExpressionStatement","src":"15553:3:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"15437:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1704,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"15441:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15450:6:9","memberName":"length","nodeType":"MemberAccess","src":"15441:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15437:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"initializationExpression":{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"i","nameLocation":"15434:1:9","nodeType":"VariableDeclaration","scope":1721,"src":"15426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"15426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"nodeType":"VariableDeclarationStatement","src":"15426:9:9"},"nodeType":"ForStatement","src":"15421:160:9"},{"condition":{"id":1722,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"15775:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"nodeType":"IfStatement","src":"15771:77:9","trueBody":{"id":1728,"nodeType":"Block","src":"15788:60:9","statements":[{"expression":{"arguments":[{"id":1724,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"15820:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1723,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"15802:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15802:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"15802:35:9"}]}}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"13852:356:9","text":" @inheritdoc ERC725YCore\n @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n @custom:events\n - {UniversalReceiver} event when receiving native tokens.\n - {DataChanged} event. (on each iteration of setting data)"},"functionSelector":"97902421","id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"14222:12:9","nodeType":"FunctionDefinition","overrides":{"id":1619,"nodeType":"OverrideSpecifier","overrides":[],"src":"14334:8:9"},"parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"dataKeys","nameLocation":"14261:8:9","nodeType":"VariableDeclaration","scope":1731,"src":"14244:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14244:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1613,"nodeType":"ArrayTypeName","src":"14244:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"dataValues","nameLocation":"14294:10:9","nodeType":"VariableDeclaration","scope":1731,"src":"14279:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1615,"name":"bytes","nodeType":"ElementaryTypeName","src":"14279:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1616,"nodeType":"ArrayTypeName","src":"14279:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14234:76:9"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"14343:0:9"},"scope":2455,"src":"14213:1641:9","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[3025],"body":{"id":1878,"nodeType":"Block","src":"18307:2469:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18321:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18325:5:9","memberName":"value","nodeType":"MemberAccess","src":"18321:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18321:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"18340:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1747,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"18350:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18340:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18339:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18321:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"18317:144:9","trueBody":{"id":1757,"nodeType":"Block","src":"18380:81:9","statements":[{"expression":{"arguments":[{"id":1752,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"18412:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18441:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18445:4:9","memberName":"data","nodeType":"MemberAccess","src":"18441:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1751,"name":"universalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"18394:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) returns (bytes memory)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18394:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1756,"nodeType":"ExpressionStatement","src":"18394:56:9"}]}},{"assignments":[1760],"declarations":[{"constant":false,"id":1760,"mutability":"mutable","name":"lsp1DelegateValue","nameLocation":"18579:17:9","nodeType":"VariableDeclaration","scope":1878,"src":"18566:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1759,"name":"bytes","nodeType":"ElementaryTypeName","src":"18566:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1764,"initialValue":{"arguments":[{"id":1762,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18621:37:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1761,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"18599:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18599:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"18566:102:9"},{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"resultDefaultDelegate","nameLocation":"18691:21:9","nodeType":"VariableDeclaration","scope":1878,"src":"18678:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"18678:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1767,"nodeType":"VariableDeclarationStatement","src":"18678:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1768,"name":"lsp1DelegateValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"18727:17:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18745:6:9","memberName":"length","nodeType":"MemberAccess","src":"18727:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18755:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"18727:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1803,"nodeType":"IfStatement","src":"18723:623:9","trueBody":{"id":1802,"nodeType":"Block","src":"18759:587:9","statements":[{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"lsp1Delegate","nameLocation":"18781:12:9","nodeType":"VariableDeclaration","scope":1802,"src":"18773:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"18773:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1781,"initialValue":{"arguments":[{"arguments":[{"id":1778,"name":"lsp1DelegateValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"18812:17:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18804:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1776,"name":"bytes20","nodeType":"ElementaryTypeName","src":"18804:7:9","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18804:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18796:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"18796:7:9","typeDescriptions":{}}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18796:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18773:58:9"},{"condition":{"arguments":[{"id":1784,"name":"_INTERFACEID_LSP1_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"18983:26:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1782,"name":"lsp1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"18916:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18929:32:9","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5358,"src":"18916:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18916:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"nodeType":"IfStatement","src":"18895:441:9","trueBody":{"id":1800,"nodeType":"Block","src":"19042:294:9","statements":[{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"resultDefaultDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"19060:21:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19184:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19188:6:9","memberName":"sender","nodeType":"MemberAccess","src":"19184:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19220:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19224:5:9","memberName":"value","nodeType":"MemberAccess","src":"19220:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1795,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"19255:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1796,"name":"receivedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"19287:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1788,"name":"lsp1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"19098:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1787,"name":"ILSP1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"19084:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiverDelegate_$3044_$","typeString":"type(contract ILSP1UniversalReceiverDelegate)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19084:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiverDelegate_$3044","typeString":"contract ILSP1UniversalReceiverDelegate"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19133:25:9","memberName":"universalReceiverDelegate","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"19084:74:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes32,bytes memory) external returns (bytes memory)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19084:237:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19060:261:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1799,"nodeType":"ExpressionStatement","src":"19060:261:9"}]}}]}},{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"lsp1typeIdDelegateKey","nameLocation":"19459:21:9","nodeType":"VariableDeclaration","scope":1878,"src":"19451:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19451:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1814,"initialValue":{"arguments":[{"id":1808,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"19525:40:9","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":1811,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"19587:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19579:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1809,"name":"bytes20","nodeType":"ElementaryTypeName","src":"19579:7:9","typeDescriptions":{}}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19579:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1806,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"19483:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$4114_$","typeString":"type(library LSP2Utils)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19493:18:9","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":3604,"src":"19483:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19483:121:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19451:153:9"},{"assignments":[1816],"declarations":[{"constant":false,"id":1816,"mutability":"mutable","name":"lsp1TypeIdDelegateValue","nameLocation":"19745:23:9","nodeType":"VariableDeclaration","scope":1878,"src":"19732:36:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1815,"name":"bytes","nodeType":"ElementaryTypeName","src":"19732:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[{"id":1818,"name":"lsp1typeIdDelegateKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"19780:21:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1817,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"19771:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19771:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"19732:70:9"},{"assignments":[1822],"declarations":[{"constant":false,"id":1822,"mutability":"mutable","name":"resultTypeIdDelegate","nameLocation":"19825:20:9","nodeType":"VariableDeclaration","scope":1878,"src":"19812:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1821,"name":"bytes","nodeType":"ElementaryTypeName","src":"19812:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1823,"nodeType":"VariableDeclarationStatement","src":"19812:33:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1824,"name":"lsp1TypeIdDelegateValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"19860:23:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19884:6:9","memberName":"length","nodeType":"MemberAccess","src":"19860:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19894:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"19860:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1859,"nodeType":"IfStatement","src":"19856:634:9","trueBody":{"id":1858,"nodeType":"Block","src":"19898:592:9","statements":[{"assignments":[1829],"declarations":[{"constant":false,"id":1829,"mutability":"mutable","name":"lsp1Delegate","nameLocation":"19920:12:9","nodeType":"VariableDeclaration","scope":1858,"src":"19912:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"19912:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[{"arguments":[{"id":1834,"name":"lsp1TypeIdDelegateValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"19951:23:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19943:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1832,"name":"bytes20","nodeType":"ElementaryTypeName","src":"19943:7:9","typeDescriptions":{}}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19943:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19935:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"19935:7:9","typeDescriptions":{}}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19935:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19912:64:9"},{"condition":{"arguments":[{"id":1840,"name":"_INTERFACEID_LSP1_DELEGATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"20128:26:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1838,"name":"lsp1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"20061:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20074:32:9","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5358,"src":"20061:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"20040:440:9","trueBody":{"id":1856,"nodeType":"Block","src":"20187:293:9","statements":[{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"resultTypeIdDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"20205:20:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20328:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20332:6:9","memberName":"sender","nodeType":"MemberAccess","src":"20328:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20364:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20368:5:9","memberName":"value","nodeType":"MemberAccess","src":"20364:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"20399:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1852,"name":"receivedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"20431:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1844,"name":"lsp1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"20242:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1843,"name":"ILSP1Delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"20228:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiverDelegate_$3044_$","typeString":"type(contract ILSP1UniversalReceiverDelegate)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20228:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiverDelegate_$3044","typeString":"contract ILSP1UniversalReceiverDelegate"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20277:25:9","memberName":"universalReceiverDelegate","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"20228:74:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes32,bytes memory) external returns (bytes memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20228:237:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20205:260:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1855,"nodeType":"ExpressionStatement","src":"20205:260:9"}]}}]}},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1860,"name":"returnedValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"20500:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1863,"name":"resultDefaultDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"20541:21:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1864,"name":"resultTypeIdDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"20576:20:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20517:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20521:6:9","memberName":"encode","nodeType":"MemberAccess","src":"20517:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20517:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"20500:106:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1867,"nodeType":"ExpressionStatement","src":"20500:106:9"},{"eventCall":{"arguments":[{"expression":{"id":1869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20652:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20656:6:9","memberName":"sender","nodeType":"MemberAccess","src":"20652:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20676:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20680:5:9","memberName":"value","nodeType":"MemberAccess","src":"20676:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1873,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"20699:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1874,"name":"receivedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"20719:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1875,"name":"returnedValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"20745:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"20621:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20621:148:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"EmitStatement","src":"20616:153:9"}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"15860:2280:9","text":" @notice Notifying the contract by calling its `universalReceiver` function with the following informations: typeId: `typeId`; data: `data`.\n @dev Achieves the goal of [LSP-1-UniversalReceiver] by allowing the account to be notified about incoming/outgoing transactions and enabling reactions to these actions.\n The reaction is achieved by having two external contracts ([LSP1UniversalReceiverDelegate]) that react on the whole transaction and on the specific typeId, respectively.\n The function performs the following steps:\n 1. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY].\n      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.\n      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function.\n 2. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX] + `bytes32(typeId)`.\n   (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.\n      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function.\n This function delegates internally the handling of native tokens to the {universalReceiver} function itself passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data.\n @param typeId The type of call received.\n @param receivedData The data received.\n @return returnedValues The ABI encoded return value of the LSP1UniversalReceiverDelegate call and the LSP1TypeIdDelegate call.\n @custom:events\n - {UniversalReceiver} when receiving native tokens.\n - {UniversalReceiver} event with the function parameters, call options, and the response of the UniversalReceiverDelegates (URD) contract that was called."},"functionSelector":"6bb56a14","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"18154:17:9","nodeType":"FunctionDefinition","overrides":{"id":1738,"nodeType":"OverrideSpecifier","overrides":[],"src":"18260:8:9"},"parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"typeId","nameLocation":"18189:6:9","nodeType":"VariableDeclaration","scope":1879,"src":"18181:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18181:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"receivedData","nameLocation":"18218:12:9","nodeType":"VariableDeclaration","scope":1879,"src":"18205:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1735,"name":"bytes","nodeType":"ElementaryTypeName","src":"18205:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18171:65:9"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"returnedValues","nameLocation":"18291:14:9","nodeType":"VariableDeclaration","scope":1879,"src":"18278:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"18278:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18277:29:9"},"scope":2455,"src":"18145:2631:9","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[915,2634],"body":{"id":1974,"nodeType":"Block","src":"21337:1939:9","statements":[{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"currentOwner","nameLocation":"21355:12:9","nodeType":"VariableDeclaration","scope":1974,"src":"21347:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"21347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1892,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1890,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"21370:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21370:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21347:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1893,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21465:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21469:6:9","memberName":"sender","nodeType":"MemberAccess","src":"21465:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1895,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"21479:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21465:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1972,"nodeType":"Block","src":"22104:1166:9","statements":[{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"verifyAfter","nameLocation":"22305:11:9","nodeType":"VariableDeclaration","scope":1972,"src":"22300:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1928,"name":"bool","nodeType":"ElementaryTypeName","src":"22300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1933,"initialValue":{"arguments":[{"id":1931,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"22331:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1930,"name":"_verifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"22319:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22319:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"22300:44:9"},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1934,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22406:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22429:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"22406:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1937,"nodeType":"ExpressionStatement","src":"22406:27:9"},{"expression":{"arguments":[{"id":1941,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"22545:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1938,"name":"LSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"22508:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP14Ownable2Step_$2837_$","typeString":"type(contract LSP14Ownable2Step)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22526:18:9","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2741,"src":"22508:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22508:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"22508:53:9"},{"eventCall":{"arguments":[{"id":1945,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"22605:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1946,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"22619:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1944,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"22580:24:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22580:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1948,"nodeType":"EmitStatement","src":"22575:60:9"},{"expression":{"arguments":[{"id":1952,"name":"_TYPEID_LSP0_OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"22760:37:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1955,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"22826:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1956,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"22840:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1953,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22815:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22819:6:9","memberName":"encode","nodeType":"MemberAccess","src":"22815:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22815:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1949,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"22703:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22719:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"22703:39:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22703:167:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"22703:167:9"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22934:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22957:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"22934:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"ExpressionStatement","src":"22934:28:9"},{"condition":{"id":1964,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"23179:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"23175:85:9","trueBody":{"id":1970,"nodeType":"Block","src":"23192:68:9","statements":[{"expression":{"arguments":[{"id":1966,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"23228:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23242:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1965,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"23210:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23210:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"23210:35:9"}]}}]},"id":1973,"nodeType":"IfStatement","src":"21461:1809:9","trueBody":{"id":1927,"nodeType":"Block","src":"21493:605:9","statements":[{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1897,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"21554:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21577:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"21554:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"ExpressionStatement","src":"21554:27:9"},{"expression":{"arguments":[{"id":1904,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"21670:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1901,"name":"LSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"21633:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP14Ownable2Step_$2837_$","typeString":"type(contract LSP14Ownable2Step)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21651:18:9","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2741,"src":"21633:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21633:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"ExpressionStatement","src":"21633:53:9"},{"eventCall":{"arguments":[{"id":1908,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"21730:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1909,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"21744:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1907,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"21705:24:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21705:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"EmitStatement","src":"21700:60:9"},{"expression":{"arguments":[{"id":1915,"name":"_TYPEID_LSP0_OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"21885:37:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1918,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"21951:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"21965:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21940:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21944:6:9","memberName":"encode","nodeType":"MemberAccess","src":"21940:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21940:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1912,"name":"pendingNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"21828:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21844:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"21828:39:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21828:167:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"21828:167:9"},{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1923,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22059:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22082:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"22059:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1926,"nodeType":"ExpressionStatement","src":"22059:28:9"}]}}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"20782:427:9","text":" @inheritdoc LSP14Ownable2Step\n @custom:requirements\n - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n - When notifying the new owner via LSP1, the `typeId` used must be the `keccak256(...)` hash of [LSP0OwnershipTransferStarted].\n - Pending owner cannot accept ownership in the same tx via the LSP1 hook."},"functionSelector":"f2fde38b","id":1975,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"21223:17:9","nodeType":"FunctionDefinition","overrides":{"id":1886,"nodeType":"OverrideSpecifier","overrides":[{"id":1884,"name":"LSP14Ownable2Step","nameLocations":["21304:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2837,"src":"21304:17:9"},{"id":1885,"name":"OwnableUnset","nameLocations":["21323:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"21323:12:9"}],"src":"21295:41:9"},"parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"pendingNewOwner","nameLocation":"21258:15:9","nodeType":"VariableDeclaration","scope":1975,"src":"21250:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"21250:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21240:39:9"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"21337:0:9"},"scope":2455,"src":"21214:2062:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2676],"body":{"id":2051,"nodeType":"Block","src":"23805:1431:9","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"previousOwner","nameLocation":"23823:13:9","nodeType":"VariableDeclaration","scope":2051,"src":"23815:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"23815:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1986,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"23839:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23839:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23815:31:9"},{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"pendingOwnerAddress","nameLocation":"23864:19:9","nodeType":"VariableDeclaration","scope":2051,"src":"23856:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"23856:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1989,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"23886:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23886:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23856:44:9"},{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"verifyAfter","nameLocation":"23916:11:9","nodeType":"VariableDeclaration","scope":2051,"src":"23911:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1992,"name":"bool","nodeType":"ElementaryTypeName","src":"23911:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1994,"nodeType":"VariableDeclarationStatement","src":"23911:16:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23942:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23946:6:9","memberName":"sender","nodeType":"MemberAccess","src":"23942:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1997,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"23956:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23942:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2019,"nodeType":"Block","src":"24379:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2016,"name":"_acceptOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"24393:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24393:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"ExpressionStatement","src":"24393:18:9"}]},"id":2020,"nodeType":"IfStatement","src":"23938:484:9","trueBody":{"id":2015,"nodeType":"Block","src":"23977:396:9","statements":[{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"24189:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2001,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"24215:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2000,"name":"_verifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"24203:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24203:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24189:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2004,"nodeType":"ExpressionStatement","src":"24189:46:9"},{"expression":{"arguments":[{"id":2006,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"24260:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2005,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"24250:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24250:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"24250:30:9"},{"expression":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"24294:20:9","subExpression":{"id":2009,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"24301:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"24294:20:9"},{"expression":{"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"24328:34:9","subExpression":{"id":2012,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"24335:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"24328:34:9"}]}},{"expression":{"arguments":[{"id":2024,"name":"_TYPEID_LSP0_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"24537:52:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2027,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"24614:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2028,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"24629:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2025,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24603:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24607:6:9","memberName":"encode","nodeType":"MemberAccess","src":"24603:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24603:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2021,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"24486:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24500:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"24486:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24486:173:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"ExpressionStatement","src":"24486:173:9"},{"expression":{"arguments":[{"id":2035,"name":"_TYPEID_LSP0_OwnershipTransferred_RecipientNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"24780:55:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2038,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"24860:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"24875:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2036,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24849:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24853:6:9","memberName":"encode","nodeType":"MemberAccess","src":"24849:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24849:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2032,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"24723:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24743:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"24723:43:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24723:182:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2042,"nodeType":"ExpressionStatement","src":"24723:182:9"},{"condition":{"id":2043,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"25150:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2050,"nodeType":"IfStatement","src":"25146:84:9","trueBody":{"id":2049,"nodeType":"Block","src":"25163:67:9","statements":[{"expression":{"arguments":[{"id":2045,"name":"pendingOwnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"25195:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25216:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2044,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"25177:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25177:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2048,"nodeType":"ExpressionStatement","src":"25177:42:9"}]}}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"23282:444:9","text":" @inheritdoc LSP14Ownable2Step\n @custom:requirements\n - Only the {pendingOwner} can call this function.\n - When notifying the previous owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_SenderNotification].\n - When notifying the new owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_RecipientNotification]."},"functionSelector":"79ba5097","id":2052,"implemented":true,"kind":"function","modifiers":[{"id":1980,"kind":"modifierInvocation","modifierName":{"id":1979,"name":"notInTransferOwnership","nameLocations":["23782:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"23782:22:9"},"nodeType":"ModifierInvocation","src":"23782:22:9"}],"name":"acceptOwnership","nameLocation":"23740:15:9","nodeType":"FunctionDefinition","overrides":{"id":1978,"nodeType":"OverrideSpecifier","overrides":[],"src":"23773:8:9"},"parameters":{"id":1977,"nodeType":"ParameterList","parameters":[],"src":"23755:2:9"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"23805:0:9"},"scope":2455,"src":"23731:1505:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[891,2717],"body":{"id":2151,"nodeType":"Block","src":"25875:1444:9","statements":[{"assignments":[2060],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"accountOwner","nameLocation":"25893:12:9","nodeType":"VariableDeclaration","scope":2151,"src":"25885:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"25885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2063,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2061,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"25908:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25908:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25885:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26003:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26007:6:9","memberName":"sender","nodeType":"MemberAccess","src":"26003:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2066,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"26017:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26003:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2149,"nodeType":"Block","src":"26406:907:9","statements":[{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"verifyAfter","nameLocation":"26607:11:9","nodeType":"VariableDeclaration","scope":2149,"src":"26602:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2102,"name":"bool","nodeType":"ElementaryTypeName","src":"26602:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"id":2105,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"26633:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2104,"name":"_verifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"26621:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26621:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"26602:44:9"},{"assignments":[2109],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"previousOwner","nameLocation":"26669:13:9","nodeType":"VariableDeclaration","scope":2149,"src":"26661:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"26661:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2112,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"26685:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26685:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26661:31:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2113,"name":"LSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"26706:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP14Ownable2Step_$2837_$","typeString":"type(contract LSP14Ownable2Step)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26724:18:9","memberName":"_renounceOwnership","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"26706:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26706:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"26706:38:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2118,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"26763:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26763:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26782:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26774:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"26774:7:9","typeDescriptions":{}}},"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26774:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26763:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"26759:247:9","trueBody":{"id":2139,"nodeType":"Block","src":"26786:220:9","statements":[{"expression":{"arguments":[{"id":2128,"name":"_TYPEID_LSP0_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"26863:52:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2131,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"26948:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26970:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26962:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"26962:7:9","typeDescriptions":{}}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26962:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26937:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26941:6:9","memberName":"encode","nodeType":"MemberAccess","src":"26937:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26937:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2125,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"26804:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26818:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"26804:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26804:187:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"ExpressionStatement","src":"26804:187:9"}]}},{"condition":{"id":2141,"name":"verifyAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"27222:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"27218:85:9","trueBody":{"id":2147,"nodeType":"Block","src":"27235:68:9","statements":[{"expression":{"arguments":[{"id":2143,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"27271:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27285:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2142,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"27253:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27253:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"27253:35:9"}]}}]},"id":2150,"nodeType":"IfStatement","src":"25999:1314:9","trueBody":{"id":2101,"nodeType":"Block","src":"26031:369:9","statements":[{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"previousOwner","nameLocation":"26053:13:9","nodeType":"VariableDeclaration","scope":2101,"src":"26045:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"26045:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"26069:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26069:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26045:31:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2073,"name":"LSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"26090:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP14Ownable2Step_$2837_$","typeString":"type(contract LSP14Ownable2Step)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26108:18:9","memberName":"_renounceOwnership","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"26090:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26090:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"26090:38:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"26147:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26147:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26166:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26158:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"26158:7:9","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26158:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26147:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"26143:247:9","trueBody":{"id":2099,"nodeType":"Block","src":"26170:220:9","statements":[{"expression":{"arguments":[{"id":2088,"name":"_TYPEID_LSP0_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"26247:52:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2091,"name":"accountOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"26332:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26354:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26346:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"26346:7:9","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26346:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2089,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26321:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26325:6:9","memberName":"encode","nodeType":"MemberAccess","src":"26321:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26321:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2085,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"26188:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26202:23:9","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"26188:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26188:187:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"ExpressionStatement","src":"26188:187:9"}]}}]}}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"25242:514:9","text":" @inheritdoc LSP14Ownable2Step\n @custom:requirements Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\n @custom:danger Leaves the contract without an owner. Once ownership of the contract has been renounced, any functions that are restricted to be called by the owner or an address allowed by the owner will be permanently inaccessible, making these functions not callable anymore and unusable."},"functionSelector":"715018a6","id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"renounceOwnership","nameLocation":"25770:17:9","nodeType":"FunctionDefinition","overrides":{"id":2057,"nodeType":"OverrideSpecifier","overrides":[{"id":2055,"name":"LSP14Ownable2Step","nameLocations":["25838:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2837,"src":"25838:17:9"},{"id":2056,"name":"OwnableUnset","nameLocations":["25857:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"25857:12:9"}],"src":"25829:41:9"},"parameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"25787:2:9"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"25875:0:9"},"scope":2455,"src":"25761:1558:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[115,822,2897],"body":{"id":2194,"nodeType":"Block","src":"28316:415:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28345:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2165,"name":"_INTERFACEID_ERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"28360:20:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"28345:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28396:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2168,"name":"_INTERFACEID_LSP0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"28411:17:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"28396:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:83:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28444:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2172,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"28459:17:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"28444:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:131:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28492:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2176,"name":"_INTERFACEID_LSP14","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"28507:18:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"28492:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:180:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28541:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2180,"name":"_INTERFACEID_LSP20_CALL_VERIFICATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"28556:36:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"28541:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:247:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2185,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28632:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2183,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"28608:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP0ERC725AccountCore_$2455_$","typeString":"type(contract super LSP0ERC725AccountCore)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28614:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2897,"src":"28608:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28608:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:299:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2190,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"28712:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2188,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"28660:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$2999_$","typeString":"type(contract LSP17Extendable)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28676:35:9","memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":2929,"src":"28660:51:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28660:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28345:379:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2163,"id":2193,"nodeType":"Return","src":"28326:398:9"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"27325:794:9","text":" @notice Checking if this contract supports the interface defined by the `bytes4` interface ID `interfaceId`.\n @dev Achieves the goal of [ERC-165] to detect supported interfaces and [LSP-17-ContractExtension] by\n checking if the interfaceId being queried is supported on another linked extension.\n If the contract doesn't support the `interfaceId`, it forwards the call to the\n `supportsInterface` extension according to [LSP-17-ContractExtension], and checks if the extension\n implements the interface defined by `interfaceId`.\n @param interfaceId The interface ID to check if the contract supports it.\n @return `true` if this contract implements the interface defined by `interfaceId`, `false` otherwise."},"functionSelector":"01ffc9a7","id":2195,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"28133:17:9","nodeType":"FunctionDefinition","overrides":{"id":2160,"nodeType":"OverrideSpecifier","overrides":[{"id":2157,"name":"ERC725XCore","nameLocations":["28246:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"28246:11:9"},{"id":2158,"name":"ERC725YCore","nameLocations":["28259:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":823,"src":"28259:11:9"},{"id":2159,"name":"LSP17Extendable","nameLocations":["28272:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2999,"src":"28272:15:9"}],"src":"28237:51:9"},"parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"interfaceId","nameLocation":"28167:11:9","nodeType":"VariableDeclaration","scope":2195,"src":"28160:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2154,"name":"bytes4","nodeType":"ElementaryTypeName","src":"28160:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"28150:34:9"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2195,"src":"28306:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"28306:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28305:6:9"},"scope":2455,"src":"28124:607:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4134],"body":{"id":2289,"nodeType":"Block","src":"30706:1486:9","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"_owner","nameLocation":"30724:6:9","nodeType":"VariableDeclaration","scope":2289,"src":"30716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"30716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"30733:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30733:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"30716:24:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2211,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"30789:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30796:4:9","memberName":"code","nodeType":"MemberAccess","src":"30789:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30801:6:9","memberName":"length","nodeType":"MemberAccess","src":"30789:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30789:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2287,"nodeType":"Block","src":"31378:808:9","statements":[{"assignments":[2262,2265],"declarations":[{"constant":false,"id":2262,"mutability":"mutable","name":"recoveredAddress","nameLocation":"31480:16:9","nodeType":"VariableDeclaration","scope":2287,"src":"31472:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"31472:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"returnedError","nameLocation":"31517:13:9","nodeType":"VariableDeclaration","scope":2287,"src":"31498:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2264,"nodeType":"UserDefinedTypeName","pathNode":{"id":2263,"name":"ECDSA.RecoverError","nameLocations":["31498:5:9","31504:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"31498:18:9"},"referencedDeclaration":4785,"src":"31498:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2271,"initialValue":{"arguments":[{"id":2268,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"31568:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2269,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"31578:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2266,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"31534:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5141_$","typeString":"type(library ECDSA)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31557:10:9","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"31534:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31534:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"31471:117:9"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"returnedError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"31675:13:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2273,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"31692:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5141_$","typeString":"type(library ECDSA)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31698:12:9","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":4785,"src":"31692:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31711:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4780,"src":"31692:26:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"src":"31675:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"31671:90:9","trueBody":{"expression":{"id":2277,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"31743:18:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2205,"id":2278,"nodeType":"Return","src":"31736:25:9"}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"32064:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2281,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"32084:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32064:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2284,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"32157:18:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"32064:111:9","trueExpression":{"id":2283,"name":"_ERC1271_SUCCESSVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"32113:21:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2205,"id":2286,"nodeType":"Return","src":"32041:134:9"}]},"id":2288,"nodeType":"IfStatement","src":"30785:1401:9","trueBody":{"id":2260,"nodeType":"Block","src":"30814:520:9","statements":[{"assignments":[2217,2219],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"success","nameLocation":"30834:7:9","nodeType":"VariableDeclaration","scope":2260,"src":"30829:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"30829:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"result","nameLocation":"30856:6:9","nodeType":"VariableDeclaration","scope":2260,"src":"30843:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"30843:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2231,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":2224,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"30945:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$4135_$","typeString":"type(contract IERC1271)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30954:16:9","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":4134,"src":"30945:25:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30971:8:9","memberName":"selector","nodeType":"MemberAccess","src":"30945:34:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2227,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"31001:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2228,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"31031:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2222,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30901:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30905:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"30901:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30901:157:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2220,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"30866:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30873:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"30866:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30866:206:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"30828:244:9"},{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"isValid","nameLocation":"31092:7:9","nodeType":"VariableDeclaration","scope":2260,"src":"31087:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2232,"name":"bool","nodeType":"ElementaryTypeName","src":"31087:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2254,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"31103:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"31130:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31137:6:9","memberName":"length","nodeType":"MemberAccess","src":"31130:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31147:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"31130:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31103:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"31180:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31189:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31189:7:9","typeDescriptions":{}}}],"id":2245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31188:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":2240,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"31169:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31173:6:9","memberName":"decode","nodeType":"MemberAccess","src":"31169:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31169:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2249,"name":"_ERC1271_SUCCESSVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"31226:21:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31218:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31218:7:9","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31218:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"31169:79:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31103:145:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31102:147:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"31087:162:9"},{"expression":{"condition":{"id":2255,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"31271:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2257,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"31305:18:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"31271:52:9","trueExpression":{"id":2256,"name":"_ERC1271_SUCCESSVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"31281:21:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2205,"id":2259,"nodeType":"Return","src":"31264:59:9"}]}}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"28737:1813:9","text":" @notice Achieves the goal of [EIP-1271] by validating signatures of smart contracts\n according to their own logic.\n @dev Handles two cases:\n 1. If the owner is an EOA, recovers an address from the hash and the signature provided:\n      - Returns the `_ERC1271_SUCCESSVALUE` if the address recovered is the same as the owner, indicating that it was a valid signature.\n      - If the address is different, it returns the `_ERC1271_FAILVALUE` indicating that the signature is not valid.\n 2. If the owner is a smart contract, it forwards the call of {isValidSignature()} to the owner contract:\n      - If the contract fails or returns the `_ERC1271_FAILVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_FAILVALUE`, indicating that the signature is not valid.\n      - If the {isValidSignature()} on the owner returned the `_ERC1271_SUCCESSVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_SUCCESSVALUE`, indicating that it's a valid signature.\n @param dataHash The hash of the data to be validated.\n @param signature A signature that can validate the previous parameter (Hash).\n @return returnedStatus A `bytes4` value that indicates if the signature is valid or not.\n @custom:warning This function does not enforce by default the inclusion of the address of this contract in the signature digest.\n It is recommended that protocols or applications using this contract include the targeted address (= this contract) in the data to sign.\n To ensure that a signature is valid for a specific LSP0ERC725Account and prevent signatures from the same EOA to be replayed\n across different LSP0ERC725Accounts."},"functionSelector":"1626ba7e","id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"30564:16:9","nodeType":"FunctionDefinition","overrides":{"id":2202,"nodeType":"OverrideSpecifier","overrides":[],"src":"30665:8:9"},"parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"dataHash","nameLocation":"30598:8:9","nodeType":"VariableDeclaration","scope":2290,"src":"30590:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30590:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"signature","nameLocation":"30629:9:9","nodeType":"VariableDeclaration","scope":2290,"src":"30616:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"30616:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30580:64:9"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"returnedStatus","nameLocation":"30690:14:9","nodeType":"VariableDeclaration","scope":2290,"src":"30683:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2203,"name":"bytes4","nodeType":"ElementaryTypeName","src":"30683:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"30682:23:9"},"scope":2455,"src":"30555:1637:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2998],"body":{"id":2380,"nodeType":"Block","src":"33405:1330:9","statements":[{"assignments":[2300,2302],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"extension","nameLocation":"33480:9:9","nodeType":"VariableDeclaration","scope":2380,"src":"33472:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"33472:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"isForwardingValue","nameLocation":"33508:17:9","nodeType":"VariableDeclaration","scope":2380,"src":"33503:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2301,"name":"bool","nodeType":"ElementaryTypeName","src":"33503:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2307,"initialValue":{"arguments":[{"expression":{"id":2304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33567:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33571:3:9","memberName":"sig","nodeType":"MemberAccess","src":"33567:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2303,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[2454],"referencedDeclaration":2454,"src":"33538:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33538:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"33458:117:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33722:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33726:5:9","memberName":"value","nodeType":"MemberAccess","src":"33722:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33735:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33722:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"33740:18:9","subExpression":{"id":2312,"name":"isForwardingValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"33741:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33722:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"33718:123:9","trueBody":{"id":2320,"nodeType":"Block","src":"33760:81:9","statements":[{"expression":{"arguments":[{"id":2316,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"33792:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2317,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"33821:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2315,"name":"universalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"33774:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) returns (bytes memory)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33774:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2319,"nodeType":"ExpressionStatement","src":"33774:56:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33926:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33930:3:9","memberName":"sig","nodeType":"MemberAccess","src":"33926:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33937:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2324,"name":"bytes4","nodeType":"ElementaryTypeName","src":"33937:6:9","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33937:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"33926:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"33950:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33971:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33963:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"33963:7:9","typeDescriptions":{}}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33963:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33950:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33926:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"33922:62:9","trueBody":{"expression":{"hexValue":"","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33982:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2298,"id":2337,"nodeType":"Return","src":"33975:9:9"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"34073:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34094:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34086:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"34086:7:9","typeDescriptions":{}}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34086:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"34073:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2350,"nodeType":"IfStatement","src":"34069:92:9","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"34153:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34157:3:9","memberName":"sig","nodeType":"MemberAccess","src":"34153:7:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2345,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"34117:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34117:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"RevertStatement","src":"34110:51:9"}},{"assignments":[2352,2354],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"success","nameLocation":"34178:7:9","nodeType":"VariableDeclaration","scope":2380,"src":"34173:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2351,"name":"bool","nodeType":"ElementaryTypeName","src":"34173:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"result","nameLocation":"34200:6:9","nodeType":"VariableDeclaration","scope":2380,"src":"34187:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2353,"name":"bytes","nodeType":"ElementaryTypeName","src":"34187:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2372,"initialValue":{"arguments":[{"arguments":[{"id":2365,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"34306:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2366,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"34316:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34320:6:9","memberName":"sender","nodeType":"MemberAccess","src":"34316:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"34328:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34332:5:9","memberName":"value","nodeType":"MemberAccess","src":"34328:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2363,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34289:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34293:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"34289:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34289:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2355,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"34210:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34220:4:9","memberName":"call","nodeType":"MemberAccess","src":"34210:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":2357,"name":"isForwardingValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"34245:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34277:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"34245:33:9","trueExpression":{"expression":{"id":2358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"34265:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34269:5:9","memberName":"value","nodeType":"MemberAccess","src":"34265:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"34210:78:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34210:129:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"34172:167:9"},{"condition":{"id":2373,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"34354:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2378,"nodeType":"Block","src":"34407:322:9","statements":[{"AST":{"nodeType":"YulBlock","src":"34594:125:9","statements":[{"nodeType":"YulVariableDeclaration","src":"34612:36:9","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"34641:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34635:5:9"},"nodeType":"YulFunctionCall","src":"34635:13:9"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"34616:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"34676:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"34684:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34672:3:9"},"nodeType":"YulFunctionCall","src":"34672:15:9"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"34689:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34665:6:9"},"nodeType":"YulFunctionCall","src":"34665:40:9"},"nodeType":"YulExpressionStatement","src":"34665:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"34641:6:9","valueSize":1},{"declaration":2354,"isOffset":false,"isSlot":false,"src":"34676:6:9","valueSize":1}],"id":2377,"nodeType":"InlineAssembly","src":"34585:134:9"}]},"id":2379,"nodeType":"IfStatement","src":"34350:379:9","trueBody":{"id":2376,"nodeType":"Block","src":"34363:38:9","statements":[{"expression":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"34384:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2298,"id":2375,"nodeType":"Return","src":"34377:13:9"}]}}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"32225:1053:9","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value sent with the call to the extension if the function selector is mapped to a payable extension.\n Reverts if there is no extension for the function being called, except for the `bytes4(0)` function selector, which passes even if there is no extension for it.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint If you would like to forward the `msg.value` to the extension contract, you should store an additional `0x01` byte after the address of the extension under the corresponding LSP17 data key."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"33292:24:9","nodeType":"FunctionDefinition","overrides":{"id":2295,"nodeType":"OverrideSpecifier","overrides":[],"src":"33373:8:9"},"parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"callData","nameLocation":"33341:8:9","nodeType":"VariableDeclaration","scope":2381,"src":"33326:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2292,"name":"bytes","nodeType":"ElementaryTypeName","src":"33326:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33316:39:9"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"33391:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2296,"name":"bytes","nodeType":"ElementaryTypeName","src":"33391:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33390:14:9"},"scope":2455,"src":"33283:1452:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2939],"body":{"id":2453,"nodeType":"Block","src":"35290:1249:9","statements":[{"assignments":[2393],"declarations":[{"constant":false,"id":2393,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"35388:22:9","nodeType":"VariableDeclaration","scope":2453,"src":"35380:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35380:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[{"id":2396,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"35455:23:9","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2397,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"35492:16:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2394,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"35413:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$4114_$","typeString":"type(library LSP2Utils)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35423:18:9","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":3604,"src":"35413:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35413:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"35380:138:9"},{"assignments":[2401],"declarations":[{"constant":false,"id":2401,"mutability":"mutable","name":"extensionData","nameLocation":"35542:13:9","nodeType":"VariableDeclaration","scope":2453,"src":"35529:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2400,"name":"bytes","nodeType":"ElementaryTypeName","src":"35529:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2406,"initialValue":{"arguments":[{"id":2404,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"35592:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2402,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"35558:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$823_$","typeString":"type(contract ERC725YCore)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35570:8:9","memberName":"_getData","nodeType":"MemberAccess","referencedDeclaration":781,"src":"35558:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35558:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"35529:95:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2407,"name":"extensionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"35801:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35815:6:9","memberName":"length","nodeType":"MemberAccess","src":"35801:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35824:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"35801:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"35797:82:9","trueBody":{"id":2418,"nodeType":"Block","src":"35828:51:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35858:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35850:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"35850:7:9","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35850:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35862:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":2416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35849:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2391,"id":2417,"nodeType":"Return","src":"35842:26:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2420,"name":"extensionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"36110:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36124:6:9","memberName":"length","nodeType":"MemberAccess","src":"36110:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36134:2:9","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"36110:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2442,"nodeType":"IfStatement","src":"36106:369:9","trueBody":{"id":2441,"nodeType":"Block","src":"36138:337:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2424,"name":"extensionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"36304:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2426,"indexExpression":{"hexValue":"3230","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36318:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36304:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36325:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"src":"36304:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"36300:165:9","trueBody":{"id":2439,"nodeType":"Block","src":"36331:134:9","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"id":2433,"name":"extensionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"36428:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36420:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2431,"name":"bytes20","nodeType":"ElementaryTypeName","src":"36420:7:9","typeDescriptions":{}}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36420:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36412:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"36412:7:9","typeDescriptions":{}}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36412:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"36445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36411:39:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2391,"id":2438,"nodeType":"Return","src":"36404:46:9"}]}}]}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":2447,"name":"extensionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"36509:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2445,"name":"bytes20","nodeType":"ElementaryTypeName","src":"36501:7:9","typeDescriptions":{}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36501:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36493:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"36493:7:9","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36493:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"36526:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":2451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36492:40:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2391,"id":2452,"nodeType":"Return","src":"36485:47:9"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"34741:412:9","text":" @dev Returns the extension address and the boolean indicating whether to forward the value received to the extension, stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0).\n - If the stored value is 20 bytes, return false for the boolean"},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"35167:28:9","nodeType":"FunctionDefinition","overrides":{"id":2386,"nodeType":"OverrideSpecifier","overrides":[],"src":"35257:8:9"},"parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"functionSelector","nameLocation":"35212:16:9","nodeType":"VariableDeclaration","scope":2454,"src":"35205:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2383,"name":"bytes4","nodeType":"ElementaryTypeName","src":"35205:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"35195:39:9"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"35275:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"35275:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"35284:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2389,"name":"bool","nodeType":"ElementaryTypeName","src":"35284:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35274:15:9"},"scope":2455,"src":"35158:1381:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2456,"src":"2586:33955:9","usedErrors":[972,977,980,983,986,989,992,995,998,1001,1004,2515,2518,2521,2526,2855,3365,3372,3377]}],"src":"39:36503:9"},"id":9},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol","exportedSymbols":{"ILSP14Ownable2Step":[2492]},"id":2493,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2457,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP14Ownable2Step","contractDependencies":[],"contractKind":"interface","documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"64:170:10","text":" @title Interface of the LSP14 - Ownable 2-step standard, an extension of the [EIP173] (Ownable) standard with 2-step process to transfer or renounce ownership."},"fullyImplemented":false,"id":2492,"linearizedBaseContracts":[2492],"name":"ILSP14Ownable2Step","nameLocation":"245:18:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"270:410:10","text":" @dev Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\n @notice The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\n @param previousOwner The address of the previous owner.\n @param newOwner The address of the new owner."},"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":2465,"name":"OwnershipTransferStarted","nameLocation":"691:24:10","nodeType":"EventDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"741:13:10","nodeType":"VariableDeclaration","scope":2465,"src":"725:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"780:8:10","nodeType":"VariableDeclaration","scope":2465,"src":"764:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:79:10"},"src":"685:110:10"},{"anonymous":false,"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"942:138:10","text":" @dev Emitted when starting the {renounceOwnership(..)} 2-step process.\n @notice Ownership renouncement initiated."},"eventSelector":"81b7f830f1f0084db6497c486cbe6974c86488dcc4e3738eab94ab6d6b1653e7","id":2468,"name":"RenounceOwnershipStarted","nameLocation":"1091:24:10","nodeType":"EventDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"1115:2:10"},"src":"1085:33:10"},{"anonymous":false,"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"1124:217:10","text":" @dev Emitted when the ownership of the contract has been renounced.\n @notice Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`."},"eventSelector":"d1f66c3d2bc1993a86be5e3d33709d98f0442381befcedd29f578b9b2506b1ce","id":2471,"name":"OwnershipRenounced","nameLocation":"1352:18:10","nodeType":"EventDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"1370:2:10"},"src":"1346:27:10"},{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"1487:168:10","text":" @dev The address that ownership of the contract is transferred to.\n This address may use {acceptOwnership()} to gain ownership of the contract."},"functionSelector":"e30c3978","id":2477,"implemented":false,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1669:12:10","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"1681:2:10"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"1707:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"1707:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1706:9:10"},"scope":2492,"src":"1660:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"1722:502:10","text":" @dev Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner.\n If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\n @notice Transfer ownership initiated by `newOwner`.\n @param newOwner The address of the new owner."},"functionSelector":"f2fde38b","id":2483,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"2238:17:10","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"newOwner","nameLocation":"2264:8:10","nodeType":"VariableDeclaration","scope":2483,"src":"2256:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"2256:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2255:18:10"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"2282:0:10"},"scope":2492,"src":"2229:54:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"2289:439:10","text":" @dev Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}.\n Once this function is called:\n - The current {owner()} will lose access to the functions restricted to the {owner()} only.\n - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\n @notice `msg.sender` is accepting ownership of contract: `address(this)`."},"functionSelector":"79ba5097","id":2487,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2742:15:10","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[],"src":"2757:2:10"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[],"src":"2768:0:10"},"scope":2492,"src":"2733:36:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"2775:348:10","text":" @dev Renounce ownership of the contract in a 2-step process.\n 1. The first call will initiate the process of renouncing ownership.\n 2. The second call is used as a confirmation and will leave the contract without an owner.\n @notice `msg.sender` is renouncing ownership of contract `address(this)`."},"functionSelector":"715018a6","id":2491,"implemented":false,"kind":"function","modifiers":[],"name":"renounceOwnership","nameLocation":"3137:17:10","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"3154:2:10"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"3165:0:10"},"scope":2492,"src":"3128:38:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2493,"src":"235:2933:10","usedErrors":[]}],"src":"39:3130:10"},"id":10},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol","exportedSymbols":{"_INTERFACEID_LSP14":[2497],"_TYPEID_LSP14_OwnershipTransferStarted":[2500],"_TYPEID_LSP14_OwnershipTransferred_RecipientNotification":[2506],"_TYPEID_LSP14_OwnershipTransferred_SenderNotification":[2503]},"id":2507,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2494,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"constant":true,"id":2497,"mutability":"constant","name":"_INTERFACEID_LSP14","nameLocation":"80:18:11","nodeType":"VariableDeclaration","scope":2507,"src":"64:47:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2495,"name":"bytes4","nodeType":"ElementaryTypeName","src":"64:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783934626535393939","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"101:10:11","typeDescriptions":{"typeIdentifier":"t_rational_2495502745_by_1","typeString":"int_const 2495502745"},"value":"0x94be5999"},"visibility":"internal"},{"constant":true,"id":2500,"mutability":"constant","name":"_TYPEID_LSP14_OwnershipTransferStarted","nameLocation":"194:38:11","nodeType":"VariableDeclaration","scope":2507,"src":"177:124:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"177:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865653961376330393234663734306132636133336435396237663063323932393832316561393833376365303433636539316331383233653963346535326330","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"235:66:11","typeDescriptions":{"typeIdentifier":"t_rational_107923408473872749926238325241991453687993739774897834541256342991779704754880_by_1","typeString":"int_const 1079...(70 digits omitted)...4880"},"value":"0xee9a7c0924f740a2ca33d59b7f0c2929821ea9837ce043ce91c1823e9c4e52c0"},"visibility":"internal"},{"constant":true,"id":2503,"mutability":"constant","name":"_TYPEID_LSP14_OwnershipTransferred_SenderNotification","nameLocation":"382:53:11","nodeType":"VariableDeclaration","scope":2507,"src":"365:139:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"365:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313234343432653163633762353264386532656465323738376434333532376463316633616530646538376635306464303365323761373138333466373463","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"438:66:11","typeDescriptions":{"typeIdentifier":"t_rational_72886445678177937971425403727869977120269253154666648182282208000682715576140_by_1","typeString":"int_const 7288...(69 digits omitted)...6140"},"value":"0xa124442e1cc7b52d8e2ede2787d43527dc1f3ae0de87f50dd03e27a71834f74c"},"visibility":"internal"},{"constant":true,"id":2506,"mutability":"constant","name":"_TYPEID_LSP14_OwnershipTransferred_RecipientNotification","nameLocation":"588:56:11","nodeType":"VariableDeclaration","scope":2507,"src":"571:142:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865333263376465626362383137393235626134383833666462666335323739373138376632386637336638363036343164616231613638643962333239303263","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:66:11","typeDescriptions":{"typeIdentifier":"t_rational_102753626974564192079134520229428304948559443302741238067301177763249570091052_by_1","typeString":"int_const 1027...(70 digits omitted)...1052"},"value":"0xe32c7debcb817925ba4883fdbfc52797187f28f73f860641dab1a68d9b32902c"},"visibility":"internal"}],"src":"39:676:11"},"id":11},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol","exportedSymbols":{"LSP14CallerNotPendingOwner":[2526],"LSP14CannotTransferOwnershipToSelf":[2518],"LSP14MustAcceptOwnershipInSeparateTransaction":[2521],"LSP14NotInRenounceOwnershipInterval":[2515]},"id":2527,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2508,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"64:459:12","text":" @dev Reverts when trying to renounce ownership before the initial confirmation delay.\n @notice Cannot confirm ownership renouncement yet. The ownership renouncement is allowed from: `renounceOwnershipStart` until: `renounceOwnershipEnd`.\n @param renounceOwnershipStart The start timestamp when one can confirm the renouncement of ownership.\n @param renounceOwnershipEnd The end timestamp when one can confirm the renouncement of ownership."},"errorSelector":"1b080942","id":2515,"name":"LSP14NotInRenounceOwnershipInterval","nameLocation":"530:35:12","nodeType":"ErrorDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"renounceOwnershipStart","nameLocation":"579:22:12","nodeType":"VariableDeclaration","scope":2515,"src":"571:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"renounceOwnershipEnd","nameLocation":"615:20:12","nodeType":"VariableDeclaration","scope":2515,"src":"607:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"565:72:12"},"src":"524:114:12"},{"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"640:157:12","text":" @dev Reverts when trying to transfer ownership to the `address(this)`.\n @notice Cannot transfer ownership to the address of the contract itself."},"errorSelector":"e052a6f8","id":2518,"name":"LSP14CannotTransferOwnershipToSelf","nameLocation":"804:34:12","nodeType":"ErrorDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"838:2:12"},"src":"798:43:12"},{"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"843:200:12","text":" @dev Reverts when pending owner accept ownership in the same transaction of transferring ownership.\n @notice Cannot accept ownership in the same transaction with {transferOwnership(...)}."},"errorSelector":"5758dd07","id":2521,"name":"LSP14MustAcceptOwnershipInSeparateTransaction","nameLocation":"1050:45:12","nodeType":"ErrorDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"1095:2:12"},"src":"1044:54:12"},{"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"1100:179:12","text":" @dev Reverts when the `caller` that is trying to accept ownership of the contract is not the pending owner.\n @param caller The address that tried to accept ownership."},"errorSelector":"451e4528","id":2526,"name":"LSP14CallerNotPendingOwner","nameLocation":"1286:26:12","nodeType":"ErrorDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"caller","nameLocation":"1321:6:12","nodeType":"VariableDeclaration","scope":2526,"src":"1313:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"1313:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1312:16:12"},"src":"1280:49:12"}],"src":"39:1291:12"},"id":12},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol","exportedSymbols":{"ILSP14Ownable2Step":[2492],"LSP14CallerNotPendingOwner":[2526],"LSP14CannotTransferOwnershipToSelf":[2518],"LSP14MustAcceptOwnershipInSeparateTransaction":[2521],"LSP14NotInRenounceOwnershipInterval":[2515],"LSP14Ownable2Step":[2837],"LSP1Utils":[3143],"OwnableUnset":[955],"_TYPEID_LSP14_OwnershipTransferStarted":[2500],"_TYPEID_LSP14_OwnershipTransferred_RecipientNotification":[2506],"_TYPEID_LSP14_OwnershipTransferred_SenderNotification":[2503]},"id":2838,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2528,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol","file":"./ILSP14Ownable2Step.sol","id":2530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2838,"sourceUnit":2493,"src":"78:60:13","symbolAliases":[{"foreign":{"id":2529,"name":"ILSP14Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"86:18:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","id":2532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2838,"sourceUnit":956,"src":"151:93:13","symbolAliases":[{"foreign":{"id":2531,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"164:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol","file":"../LSP1UniversalReceiver/LSP1Utils.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2838,"sourceUnit":3144,"src":"259:65:13","symbolAliases":[{"foreign":{"id":2533,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"267:9:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol","file":"./LSP14Errors.sol","id":2539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2838,"sourceUnit":2527,"src":"336:199:13","symbolAliases":[{"foreign":{"id":2535,"name":"LSP14CallerNotPendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"349:26:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2536,"name":"LSP14MustAcceptOwnershipInSeparateTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"381:45:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2537,"name":"LSP14CannotTransferOwnershipToSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"432:34:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2538,"name":"LSP14NotInRenounceOwnershipInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"472:35:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol","file":"./LSP14Constants.sol","id":2543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2838,"sourceUnit":2507,"src":"550:203:13","symbolAliases":[{"foreign":{"id":2540,"name":"_TYPEID_LSP14_OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"563:38:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2541,"name":"_TYPEID_LSP14_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"607:53:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2542,"name":"_TYPEID_LSP14_OwnershipTransferred_RecipientNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"666:56:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2545,"name":"ILSP14Ownable2Step","nameLocations":["1443:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"1443:18:13"},"id":2546,"nodeType":"InheritanceSpecifier","src":"1443:18:13"},{"baseName":{"id":2547,"name":"OwnableUnset","nameLocations":["1463:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"1463:12:13"},"id":2548,"nodeType":"InheritanceSpecifier","src":"1463:12:13"}],"canonicalName":"LSP14Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"755:648:13","text":" @title LSP14Ownable2Step\n @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42), Yamen Merhi (YamenMerhi), Daniel Afteni (B00ste)\n @dev This contract is a modified version of the [`OwnableUnset.sol`] implementation, where transferring and renouncing ownership works as a 2-step process. This can be used as a confirmation mechanism to prevent potential mistakes when transferring ownership of the contract, where the control of the contract could be lost forever. (_e.g: providing the wrong address as a parameter to the function, transferring ownership to an EOA for which the user lost its private key, etc..._)"},"fullyImplemented":true,"id":2837,"linearizedBaseContracts":[2837,955,2492],"name":"LSP14Ownable2Step","nameLocation":"1422:17:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2551,"libraryName":{"id":2549,"name":"LSP1Utils","nameLocations":["1488:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"1488:9:13"},"nodeType":"UsingForDirective","src":"1482:28:13","typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":true,"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"1516:143:13","text":" @dev The number of block that MUST pass before one is able to confirm renouncing ownership.\n @return Number of blocks."},"functionSelector":"ead3fbdf","id":2555,"mutability":"constant","name":"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY","nameLocation":"1688:37:13","nodeType":"VariableDeclaration","scope":2837,"src":"1664:67:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1728:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":true,"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"1738:118:13","text":" @dev The number of blocks during which one can renounce ownership.\n @return Number of blocks."},"functionSelector":"01bfba61","id":2559,"mutability":"constant","name":"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD","nameLocation":"1885:38:13","nodeType":"VariableDeclaration","scope":2837,"src":"1861:68:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1926:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":false,"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"1936:99:13","text":" @dev The block number saved when initiating the process of renouncing ownerhsip."},"id":2562,"mutability":"mutable","name":"_renounceOwnershipStartedAt","nameLocation":"2057:27:13","nodeType":"VariableDeclaration","scope":2837,"src":"2040:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"2091:44:13","text":" @dev see {pendingOwner()}"},"id":2565,"mutability":"mutable","name":"_pendingOwner","nameLocation":"2157:13:13","nodeType":"VariableDeclaration","scope":2837,"src":"2140:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"2177:112:13","text":" @dev The boolean that indicates whether the contract is in an active ownership transfer phase"},"id":2568,"mutability":"mutable","name":"_inTransferOwnership","nameLocation":"2308:20:13","nodeType":"VariableDeclaration","scope":2837,"src":"2294:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"2294:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"2458:132:13","statements":[{"condition":{"id":2571,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2472:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"IfStatement","src":"2468:105:13","trueBody":{"id":2575,"nodeType":"Block","src":"2494:79:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2572,"name":"LSP14MustAcceptOwnershipInSeparateTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"2515:45:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2515:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2574,"nodeType":"RevertStatement","src":"2508:54:13"}]}},{"id":2577,"nodeType":"PlaceholderStatement","src":"2582:1:13"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"2335:76:13","text":" @dev reverts when {_inTransferOwnership} variable is true"},"id":2579,"name":"notInTransferOwnership","nameLocation":"2425:22:13","nodeType":"ModifierDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"2447:2:13"},"src":"2416:174:13","virtual":true,"visibility":"internal"},{"baseFunctions":[2477],"body":{"id":2588,"nodeType":"Block","src":"2829:37:13","statements":[{"expression":{"id":2586,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2846:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2585,"id":2587,"nodeType":"Return","src":"2839:20:13"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"2596:157:13","text":" @inheritdoc ILSP14Ownable2Step\n @custom:info If no ownership transfer is in progress, the pendingOwner will be `address(0).`."},"functionSelector":"e30c3978","id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"2767:12:13","nodeType":"FunctionDefinition","overrides":{"id":2582,"nodeType":"OverrideSpecifier","overrides":[],"src":"2802:8:13"},"parameters":{"id":2581,"nodeType":"ParameterList","parameters":[],"src":"2779:2:13"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"2820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"2820:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2819:9:13"},"scope":2837,"src":"2758:108:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[915,2483],"body":{"id":2633,"nodeType":"Block","src":"3239:467:13","statements":[{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3292:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3315:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3292:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2603,"nodeType":"ExpressionStatement","src":"3292:27:13"},{"expression":{"arguments":[{"id":2605,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3349:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2604,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"3330:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"ExpressionStatement","src":"3330:28:13"},{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"currentOwner","nameLocation":"3377:12:13","nodeType":"VariableDeclaration","scope":2633,"src":"3369:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2612,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2610,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3392:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3369:30:13"},{"eventCall":{"arguments":[{"id":2614,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3439:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2615,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3453:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2613,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"3414:24:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2617,"nodeType":"EmitStatement","src":"3409:53:13"},{"expression":{"arguments":[{"id":2621,"name":"_TYPEID_LSP14_OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3519:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2624,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"3582:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2625,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3596:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2622,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3571:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3575:6:13","memberName":"encode","nodeType":"MemberAccess","src":"3571:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3571:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2618,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"3473:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3482:23:13","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"3473:32:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:142:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"3473:142:13"},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"_inTransferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3671:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3694:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3671:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2632,"nodeType":"ExpressionStatement","src":"3671:28:13"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"2872:235:13","text":" @inheritdoc ILSP14Ownable2Step\n @custom:requirements `newOwner` cannot accept ownership of the contract in the same transaction. (For instance, via a callback from its {universalReceiver(...)} function)."},"functionSelector":"f2fde38b","id":2634,"implemented":true,"kind":"function","modifiers":[{"id":2598,"kind":"modifierInvocation","modifierName":{"id":2597,"name":"onlyOwner","nameLocations":["3229:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"3229:9:13"},"nodeType":"ModifierInvocation","src":"3229:9:13"}],"name":"transferOwnership","nameLocation":"3121:17:13","nodeType":"FunctionDefinition","overrides":{"id":2596,"nodeType":"OverrideSpecifier","overrides":[{"id":2594,"name":"OwnableUnset","nameLocations":["3195:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"3195:12:13"},{"id":2595,"name":"ILSP14Ownable2Step","nameLocations":["3209:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"3209:18:13"}],"src":"3186:42:13"},"parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"newOwner","nameLocation":"3156:8:13","nodeType":"VariableDeclaration","scope":2634,"src":"3148:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3138:32:13"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[],"src":"3239:0:13"},"scope":2837,"src":"3112:594:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2487],"body":{"id":2675,"nodeType":"Block","src":"3933:429:13","statements":[{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"previousOwner","nameLocation":"3951:13:13","nodeType":"VariableDeclaration","scope":2675,"src":"3943:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"3943:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2645,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2643,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3967:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3967:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3943:31:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2646,"name":"_acceptOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3985:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"3985:18:13"},{"expression":{"arguments":[{"id":2652,"name":"_TYPEID_LSP14_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4065:53:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2655,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4143:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4158:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4162:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4158:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2653,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4132:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4136:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4132:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2649,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4014:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4028:23:13","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"4014:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4014:165:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"ExpressionStatement","src":"4014:165:13"},{"expression":{"arguments":[{"id":2666,"name":"_TYPEID_LSP14_OwnershipTransferred_RecipientNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"4238:56:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2669,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4319:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2670,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4334:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4334:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2667,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4308:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4312:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4308:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4308:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":2661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4190:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4194:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4190:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:23:13","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"4190:34:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:165:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2674,"nodeType":"ExpressionStatement","src":"4190:165:13"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"3712:142:13","text":" @inheritdoc ILSP14Ownable2Step\n @custom:requirements This function can only be called by the {pendingOwner()}."},"functionSelector":"79ba5097","id":2676,"implemented":true,"kind":"function","modifiers":[{"id":2639,"kind":"modifierInvocation","modifierName":{"id":2638,"name":"notInTransferOwnership","nameLocations":["3910:22:13"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"3910:22:13"},"nodeType":"ModifierInvocation","src":"3910:22:13"}],"name":"acceptOwnership","nameLocation":"3868:15:13","nodeType":"FunctionDefinition","overrides":{"id":2637,"nodeType":"OverrideSpecifier","overrides":[],"src":"3901:8:13"},"parameters":{"id":2636,"nodeType":"ParameterList","parameters":[],"src":"3883:2:13"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[],"src":"3933:0:13"},"scope":2837,"src":"3859:503:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[891,2491],"body":{"id":2716,"nodeType":"Block","src":"4828:317:13","statements":[{"assignments":[2686],"declarations":[{"constant":false,"id":2686,"mutability":"mutable","name":"previousOwner","nameLocation":"4846:13:13","nodeType":"VariableDeclaration","scope":2716,"src":"4838:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"4838:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2689,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2687,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4862:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4838:31:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2690,"name":"_renounceOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"4879:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4879:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2692,"nodeType":"ExpressionStatement","src":"4879:20:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"4914:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4925:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:13","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4925:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4914:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2715,"nodeType":"IfStatement","src":"4910:229:13","trueBody":{"id":2714,"nodeType":"Block","src":"4937:202:13","statements":[{"expression":{"arguments":[{"id":2703,"name":"_TYPEID_LSP14_OwnershipTransferred_SenderNotification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"5006:53:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2706,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5088:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5103:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"5103:7:13","typeDescriptions":{}}},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5103:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2704,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5077:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5081:6:13","memberName":"encode","nodeType":"MemberAccess","src":"5077:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2700,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4951:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4965:23:13","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"4951:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_address_$","typeString":"function (address,bytes32,bytes memory)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4951:177:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2713,"nodeType":"ExpressionStatement","src":"4951:177:13"}]}}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"4368:322:13","text":" @inheritdoc ILSP14Ownable2Step\n @custom:danger Leaves the contract without an owner. Once ownership of the contract has been renounced, any function that is restricted to be called only by the owner will be permanently inaccessible, making these functions not callable anymore and unusable."},"functionSelector":"715018a6","id":2717,"implemented":true,"kind":"function","modifiers":[{"id":2683,"kind":"modifierInvocation","modifierName":{"id":2682,"name":"onlyOwner","nameLocations":["4814:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"4814:9:13"},"nodeType":"ModifierInvocation","src":"4814:9:13"}],"name":"renounceOwnership","nameLocation":"4704:17:13","nodeType":"FunctionDefinition","overrides":{"id":2681,"nodeType":"OverrideSpecifier","overrides":[{"id":2679,"name":"OwnableUnset","nameLocations":["4772:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"4772:12:13"},{"id":2680,"name":"ILSP14Ownable2Step","nameLocations":["4786:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"4786:18:13"}],"src":"4763:42:13"},"parameters":{"id":2678,"nodeType":"ParameterList","parameters":[],"src":"4721:2:13"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"4828:0:13"},"scope":2837,"src":"4695:450:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2740,"nodeType":"Block","src":"5540:182:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5554:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5574:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LSP14Ownable2Step_$2837","typeString":"contract LSP14Ownable2Step"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP14Ownable2Step_$2837","typeString":"contract LSP14Ownable2Step"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5566:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"5566:7:13","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5554:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"nodeType":"IfStatement","src":"5550:86:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2729,"name":"LSP14CannotTransferOwnershipToSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"5600:34:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5600:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2731,"nodeType":"RevertStatement","src":"5593:43:13"}},{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"5647:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2734,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5663:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5647:24:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2736,"nodeType":"ExpressionStatement","src":"5647:24:13"},{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5681:34:13","subExpression":{"id":2737,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5688:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"ExpressionStatement","src":"5681:34:13"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"5180:292:13","text":" @dev Set the pending owner of the contract and cancel any renounce ownership process that was previously started.\n @param newOwner The address of the new pending owner.\n @custom:requirements `newOwner` cannot be the address of the contract itself."},"id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"5486:18:13","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"newOwner","nameLocation":"5513:8:13","nodeType":"VariableDeclaration","scope":2741,"src":"5505:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"5505:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5504:18:13"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"5540:0:13"},"scope":2837,"src":"5477:245:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2767,"nodeType":"Block","src":"5857:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5871:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5871:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2747,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5885:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5871:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2755,"nodeType":"IfStatement","src":"5867:91:13","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5947:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5951:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5947:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2750,"name":"LSP14CallerNotPendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"5920:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"RevertStatement","src":"5913:45:13"}},{"expression":{"arguments":[{"expression":{"id":2757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5979:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5983:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5979:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2756,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"5969:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5969:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"ExpressionStatement","src":"5969:21:13"},{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6000:20:13","subExpression":{"id":2761,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"6007:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2763,"nodeType":"ExpressionStatement","src":"6000:20:13"},{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6030:34:13","subExpression":{"id":2764,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6037:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2766,"nodeType":"ExpressionStatement","src":"6030:34:13"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"5728:79:13","text":" @dev Set the pending owner of the contract as the new owner."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"_acceptOwnership","nameLocation":"5821:16:13","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"5837:2:13"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"5857:0:13"},"scope":2837,"src":"5812:259:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"6254:1165:13","statements":[{"assignments":[2773],"declarations":[{"constant":false,"id":2773,"mutability":"mutable","name":"currentBlock","nameLocation":"6272:12:13","nodeType":"VariableDeclaration","scope":2835,"src":"6264:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6264:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"expression":{"id":2774,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6287:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6293:6:13","memberName":"number","nodeType":"MemberAccess","src":"6287:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6264:35:13"},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"confirmationPeriodStart","nameLocation":"6317:23:13","nodeType":"VariableDeclaration","scope":2835,"src":"6309:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2782,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6343:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2780,"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"6385:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6343:79:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6309:113:13"},{"assignments":[2784],"declarations":[{"constant":false,"id":2784,"mutability":"mutable","name":"confirmationPeriodEnd","nameLocation":"6440:21:13","nodeType":"VariableDeclaration","scope":2835,"src":"6432:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6432:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2788,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"confirmationPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6464:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2786,"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6502:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6464:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6432:108:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6796:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2790,"name":"confirmationPeriodEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6811:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6796:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6848:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6879:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6848:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:84:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"IfStatement","src":"6779:278:13","trueBody":{"id":2807,"nodeType":"Block","src":"6891:166:13","statements":[{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6905:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2797,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6935:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6905:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2799,"nodeType":"ExpressionStatement","src":"6905:42:13"},{"expression":{"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6961:20:13","subExpression":{"id":2800,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"6968:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"6961:20:13"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2803,"name":"RenounceOwnershipStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7000:24:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7000:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"EmitStatement","src":"6995:31:13"},{"functionReturnParameters":2771,"id":2806,"nodeType":"Return","src":"7040:7:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2809,"name":"currentBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"7071:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2810,"name":"confirmationPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"7086:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7071:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"7067:205:13","trueBody":{"id":2817,"nodeType":"Block","src":"7111:161:13","statements":[{"errorCall":{"arguments":[{"id":2813,"name":"confirmationPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"7185:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2814,"name":"confirmationPeriodEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"7226:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2812,"name":"LSP14NotInRenounceOwnershipInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"7132:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:129:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"RevertStatement","src":"7125:136:13"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7300:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7292:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"7292:7:13","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7292:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2819,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"7282:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7282:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"ExpressionStatement","src":"7282:21:13"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7313:34:13","subExpression":{"id":2826,"name":"_renounceOwnershipStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"7320:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"ExpressionStatement","src":"7313:34:13"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7357:20:13","subExpression":{"id":2829,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"7364:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"ExpressionStatement","src":"7357:20:13"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2832,"name":"OwnershipRenounced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"7392:18:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7392:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"EmitStatement","src":"7387:25:13"}]},"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"6077:125:13","text":" @dev Initiate or confirm the process of renouncing ownership after a specific delay of blocks have passed."},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"_renounceOwnership","nameLocation":"6216:18:13","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"6234:2:13"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[],"src":"6254:0:13"},"scope":2837,"src":"6207:1212:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2838,"src":"1404:6017:13","usedErrors":[965,2515,2518,2521,2526]}],"src":"39:7383:13"},"id":13},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[2842],"_INTERFACEID_LSP17_EXTENSION":[2845],"_LSP17_EXTENSION_PREFIX":[2848]},"id":2849,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2839,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:14"},{"constant":true,"id":2842,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:14","nodeType":"VariableDeclaration","scope":2849,"src":"134:58:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2840,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:14","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":2845,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:14","nodeType":"VariableDeclaration","scope":2849,"src":"235:57:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2843,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:14","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":2848,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:14","nodeType":"VariableDeclaration","scope":2849,"src":"390:65:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":2846,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:14","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:14","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:14"},"id":14},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[2865],"InvalidFunctionSelector":[2860],"NoExtensionFoundForFunctionSelector":[2855]},"id":2866,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2850,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"64:94:15","text":" @dev reverts when there is no extension for the function selector being called with"},"errorSelector":"bb370b2b","id":2855,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:15","nodeType":"ErrorDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:15","nodeType":"VariableDeclaration","scope":2855,"src":"201:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2852,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:15"},"src":"159:67:15"},{"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"228:114:15","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"errorSelector":"e5099ee3","id":2860,"name":"InvalidFunctionSelector","nameLocation":"349:23:15","nodeType":"ErrorDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"data","nameLocation":"379:4:15","nodeType":"VariableDeclaration","scope":2860,"src":"373:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2857,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:15"},"src":"343:42:15"},{"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"387:110:15","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"errorSelector":"42bfe79f","id":2865,"name":"InvalidExtensionAddress","nameLocation":"504:23:15","nodeType":"ErrorDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"storedData","nameLocation":"534:10:15","nodeType":"VariableDeclaration","scope":2865,"src":"528:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2862,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:15"},"src":"498:48:15"}],"src":"39:508:15"},"id":15},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol","exportedSymbols":{"ERC165":[5165],"ERC165Checker":[5359],"LSP17Extendable":[2999],"NoExtensionFoundForFunctionSelector":[2855],"_INTERFACEID_LSP17_EXTENDABLE":[2842]},"id":3000,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2867,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":2869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3000,"sourceUnit":5166,"src":"75:78:16","symbolAliases":[{"foreign":{"id":2868,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"83:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":2871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3000,"sourceUnit":5360,"src":"154:98:16","symbolAliases":[{"foreign":{"id":2870,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"167:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","file":"./LSP17Constants.sol","id":2873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3000,"sourceUnit":2849,"src":"267:67:16","symbolAliases":[{"foreign":{"id":2872,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"275:29:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","file":"./LSP17Errors.sol","id":2875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3000,"sourceUnit":2866,"src":"346:70:16","symbolAliases":[{"foreign":{"id":2874,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"354:35:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2877,"name":"ERC165","nameLocations":["924:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":5165,"src":"924:6:16"},"id":2878,"nodeType":"InheritanceSpecifier","src":"924:6:16"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"418:468:16","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":2999,"linearizedBaseContracts":[2999,5165,5371],"name":"LSP17Extendable","nameLocation":"905:15:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5164],"body":{"id":2896,"nodeType":"Block","src":"1103:132:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"1132:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2888,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"1147:29:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2892,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"1216:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2890,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$2999_$","typeString":"type(contract super LSP17Extendable)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5164,"src":"1192:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2886,"id":2895,"nodeType":"Return","src":"1113:115:16"}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"937:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:16","nodeType":"FunctionDefinition","overrides":{"id":2883,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:16"},"parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:16","nodeType":"VariableDeclaration","scope":2897,"src":"1034:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2880,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:16"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"1097:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2884,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:16"},"scope":2999,"src":"998:237:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2928,"nodeType":"Block","src":"1774:341:16","statements":[{"assignments":[2906,null],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:16","nodeType":"VariableDeclaration","scope":2928,"src":"1785:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2912,"initialValue":{"arguments":[{"expression":{"expression":{"id":2908,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"1856:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$5165_$","typeString":"type(contract ERC165)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5164,"src":"1856:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1881:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1856:33:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2907,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"1814:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1814:85:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"1913:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:16","typeDescriptions":{}}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2921,"nodeType":"IfStatement","src":"1909:47:16","trueBody":{"expression":{"hexValue":"66616c7365","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2904,"id":2920,"nodeType":"Return","src":"1944:12:16"}},{"expression":{"arguments":[{"id":2924,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2050:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2925,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2083:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2922,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"1986:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$5359_$","typeString":"type(library ERC165Checker)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2000:32:16","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5358,"src":"1986:46:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:122:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2904,"id":2927,"nodeType":"Return","src":"1967:141:16"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"1241:412:16","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:16","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:16","nodeType":"VariableDeclaration","scope":2929,"src":"1712:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2899,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:16"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"1768:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2902,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:16"},"scope":2999,"src":"1658:457:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"2121:254:16","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overrided.\n Up to the implementor contract to return an extension based on a function selector"},"id":2939,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2389:28:16","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"functionSelector","nameLocation":"2434:16:16","nodeType":"VariableDeclaration","scope":2939,"src":"2427:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2931,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2427:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2417:39:16"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"2488:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"2497:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2936,"name":"bool","nodeType":"ElementaryTypeName","src":"2497:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2487:15:16"},"scope":2999,"src":"2380:123:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2997,"nodeType":"Block","src":"3787:991:16","statements":[{"assignments":[2948,2950],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"extension","nameLocation":"3862:9:16","nodeType":"VariableDeclaration","scope":2997,"src":"3854:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"3854:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3890:18:16","nodeType":"VariableDeclaration","scope":2997,"src":"3885:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2949,"name":"bool","nodeType":"ElementaryTypeName","src":"3885:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2955,"initialValue":{"arguments":[{"expression":{"id":2952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3950:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3954:3:16","memberName":"sig","nodeType":"MemberAccess","src":"3950:7:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2951,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3921:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3840:118:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4018:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4031:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"4031:7:16","typeDescriptions":{}}},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4018:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"4014:92:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4098:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4102:3:16","memberName":"sig","nodeType":"MemberAccess","src":"4098:7:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2962,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"4062:35:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2966,"nodeType":"RevertStatement","src":"4055:51:16"}},{"assignments":[2969,2971],"declarations":[{"constant":false,"id":2969,"mutability":"mutable","name":"success","nameLocation":"4123:7:16","nodeType":"VariableDeclaration","scope":2997,"src":"4118:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2968,"name":"bool","nodeType":"ElementaryTypeName","src":"4118:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"result","nameLocation":"4145:6:16","nodeType":"VariableDeclaration","scope":2997,"src":"4132:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2970,"name":"bytes","nodeType":"ElementaryTypeName","src":"4132:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[{"arguments":[{"id":2982,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"4252:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2983,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4262:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4266:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4262:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4274:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4278:5:16","memberName":"value","nodeType":"MemberAccess","src":"4274:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2980,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4235:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4239:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"4235:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4235:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2972,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4155:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4165:4:16","memberName":"call","nodeType":"MemberAccess","src":"4155:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":2974,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"4190:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4223:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4190:34:16","trueExpression":{"expression":{"id":2975,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4211:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4215:5:16","memberName":"value","nodeType":"MemberAccess","src":"4211:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4155:79:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:130:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4117:168:16"},{"condition":{"id":2990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"4300:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2995,"nodeType":"Block","src":"4353:419:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4637:125:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4655:36:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4684:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4678:5:16"},"nodeType":"YulFunctionCall","src":"4678:13:16"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4659:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4727:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:16"},"nodeType":"YulFunctionCall","src":"4715:15:16"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4732:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4708:6:16"},"nodeType":"YulFunctionCall","src":"4708:40:16"},"nodeType":"YulExpressionStatement","src":"4708:40:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2971,"isOffset":false,"isSlot":false,"src":"4684:6:16","valueSize":1},{"declaration":2971,"isOffset":false,"isSlot":false,"src":"4719:6:16","valueSize":1}],"id":2994,"nodeType":"InlineAssembly","src":"4628:134:16"}]},"id":2996,"nodeType":"IfStatement","src":"4296:476:16","trueBody":{"id":2993,"nodeType":"Block","src":"4309:38:16","statements":[{"expression":{"id":2991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4330:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2946,"id":2992,"nodeType":"Return","src":"4323:13:16"}]}}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"2509:1160:16","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3683:24:16","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"callData","nameLocation":"3732:8:16","nodeType":"VariableDeclaration","scope":2998,"src":"3717:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2941,"name":"bytes","nodeType":"ElementaryTypeName","src":"3717:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3707:39:16"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"3773:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2944,"name":"bytes","nodeType":"ElementaryTypeName","src":"3773:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3772:14:16"},"scope":2999,"src":"3674:1104:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3000,"src":"887:3893:16","usedErrors":[]}],"src":"39:4742:16"},"id":16},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[3026]},"id":3027,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3001,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"64:257:17","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":3026,"linearizedBaseContracts":[3026],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"361:893:17","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"eventSelector":"9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2","id":3015,"name":"UniversalReceiver","nameLocation":"1265:17:17","nodeType":"EventDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1308:4:17","nodeType":"VariableDeclaration","scope":3015,"src":"1292:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3004,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3007,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1338:5:17","nodeType":"VariableDeclaration","scope":3015,"src":"1322:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1369:6:17","nodeType":"VariableDeclaration","scope":3015,"src":"1353:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1353:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3011,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1391:12:17","nodeType":"VariableDeclaration","scope":3015,"src":"1385:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3010,"name":"bytes","nodeType":"ElementaryTypeName","src":"1385:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3013,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1419:13:17","nodeType":"VariableDeclaration","scope":3015,"src":"1413:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"1413:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:156:17"},"src":"1259:180:17"},{"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"1445:517:17","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":3025,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1976:17:17","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"typeId","nameLocation":"2011:6:17","nodeType":"VariableDeclaration","scope":3025,"src":"2003:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"data","nameLocation":"2042:4:17","nodeType":"VariableDeclaration","scope":3025,"src":"2027:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"2027:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1993:59:17"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"2079:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3022,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2078:14:17"},"scope":3026,"src":"1967:126:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3027,"src":"322:1773:17","usedErrors":[]}],"src":"39:2057:17"},"id":17},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol","exportedSymbols":{"ILSP1UniversalReceiverDelegate":[3044]},"id":3045,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3028,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiverDelegate","contractDependencies":[],"contractKind":"interface","documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"64:366:18","text":" @title Interface of the LSP1 - Universal Receiver Delegate standard.\n @dev This interface allows contracts implementing the LSP1UniversalReceiver function to delegate the reaction logic to another contract or account. By doing so, the main logic doesn't need to reside within the `universalReceiver` function itself, offering modularity and flexibility."},"fullyImplemented":false,"id":3044,"linearizedBaseContracts":[3044],"name":"ILSP1UniversalReceiverDelegate","nameLocation":"441:30:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"478:706:18","text":" @dev A delegate function that reacts to calls forwarded from the `universalReceiver(..)` function. This allows for modular handling of the logic based on the `typeId` and `data` provided by the initial caller.\n @notice Reacted on received notification forwarded from `universalReceiver` with `typeId` & `data`.\n @param sender The address of the EOA or smart contract that initially called the `universalReceiver` function.\n @param value The amount sent by the `sender` to the `universalReceiver` function.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the initial call to `universalReceiver`."},"functionSelector":"a245bbda","id":3043,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiverDelegate","nameLocation":"1198:25:18","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"sender","nameLocation":"1241:6:18","nodeType":"VariableDeclaration","scope":3043,"src":"1233:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"value","nameLocation":"1265:5:18","nodeType":"VariableDeclaration","scope":3043,"src":"1257:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"typeId","nameLocation":"1288:6:18","nodeType":"VariableDeclaration","scope":3043,"src":"1280:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1280:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"data","nameLocation":"1317:4:18","nodeType":"VariableDeclaration","scope":3043,"src":"1304:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1304:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1223:104:18"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"1346:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3040,"name":"bytes","nodeType":"ElementaryTypeName","src":"1346:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1345:14:18"},"scope":3044,"src":"1189:171:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3045,"src":"431:931:18","usedErrors":[]}],"src":"39:1324:18"},"id":18},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[3049],"_INTERFACEID_LSP1_DELEGATE":[3052],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[3058],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[3055]},"id":3059,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3046,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:19"},{"constant":true,"id":3049,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:19","nodeType":"VariableDeclaration","scope":3059,"src":"92:46:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3047,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:19","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":3052,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:19","nodeType":"VariableDeclaration","scope":3059,"src":"140:55:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3050,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":3055,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:19","nodeType":"VariableDeclaration","scope":3059,"src":"279:82:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":3053,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:19","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:19","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":3058,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:19","nodeType":"VariableDeclaration","scope":3059,"src":"410:123:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:19","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:19"},"id":19},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[5359],"ILSP1":[3026],"LSP1Utils":[3143],"LSP2Utils":[4114],"_INTERFACEID_LSP1":[3049],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[3058],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[3055]},"id":3144,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3060,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":3062,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3144,"sourceUnit":5360,"src":"77:98:20","symbolAliases":[{"foreign":{"id":3061,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"90:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","file":"../LSP2ERC725YJSONSchema/LSP2Utils.sol","id":3064,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3144,"sourceUnit":4115,"src":"176:65:20","symbolAliases":[{"foreign":{"id":3063,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"184:9:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":3066,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3144,"sourceUnit":3027,"src":"256:77:20","symbolAliases":[{"foreign":{"id":3065,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"264:22:20","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","file":"../LSP1UniversalReceiver/LSP1Constants.sol","id":3070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3144,"sourceUnit":3059,"src":"348:172:20","symbolAliases":[{"foreign":{"id":3067,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"361:17:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3068,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"384:37:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3069,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"427:40:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"522:370:20","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":3143,"linearizedBaseContracts":[3143],"name":"LSP1Utils","nameLocation":"901:9:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3074,"libraryName":{"id":3072,"name":"ERC165Checker","nameLocations":["923:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":5359,"src":"923:13:20"},"nodeType":"UsingForDirective","src":"917:32:20","typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":3098,"nodeType":"Block","src":"1503:226:20","statements":[{"condition":{"arguments":[{"id":3086,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1599:17:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3084,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1530:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1549:32:20","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5358,"src":"1530:51:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:100:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"1513:210:20","trueBody":{"id":3096,"nodeType":"Block","src":"1641:82:20","statements":[{"expression":{"arguments":[{"id":3092,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"1699:6:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3093,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"1707:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3089,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1661:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3088,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"1655:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$3026_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$3026","typeString":"contract ILSP1UniversalReceiver"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1681:17:20","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"1655:43:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3095,"nodeType":"ExpressionStatement","src":"1655:57:20"}]}}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"955:408:20","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1377:23:20","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1418:18:20","nodeType":"VariableDeclaration","scope":3099,"src":"1410:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"typeId","nameLocation":"1454:6:20","nodeType":"VariableDeclaration","scope":3099,"src":"1446:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1446:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"data","nameLocation":"1483:4:20","nodeType":"VariableDeclaration","scope":3099,"src":"1470:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3080,"name":"bytes","nodeType":"ElementaryTypeName","src":"1470:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1400:93:20"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"1503:0:20"},"scope":3143,"src":"1368:361:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"2342:77:20","statements":[{"expression":{"baseExpression":{"id":3109,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2359:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3111,"indexExpression":{"id":3110,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2374:37:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2359:53:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":3108,"id":3112,"nodeType":"Return","src":"2352:60:20"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"1735:471:20","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2220:20:20","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2284:14:20","nodeType":"VariableDeclaration","scope":3114,"src":"2250:48:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":3103,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2258:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2250:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3102,"name":"bytes","nodeType":"ElementaryTypeName","src":"2269:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2240:64:20"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"2328:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3106,"name":"bytes","nodeType":"ElementaryTypeName","src":"2328:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2327:14:20"},"scope":3143,"src":"2211:208:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"3194:216:20","statements":[{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3212:17:20","nodeType":"VariableDeclaration","scope":3141,"src":"3204:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3204:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3136,"initialValue":{"arguments":[{"id":3130,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3274:40:20","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":3133,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3336:6:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3328:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3131,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3328:7:20","typeDescriptions":{}}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3328:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3128,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"3232:9:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$4114_$","typeString":"type(library LSP2Utils)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3242:18:20","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":3604,"src":"3232:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:121:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3204:149:20"},{"expression":{"baseExpression":{"id":3137,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3370:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3139,"indexExpression":{"id":3138,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"3385:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3370:33:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":3125,"id":3140,"nodeType":"Return","src":"3363:40:20"}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"2425:600:20","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3039:29:20","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3112:14:20","nodeType":"VariableDeclaration","scope":3142,"src":"3078:48:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":3118,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3086:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3078:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3097:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"typeId","nameLocation":"3144:6:20","nodeType":"VariableDeclaration","scope":3142,"src":"3136:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3068:88:20"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"3180:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"3180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3179:14:20"},"scope":3143,"src":"3030:380:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3144,"src":"893:2519:20","usedErrors":[]}],"src":"39:3374:20"},"id":20},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol","exportedSymbols":{"ILSP20CallVerifier":[3173]},"id":3174,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3145,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP20CallVerifier","contractDependencies":[],"contractKind":"interface","documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"64:237:21","text":" @title Interface for the LSP20 Call Verification standard, a set of functions intended to perform verifications on behalf of another contract.\n @dev Interface to be inherited for contract supporting LSP20-CallVerification"},"fullyImplemented":false,"id":3173,"linearizedBaseContracts":[3173],"name":"ILSP20CallVerifier","nameLocation":"312:18:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"337:829:21","text":" @return returnedStatus MUST return the first 3 bytes of `lsp20VerifyCall(address,uint256,bytes)` function selector if the call to\n the function is allowed, concatened with a byte that determines if the lsp20VerifyCallResult function should\n be called after the original function call. The byte that invoke the lsp20VerifyCallResult function is strictly `0x01`.\n @param requestor The address that requested to make the call to `target`.\n @param target The address of the contract that implements the `LSP20CallVerification` interface.\n @param caller The address who called the function on the `target` contract.\n @param value The value sent by the caller to the function called on the msg.sender\n @param callData The calldata sent by the caller to the msg.sender"},"functionSelector":"de928f14","id":3162,"implemented":false,"kind":"function","modifiers":[],"name":"lsp20VerifyCall","nameLocation":"1180:15:21","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"requestor","nameLocation":"1213:9:21","nodeType":"VariableDeclaration","scope":3162,"src":"1205:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"target","nameLocation":"1240:6:21","nodeType":"VariableDeclaration","scope":3162,"src":"1232:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"1232:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"caller","nameLocation":"1264:6:21","nodeType":"VariableDeclaration","scope":3162,"src":"1256:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"value","nameLocation":"1288:5:21","nodeType":"VariableDeclaration","scope":3162,"src":"1280:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"callData","nameLocation":"1316:8:21","nodeType":"VariableDeclaration","scope":3162,"src":"1303:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3156,"name":"bytes","nodeType":"ElementaryTypeName","src":"1303:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1195:135:21"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"returnedStatus","nameLocation":"1356:14:21","nodeType":"VariableDeclaration","scope":3162,"src":"1349:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3159,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1349:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1348:23:21"},"scope":3173,"src":"1171:201:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"1378:305:21","text":" @return MUST return the lsp20VerifyCallResult function selector if the call to the function is allowed\n @param callHash The keccak256 hash of the parameters of {lsp20VerifyCall} concatenated\n @param callResult The value result of the function called on the msg.sender"},"functionSelector":"d3fc45d3","id":3172,"implemented":false,"kind":"function","modifiers":[],"name":"lsp20VerifyCallResult","nameLocation":"1697:21:21","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"callHash","nameLocation":"1736:8:21","nodeType":"VariableDeclaration","scope":3172,"src":"1728:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1728:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"callResult","nameLocation":"1767:10:21","nodeType":"VariableDeclaration","scope":3172,"src":"1754:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3166,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1718:65:21"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"1802:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3169,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1802:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1801:8:21"},"scope":3173,"src":"1688:122:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3174,"src":"302:1510:21","usedErrors":[]}],"src":"39:1774:21"},"id":21},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol","exportedSymbols":{"ILSP20":[3173],"LSP20CallVerification":[3341],"LSP20CallVerificationFailed":[3372],"LSP20CallingVerifierFailed":[3365],"LSP20EOACannotVerifyCall":[3377]},"id":3342,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3175,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:22"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol","file":"./ILSP20CallVerifier.sol","id":3177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3342,"sourceUnit":3174,"src":"78:70:22","symbolAliases":[{"foreign":{"id":3176,"name":"ILSP20CallVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"86:18:22","typeDescriptions":{}},"local":"ILSP20","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol","file":"./LSP20Errors.sol","id":3181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3342,"sourceUnit":3378,"src":"160:130:22","symbolAliases":[{"foreign":{"id":3178,"name":"LSP20CallVerificationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"173:27:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3179,"name":"LSP20CallingVerifierFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"206:26:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3180,"name":"LSP20EOACannotVerifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"238:24:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"LSP20CallVerification","contractDependencies":[],"contractKind":"contract","documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"292:319:22","text":" @title Implementation of a contract calling the verification functions according to LSP20 - Call Verification standard.\n @dev Module to be inherited used to verify the execution of functions according to a verifier address.\n Verification can happen before or after execution based on a returnedStatus."},"fullyImplemented":true,"id":3341,"linearizedBaseContracts":[3341],"name":"LSP20CallVerification","nameLocation":"630:21:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3258,"nodeType":"Block","src":"1395:932:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3190,"name":"logicVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1409:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1423:4:22","memberName":"code","nodeType":"MemberAccess","src":"1409:18:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1428:6:22","memberName":"length","nodeType":"MemberAccess","src":"1409:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1438:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1409:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3200,"nodeType":"IfStatement","src":"1405:107:22","trueBody":{"id":3199,"nodeType":"Block","src":"1441:71:22","statements":[{"errorCall":{"arguments":[{"id":3196,"name":"logicVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1487:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3195,"name":"LSP20EOACannotVerifyCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1462:24:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3198,"nodeType":"RevertStatement","src":"1455:46:22"}]}},{"clauses":[{"block":{"id":3245,"nodeType":"Block","src":"1854:364:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3223,"name":"returnedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"1896:14:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1889:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":3221,"name":"bytes3","nodeType":"ElementaryTypeName","src":"1889:6:22","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"expression":{"id":3227,"name":"ILSP20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"1938:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP20CallVerifier_$3173_$","typeString":"type(contract ILSP20CallVerifier)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1945:15:22","memberName":"lsp20VerifyCall","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"1938:22:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function ILSP20CallVerifier.lsp20VerifyCall(address,address,address,uint256,bytes memory) returns (bytes4)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1961:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1938:31:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1931:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":3225,"name":"bytes3","nodeType":"ElementaryTypeName","src":"1931:6:22","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1931:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"src":"1889:81:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3238,"nodeType":"IfStatement","src":"1868:293:22","trueBody":{"id":3237,"nodeType":"Block","src":"1985:176:22","statements":[{"errorCall":{"arguments":[{"hexValue":"66616c7365","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2070:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3234,"name":"returnedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"2113:14:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3232,"name":"LSP20CallVerificationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2010:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bool_$_t_bytes4_$returns$__$","typeString":"function (bool,bytes4) pure"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["2060:8:22","2097:14:22"],"names":["postCall","returnedStatus"],"nodeType":"FunctionCall","src":"2010:136:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3236,"nodeType":"RevertStatement","src":"2003:143:22"}]}},{"expression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3239,"name":"returnedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"2182:14:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3241,"indexExpression":{"hexValue":"33","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2197:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2182:17:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2203:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"src":"2182:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3189,"id":3244,"nodeType":"Return","src":"2175:32:22"}]},"errorName":"","id":3246,"nodeType":"TryCatchClause","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"returnedStatus","nameLocation":"1838:14:22","nodeType":"VariableDeclaration","scope":3246,"src":"1831:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3218,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1831:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1830:23:22"},"src":"1822:396:22"},{"block":{"id":3255,"nodeType":"Block","src":"2250:71:22","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2293:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3252,"name":"errorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2300:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3250,"name":"_revertWithLSP20DefaultError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2264:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bool,bytes memory) pure"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2264:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"ExpressionStatement","src":"2264:46:22"}]},"errorName":"","id":3256,"nodeType":"TryCatchClause","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"errorData","nameLocation":"2239:9:22","nodeType":"VariableDeclaration","scope":3256,"src":"2226:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"2226:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2225:24:22"},"src":"2219:102:22"}],"externalCall":{"arguments":[{"expression":{"id":3205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1681:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1677:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3209,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1713:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_LSP20CallVerification_$3341","typeString":"contract LSP20CallVerification"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP20CallVerification_$3341","typeString":"contract LSP20CallVerification"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3211,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1736:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1740:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1736:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1764:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1768:5:22","memberName":"value","nodeType":"MemberAccess","src":"1764:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1791:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1795:4:22","memberName":"data","nodeType":"MemberAccess","src":"1791:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":3202,"name":"logicVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1629:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3201,"name":"ILSP20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"1622:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP20CallVerifier_$3173_$","typeString":"type(contract ILSP20CallVerifier)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP20CallVerifier_$3173","typeString":"contract ILSP20CallVerifier"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1644:15:22","memberName":"lsp20VerifyCall","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"1622:37:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:191:22","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3257,"nodeType":"TryStatement","src":"1606:715:22"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"658:630:22","text":" @dev Calls {lsp20VerifyCall} function on the logicVerifier.\n @custom:info\n - Reverts in case the value returned does not match the returned status (lsp20VerifyCall selector).\n - Returns whether a verification after the execution should happen based on the last byte of the `returnedStatus`.\n - Reverts with no reason if the  data returned by `ILSP20(logicVerifier).lsp20VerifyCall(...)` cannot be decoded (_e.g:_ any other data type besides `bytes4`).\n See this link for more info: https://forum.soliditylang.org/t/call-for-feedback-the-future-of-try-catch-in-solidity/1497."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCall","nameLocation":"1302:11:22","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"logicVerifier","nameLocation":"1331:13:22","nodeType":"VariableDeclaration","scope":3259,"src":"1323:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"1323:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:37:22"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"verifyAfter","nameLocation":"1382:11:22","nodeType":"VariableDeclaration","scope":3259,"src":"1377:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3187,"name":"bool","nodeType":"ElementaryTypeName","src":"1377:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1376:18:22"},"scope":3341,"src":"1293:1034:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"2977:910:22","statements":[{"clauses":[{"block":{"id":3306,"nodeType":"Block","src":"3498:281:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"returnedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3516:14:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3294,"name":"ILSP20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"3534:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP20CallVerifier_$3173_$","typeString":"type(contract ILSP20CallVerifier)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3541:21:22","memberName":"lsp20VerifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"3534:28:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function ILSP20CallVerifier.lsp20VerifyCallResult(bytes32,bytes memory) returns (bytes4)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3563:8:22","memberName":"selector","nodeType":"MemberAccess","src":"3534:37:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3516:55:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"nodeType":"IfStatement","src":"3512:236:22","trueBody":{"id":3303,"nodeType":"Block","src":"3573:175:22","statements":[{"errorCall":{"arguments":[{"hexValue":"74727565","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3658:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3300,"name":"returnedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3700:14:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3298,"name":"LSP20CallVerificationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"3598:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bool_$_t_bytes4_$returns$__$","typeString":"function (bool,bytes4) pure"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["3648:8:22","3684:14:22"],"names":["postCall","returnedStatus"],"nodeType":"FunctionCall","src":"3598:135:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"RevertStatement","src":"3591:142:22"}]}},{"functionReturnParameters":3266,"id":3305,"nodeType":"Return","src":"3762:7:22"}]},"errorName":"","id":3307,"nodeType":"TryCatchClause","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"returnedStatus","nameLocation":"3482:14:22","nodeType":"VariableDeclaration","scope":3307,"src":"3475:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3290,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3475:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3474:23:22"},"src":"3466:313:22"},{"block":{"id":3316,"nodeType":"Block","src":"3811:70:22","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3854:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3313,"name":"errorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3860:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3311,"name":"_revertWithLSP20DefaultError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"3825:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bool,bytes memory) pure"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3825:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"ExpressionStatement","src":"3825:45:22"}]},"errorName":"","id":3317,"nodeType":"TryCatchClause","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"errorData","nameLocation":"3800:9:22","nodeType":"VariableDeclaration","scope":3317,"src":"3787:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3308,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:24:22"},"src":"3780:101:22"}],"externalCall":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3221:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3221:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3278,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3265:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_LSP20CallVerification_$3341","typeString":"contract LSP20CallVerification"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP20CallVerification_$3341","typeString":"contract LSP20CallVerification"}],"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3257:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"3257:7:22","typeDescriptions":{}}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3296:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3300:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3296:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3332:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3336:5:22","memberName":"value","nodeType":"MemberAccess","src":"3332:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3367:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3371:4:22","memberName":"data","nodeType":"MemberAccess","src":"3367:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3272,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3179:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3183:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3179:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3179:218:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3271,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3148:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:267:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3288,"name":"callResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"3433:10:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3268,"name":"logicVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3094:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3267,"name":"ILSP20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"3087:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP20CallVerifier_$3173_$","typeString":"type(contract ILSP20CallVerifier)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3087:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP20CallVerifier_$3173","typeString":"contract ILSP20CallVerifier"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3109:21:22","memberName":"lsp20VerifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"3087:43:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) external returns (bytes4)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3087:370:22","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3318,"nodeType":"TryStatement","src":"3071:810:22"}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"2333:525:22","text":" @dev Calls {lsp20VerifyCallResult} function on the logicVerifier.\n @custom:info\n - Reverts in case the value returned does not match the returned status (lsp20VerifyCallResult selector).\n - Reverts with no reason if the data returned by `ILSP20(logicVerifier).lsp20VerifyCallResult(...)` cannot be decoded (_e.g:_ any other data type besides `bytes4`).\n See this link for more info: https://forum.soliditylang.org/t/call-for-feedback-the-future-of-try-catch-in-solidity/1497."},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nameLocation":"2872:17:22","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"logicVerifier","nameLocation":"2907:13:22","nodeType":"VariableDeclaration","scope":3320,"src":"2899:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"2899:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"callResult","nameLocation":"2943:10:22","nodeType":"VariableDeclaration","scope":3320,"src":"2930:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3263,"name":"bytes","nodeType":"ElementaryTypeName","src":"2930:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2889:70:22"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"2977:0:22"},"scope":3341,"src":"2863:1024:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3339,"nodeType":"Block","src":"4017:537:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3327,"name":"returnedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4093:12:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4106:6:22","memberName":"length","nodeType":"MemberAccess","src":"4093:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4093:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3337,"nodeType":"Block","src":"4480:68:22","statements":[{"errorCall":{"arguments":[{"id":3334,"name":"postCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"4528:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3333,"name":"LSP20CallingVerifierFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"4501:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4501:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3336,"nodeType":"RevertStatement","src":"4494:43:22"}]},"id":3338,"nodeType":"IfStatement","src":"4089:459:22","trueBody":{"id":3332,"nodeType":"Block","src":"4119:355:22","statements":[{"AST":{"nodeType":"YulBlock","src":"4327:137:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4345:42:22","value":{"arguments":[{"name":"returnedData","nodeType":"YulIdentifier","src":"4374:12:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4368:5:22"},"nodeType":"YulFunctionCall","src":"4368:19:22"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"4349:15:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4415:2:22","type":"","value":"32"},{"name":"returnedData","nodeType":"YulIdentifier","src":"4419:12:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4411:3:22"},"nodeType":"YulFunctionCall","src":"4411:21:22"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"4434:15:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4404:6:22"},"nodeType":"YulFunctionCall","src":"4404:46:22"},"nodeType":"YulExpressionStatement","src":"4404:46:22"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3324,"isOffset":false,"isSlot":false,"src":"4374:12:22","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"4419:12:22","valueSize":1}],"id":3331,"nodeType":"InlineAssembly","src":"4318:146:22"}]}}]},"id":3340,"implemented":true,"kind":"function","modifiers":[],"name":"_revertWithLSP20DefaultError","nameLocation":"3902:28:22","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"postCall","nameLocation":"3945:8:22","nodeType":"VariableDeclaration","scope":3340,"src":"3940:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3321,"name":"bool","nodeType":"ElementaryTypeName","src":"3940:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"returnedData","nameLocation":"3976:12:22","nodeType":"VariableDeclaration","scope":3340,"src":"3963:25:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3963:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3930:64:22"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[],"src":"4017:0:22"},"scope":3341,"src":"3893:661:22","stateMutability":"pure","virtual":true,"visibility":"internal"}],"scope":3342,"src":"612:3944:22","usedErrors":[]}],"src":"39:4518:22"},"id":22},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol","exportedSymbols":{"_INTERFACEID_LSP20_CALL_VERIFICATION":[3346],"_INTERFACEID_LSP20_CALL_VERIFIER":[3349],"_LSP20_VERIFY_CALL_RESULT_SUCCESS_VALUE":[3358],"_LSP20_VERIFY_CALL_SUCCESS_VALUE_WITHOUT_POST_VERIFICATION":[3355],"_LSP20_VERIFY_CALL_SUCCESS_VALUE_WITH_POST_VERIFICATION":[3352]},"id":3359,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3343,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:23"},{"constant":true,"id":3346,"mutability":"constant","name":"_INTERFACEID_LSP20_CALL_VERIFICATION","nameLocation":"126:36:23","nodeType":"VariableDeclaration","scope":3359,"src":"110:65:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"110:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783161306562366135","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165:10:23","typeDescriptions":{"typeIdentifier":"t_rational_437171877_by_1","typeString":"int_const 437171877"},"value":"0x1a0eb6a5"},"visibility":"internal"},{"constant":true,"id":3349,"mutability":"constant","name":"_INTERFACEID_LSP20_CALL_VERIFIER","nameLocation":"315:32:23","nodeType":"VariableDeclaration","scope":3359,"src":"299:61:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"299:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783064366563616337","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"350:10:23","typeDescriptions":{"typeIdentifier":"t_rational_225364679_by_1","typeString":"int_const 225364679"},"value":"0x0d6ecac7"},"visibility":"internal"},{"constant":true,"id":3352,"mutability":"constant","name":"_LSP20_VERIFY_CALL_SUCCESS_VALUE_WITH_POST_VERIFICATION","nameLocation":"453:55:23","nodeType":"VariableDeclaration","scope":3359,"src":"437:84:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3350,"name":"bytes4","nodeType":"ElementaryTypeName","src":"437:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786465393238663031","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"511:10:23","typeDescriptions":{"typeIdentifier":"t_rational_3734146817_by_1","typeString":"int_const 3734146817"},"value":"0xde928f01"},"visibility":"internal"},{"constant":true,"id":3355,"mutability":"constant","name":"_LSP20_VERIFY_CALL_SUCCESS_VALUE_WITHOUT_POST_VERIFICATION","nameLocation":"614:58:23","nodeType":"VariableDeclaration","scope":3359,"src":"598:87:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3353,"name":"bytes4","nodeType":"ElementaryTypeName","src":"598:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786465393238663030","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:10:23","typeDescriptions":{"typeIdentifier":"t_rational_3734146816_by_1","typeString":"int_const 3734146816"},"value":"0xde928f00"},"visibility":"internal"},{"constant":true,"id":3358,"mutability":"constant","name":"_LSP20_VERIFY_CALL_RESULT_SUCCESS_VALUE","nameLocation":"753:39:23","nodeType":"VariableDeclaration","scope":3359,"src":"737:68:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"737:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786433666334356433","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:10:23","typeDescriptions":{"typeIdentifier":"t_rational_3556525523_by_1","typeString":"int_const 3556525523"},"value":"0xd3fc45d3"},"visibility":"internal"}],"src":"39:768:23"},"id":23},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol","exportedSymbols":{"LSP20CallVerificationFailed":[3372],"LSP20CallingVerifierFailed":[3365],"LSP20EOACannotVerifyCall":[3377]},"id":3378,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3360,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:24"},{"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"64:149:24","text":" @dev reverts when the call to the owner fail with no revert reason\n @param postCall True if the execution call was done, False otherwise"},"errorSelector":"8c6a8ae3","id":3365,"name":"LSP20CallingVerifierFailed","nameLocation":"220:26:24","nodeType":"ErrorDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"postCall","nameLocation":"252:8:24","nodeType":"VariableDeclaration","scope":3365,"src":"247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3362,"name":"bool","nodeType":"ElementaryTypeName","src":"247:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"246:15:24"},"src":"214:48:24"},{"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"264:243:24","text":" @dev reverts when the call to the owner does not return the LSP20 success value\n @param postCall True if the execution call was done, False otherwise\n @param returnedStatus The bytes4 decoded data returned by the logic verifier."},"errorSelector":"9d6741e3","id":3372,"name":"LSP20CallVerificationFailed","nameLocation":"514:27:24","nodeType":"ErrorDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"postCall","nameLocation":"547:8:24","nodeType":"VariableDeclaration","scope":3372,"src":"542:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3367,"name":"bool","nodeType":"ElementaryTypeName","src":"542:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"returnedStatus","nameLocation":"564:14:24","nodeType":"VariableDeclaration","scope":3372,"src":"557:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3369,"name":"bytes4","nodeType":"ElementaryTypeName","src":"557:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"541:38:24"},"src":"508:72:24"},{"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"582:186:24","text":" @dev Reverts when the logic verifier is an Externally Owned Account (EOA) that cannot return the LSP20 success value.\n @param logicVerifier The address of the logic verifier"},"errorSelector":"0c392301","id":3377,"name":"LSP20EOACannotVerifyCall","nameLocation":"775:24:24","nodeType":"ErrorDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"logicVerifier","nameLocation":"808:13:24","nodeType":"VariableDeclaration","scope":3377,"src":"800:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"799:23:24"},"src":"769:54:24"}],"src":"39:785:24"},"id":24},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[1121],"LSP2Utils":[4114]},"id":4115,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3379,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:25"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":3381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4115,"sourceUnit":1122,"src":"78:89:25","symbolAliases":[{"foreign":{"id":3380,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"91:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"169:312:25","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":4114,"linearizedBaseContracts":[4114],"name":"LSP2Utils","nameLocation":"490:9:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3397,"nodeType":"Block","src":"929:49:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":3393,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"962:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3391,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:25","typeDescriptions":{}}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3390,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3389,"id":3396,"nodeType":"Return","src":"939:32:25"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"506:319:25","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:25","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"keyName","nameLocation":"883:7:25","nodeType":"VariableDeclaration","scope":3398,"src":"869:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3384,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:25"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"920:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:25"},"scope":4114,"src":"830:148:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"1548:415:25","statements":[{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:25","nodeType":"VariableDeclaration","scope":3446,"src":"1558:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3406,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3410,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"1587:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3408,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:25","typeDescriptions":{}}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3414,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1618:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:25","memberName":"length","nodeType":"MemberAccess","src":"1618:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":3413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3420,"nodeType":"ExpressionStatement","src":"1610:64:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3422,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1705:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3427,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3423,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1713:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:25","memberName":"length","nodeType":"MemberAccess","src":"1713:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:25","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3430,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1783:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3435,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3431,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1791:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:25","memberName":"length","nodeType":"MemberAccess","src":"1791:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:25","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":3421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:236:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3441,"nodeType":"ExpressionStatement","src":"1684:236:25"},{"expression":{"arguments":[{"id":3443,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"1948:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3442,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3405,"id":3445,"nodeType":"Return","src":"1931:25:25"}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"984:459:25","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:25","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:25","nodeType":"VariableDeclaration","scope":3447,"src":"1483:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:25"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"1539:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:25"},"scope":4114,"src":"1448:515:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3477,"nodeType":"Block","src":"2592:168:25","statements":[{"assignments":[3458],"declarations":[{"constant":false,"id":3458,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:25","nodeType":"VariableDeclaration","scope":3477,"src":"2602:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"arguments":[{"id":3464,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"2666:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3462,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:25","typeDescriptions":{}}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":3468,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"2697:5:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3466,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:25","typeDescriptions":{}}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3459,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:25","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2632:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:81:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:25"},{"expression":{"arguments":[{"id":3474,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"2738:14:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:25","typeDescriptions":{}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3456,"id":3476,"nodeType":"Return","src":"2723:30:25"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"1969:491:25","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":3478,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:25","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:25","nodeType":"VariableDeclaration","scope":3478,"src":"2514:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"index","nameLocation":"2548:5:25","nodeType":"VariableDeclaration","scope":3478,"src":"2540:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3451,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:25"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"2583:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:25"},"scope":4114,"src":"2465:295:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"3444:325:25","statements":[{"assignments":[3489],"declarations":[{"constant":false,"id":3489,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:25","nodeType":"VariableDeclaration","scope":3530,"src":"3454:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3496,"initialValue":{"arguments":[{"arguments":[{"id":3493,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"3494:9:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3491,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:25","typeDescriptions":{}}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3490,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:25"},{"assignments":[3498],"declarations":[{"constant":false,"id":3498,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:25","nodeType":"VariableDeclaration","scope":3530,"src":"3515:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3505,"initialValue":{"arguments":[{"arguments":[{"id":3502,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3554:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:25","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:25"},{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:25","nodeType":"VariableDeclaration","scope":3530,"src":"3575:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3506,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3524,"initialValue":{"arguments":[{"arguments":[{"id":3513,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"3639:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":3511,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:25","typeDescriptions":{}}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3515,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:25","typeDescriptions":{}}},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":3521,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"3698:12:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3519,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:25","typeDescriptions":{}}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3508,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:25","typeDescriptions":{}}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:25","memberName":"concat","nodeType":"MemberAccess","src":"3605:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:116:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:25"},{"expression":{"arguments":[{"id":3527,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"3747:14:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:25","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3487,"id":3529,"nodeType":"Return","src":"3732:30:25"}]},"documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"2766:542:25","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:25","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:25","nodeType":"VariableDeclaration","scope":3531,"src":"3350:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3480,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:25","nodeType":"VariableDeclaration","scope":3531,"src":"3383:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3482,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:25"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3531,"src":"3435:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:25"},"scope":4114,"src":"3313:456:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"4458:258:25","statements":[{"assignments":[3542],"declarations":[{"constant":false,"id":3542,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:25","nodeType":"VariableDeclaration","scope":3574,"src":"4468:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3549,"initialValue":{"arguments":[{"arguments":[{"id":3546,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"4508:9:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3544,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:25","typeDescriptions":{}}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3543,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:25"},{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:25","nodeType":"VariableDeclaration","scope":3574,"src":"4530:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3550,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[{"arguments":[{"id":3557,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"4594:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":3555,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:25","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3559,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:25","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":3565,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"4653:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3563,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:25","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3552,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:25","typeDescriptions":{}}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:6:25","memberName":"concat","nodeType":"MemberAccess","src":"4560:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:108:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:25"},{"expression":{"arguments":[{"id":3571,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"4694:14:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:25","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3540,"id":3573,"nodeType":"Return","src":"4679:30:25"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"3775:557:25","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:25","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:25","nodeType":"VariableDeclaration","scope":3575,"src":"4374:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3533,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"addr","nameLocation":"4415:4:25","nodeType":"VariableDeclaration","scope":3575,"src":"4407:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:25"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"4449:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:25"},"scope":4114,"src":"4337:379:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"5320:177:25","statements":[{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:25","nodeType":"VariableDeclaration","scope":3603,"src":"5330:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3585,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3597,"initialValue":{"arguments":[{"id":3590,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"5384:9:25","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3591,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:25","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":3595,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5430:12:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3587,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:25","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5364:6:25","memberName":"concat","nodeType":"MemberAccess","src":"5358:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:25"},{"expression":{"arguments":[{"id":3600,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"5477:12:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:25","typeDescriptions":{}}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3584,"id":3602,"nodeType":"Return","src":"5462:28:25"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"4722:470:25","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:25","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:25","nodeType":"VariableDeclaration","scope":3604,"src":"5234:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":3577,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:25","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:25","nodeType":"VariableDeclaration","scope":3604,"src":"5261:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":3579,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:25"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"5311:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:25"},"scope":4114,"src":"5197:300:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"6379:356:25","statements":[{"assignments":[3617],"declarations":[{"constant":false,"id":3617,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:25","nodeType":"VariableDeclaration","scope":3662,"src":"6389:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3624,"initialValue":{"arguments":[{"arguments":[{"id":3621,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"6429:9:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3619,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:25","typeDescriptions":{}}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6423:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3618,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:25"},{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:25","nodeType":"VariableDeclaration","scope":3662,"src":"6450:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3633,"initialValue":{"arguments":[{"arguments":[{"id":3630,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"6491:10:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3628,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:25","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3627,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:25"},{"assignments":[3635],"declarations":[{"constant":false,"id":3635,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:25","nodeType":"VariableDeclaration","scope":3662,"src":"6514:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3656,"initialValue":{"arguments":[{"arguments":[{"id":3641,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"6577:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":3639,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:25","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":3645,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"6612:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3643,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:25","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3647,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:25","typeDescriptions":{}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":3653,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"6672:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3651,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:25","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3636,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:25","typeDescriptions":{}}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:25","memberName":"concat","nodeType":"MemberAccess","src":"6544:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:143:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:25"},{"expression":{"arguments":[{"id":3659,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"6713:14:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:25","typeDescriptions":{}}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3615,"id":3661,"nodeType":"Return","src":"6698:30:25"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"5503:704:25","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:25","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:25","nodeType":"VariableDeclaration","scope":3663,"src":"6261:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3606,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:25","nodeType":"VariableDeclaration","scope":3663,"src":"6294:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3608,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"addr","nameLocation":"6336:4:25","nodeType":"VariableDeclaration","scope":3663,"src":"6328:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3610,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:25"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"6370:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:25"},"scope":4114,"src":"6212:523:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"7579:197:25","statements":[{"assignments":[3676],"declarations":[{"constant":false,"id":3676,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:25","nodeType":"VariableDeclaration","scope":3694,"src":"7589:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3675,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3688,"initialValue":{"arguments":[{"id":3680,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"7643:9:25","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":3681,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7666:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3682,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:25","typeDescriptions":{}}},"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":3686,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"7712:9:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3677,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:25","typeDescriptions":{}}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:6:25","memberName":"concat","nodeType":"MemberAccess","src":"7617:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:114:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:25"},{"expression":{"arguments":[{"id":3691,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"7756:12:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:25","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3674,"id":3693,"nodeType":"Return","src":"7741:28:25"}]},"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"6741:676:25","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:25","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:25","nodeType":"VariableDeclaration","scope":3695,"src":"7471:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":3665,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:25","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:25","nodeType":"VariableDeclaration","scope":3695,"src":"7497:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3667,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:25","nodeType":"VariableDeclaration","scope":3695,"src":"7523:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":3669,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:25"},"returnParameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"7570:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:25"},"scope":4114,"src":"7422:354:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"8434:177:25","statements":[{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:25","nodeType":"VariableDeclaration","scope":3723,"src":"8444:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3705,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3717,"initialValue":{"arguments":[{"id":3710,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"8498:9:25","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3711,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:25","typeDescriptions":{}}},"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:9:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":3715,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"8544:12:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3707,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:25","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:25","memberName":"concat","nodeType":"MemberAccess","src":"8472:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8472:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:25"},{"expression":{"arguments":[{"id":3720,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"8591:12:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:25","typeDescriptions":{}}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3704,"id":3722,"nodeType":"Return","src":"8576:28:25"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"7782:512:25","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:25","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:25","nodeType":"VariableDeclaration","scope":3724,"src":"8348:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":3697,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:25","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:25","nodeType":"VariableDeclaration","scope":3724,"src":"8375:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":3699,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:25"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"8425:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:25"},"scope":4114,"src":"8299:312:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3764,"nodeType":"Block","src":"9017:208:25","statements":[{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:25","nodeType":"VariableDeclaration","scope":3764,"src":"9027:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3744,"initialValue":{"arguments":[{"arguments":[{"id":3741,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"9072:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3739,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:25","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3738,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:25"},{"assignments":[3746],"declarations":[{"constant":false,"id":3746,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:25","nodeType":"VariableDeclaration","scope":3764,"src":"9096:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3753,"initialValue":{"arguments":[{"arguments":[{"id":3750,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"9133:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3748,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:25","typeDescriptions":{}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3747,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:25"},{"expression":{"arguments":[{"arguments":[{"id":3758,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"9181:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3756,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:25","typeDescriptions":{}}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3760,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"9202:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3761,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"9214:3:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3754,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9161:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3735,"id":3763,"nodeType":"Return","src":"9150:68:25"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"8617:231:25","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":3765,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:25","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:25","nodeType":"VariableDeclaration","scope":3765,"src":"8892:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3726,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"json","nameLocation":"8942:4:25","nodeType":"VariableDeclaration","scope":3765,"src":"8928:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3728,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"url","nameLocation":"8970:3:25","nodeType":"VariableDeclaration","scope":3765,"src":"8956:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3730,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:25"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3765,"src":"9003:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3733,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:25"},"scope":4114,"src":"8853:372:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"9710:214:25","statements":[{"assignments":[3778],"declarations":[{"constant":false,"id":3778,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:25","nodeType":"VariableDeclaration","scope":3805,"src":"9720:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3785,"initialValue":{"arguments":[{"arguments":[{"id":3782,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"9765:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3780,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:25","typeDescriptions":{}}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9749:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:25"},{"assignments":[3787],"declarations":[{"constant":false,"id":3787,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:25","nodeType":"VariableDeclaration","scope":3805,"src":"9789:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"arguments":[{"id":3791,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"9826:10:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3789,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:25","typeDescriptions":{}}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3788,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:25"},{"expression":{"arguments":[{"arguments":[{"id":3799,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"9880:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3797,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:25","typeDescriptions":{}}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3801,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"9901:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3802,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"9913:3:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3795,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9860:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3776,"id":3804,"nodeType":"Return","src":"9849:68:25"}]},"documentation":{"id":3766,"nodeType":"StructuredDocumentation","src":"9231:303:25","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:25","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:25","nodeType":"VariableDeclaration","scope":3806,"src":"9579:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3767,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:25","nodeType":"VariableDeclaration","scope":3806,"src":"9615:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3769,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"url","nameLocation":"9663:3:25","nodeType":"VariableDeclaration","scope":3806,"src":"9649:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3771,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:25"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3806,"src":"9696:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3774,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:25"},"scope":4114,"src":"9539:385:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"10373:1273:25","statements":[{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:25","nodeType":"VariableDeclaration","scope":3869,"src":"10862:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":3818,"initialValue":{"hexValue":"30","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:25"},{"body":{"id":3858,"nodeType":"Block","src":"11164:392:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11182:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3826,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11197:17:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:6:25","memberName":"length","nodeType":"MemberAccess","src":"11197:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3831,"nodeType":"IfStatement","src":"11178:57:25","trueBody":{"expression":{"hexValue":"66616c7365","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3813,"id":3830,"nodeType":"Return","src":"11223:12:25"}},{"assignments":[3833],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:25","nodeType":"VariableDeclaration","scope":3858,"src":"11249:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3851,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":3840,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11367:17:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3842,"indexExpression":{"id":3841,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11385:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":3843,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11419:17:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3847,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":3838,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11329:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:146:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3836,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:25","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:192:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3834,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:25","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11273:230:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:25"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11517:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"11528:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ExpressionStatement","src":"11517:28:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11128:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3820,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11138:17:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11156:6:25","memberName":"length","nodeType":"MemberAccess","src":"11138:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":3859,"nodeType":"WhileStatement","src":"11121:435:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"11569:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3861,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11580:17:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:6:25","memberName":"length","nodeType":"MemberAccess","src":"11580:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"11565:52:25","trueBody":{"expression":{"hexValue":"74727565","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3813,"id":3865,"nodeType":"Return","src":"11606:11:25"}},{"expression":{"hexValue":"66616c7365","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3813,"id":3868,"nodeType":"Return","src":"11627:12:25"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"9930:334:25","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:25","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:25","nodeType":"VariableDeclaration","scope":3870,"src":"10307:30:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3808,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:25"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"10367:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3811,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:25"},"scope":4114,"src":"10269:1377:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"12056:104:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3878,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"12070:11:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:25","memberName":"length","nodeType":"MemberAccess","src":"12070:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"12066:66:25","trueBody":{"id":3884,"nodeType":"Block","src":"12096:36:25","statements":[{"expression":{"hexValue":"74727565","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3877,"id":3883,"nodeType":"Return","src":"12110:11:25"}]}},{"expression":{"hexValue":"66616c7365","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3877,"id":3887,"nodeType":"Return","src":"12141:12:25"}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"11652:293:25","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:25","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:25","nodeType":"VariableDeclaration","scope":3889,"src":"11996:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:25"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"12050:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3875,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:25"},"scope":4114,"src":"11950:210:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"12894:512:25","statements":[{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3907,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"12904:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3909,"nodeType":"ArrayTypeName","src":"12919:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3914,"nodeType":"ExpressionStatement","src":"12904:27:25"},{"expression":{"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12941:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":3916,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3917,"nodeType":"ArrayTypeName","src":"12958:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3922,"nodeType":"ExpressionStatement","src":"12941:27:25"},{"expression":{"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3923,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"13043:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3925,"indexExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3926,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"13057:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3928,"nodeType":"ExpressionStatement","src":"13043:22:25"},{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3929,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"13075:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3931,"indexExpression":{"hexValue":"30","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3934,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"13108:14:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":3932,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3937,"nodeType":"ExpressionStatement","src":"13075:48:25"},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3938,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"13198:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3940,"indexExpression":{"hexValue":"31","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3941,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"13212:20:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3943,"nodeType":"ExpressionStatement","src":"13198:34:25"},{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3944,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"13242:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3946,"indexExpression":{"hexValue":"31","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3949,"nodeType":"ExpressionStatement","src":"13242:18:25"},{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3950,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"13335:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3952,"indexExpression":{"hexValue":"32","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3953,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"13349:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3955,"nodeType":"ExpressionStatement","src":"13335:36:25"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3956,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"13381:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3958,"indexExpression":{"hexValue":"32","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3961,"nodeType":"ExpressionStatement","src":"13381:18:25"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"12166:434:25","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:25","nodeType":"FunctionDefinition","parameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:25","nodeType":"VariableDeclaration","scope":3963,"src":"12656:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:25","nodeType":"VariableDeclaration","scope":3963,"src":"12682:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3893,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:25","nodeType":"VariableDeclaration","scope":3963,"src":"12714:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:25","nodeType":"VariableDeclaration","scope":3963,"src":"12754:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:25"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:25","nodeType":"VariableDeclaration","scope":3963,"src":"12836:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3901,"nodeType":"ArrayTypeName","src":"12836:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:25","nodeType":"VariableDeclaration","scope":3963,"src":"12863:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3903,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3904,"nodeType":"ArrayTypeName","src":"12863:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:25"},"scope":4114,"src":"12605:801:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4112,"nodeType":"Block","src":"14506:1736:25","statements":[{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14516:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3988,"nodeType":"ArrayTypeName","src":"14531:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3993,"nodeType":"ExpressionStatement","src":"14516:27:25"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"14553:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":3995,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3996,"nodeType":"ArrayTypeName","src":"14570:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4001,"nodeType":"ExpressionStatement","src":"14553:27:25"},{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4002,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14655:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4004,"indexExpression":{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4005,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"14669:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4007,"nodeType":"ExpressionStatement","src":"14655:22:25"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4008,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"14687:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4010,"indexExpression":{"hexValue":"30","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4013,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"14720:14:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":4011,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14707:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4016,"nodeType":"ExpressionStatement","src":"14687:48:25"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4017,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"14810:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4019,"indexExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4020,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"14824:20:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4022,"nodeType":"ExpressionStatement","src":"14810:34:25"},{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4023,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"14854:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4025,"indexExpression":{"hexValue":"31","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4028,"nodeType":"ExpressionStatement","src":"14854:18:25"},{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:25","nodeType":"VariableDeclaration","scope":4112,"src":"14944:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4036,"initialValue":{"arguments":[{"id":4033,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"15028:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4034,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"15050:14:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":4031,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"14974:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$4114_$","typeString":"type(library LSP2Utils)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14984:30:25","memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"14974:40:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14974:100:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:25"},{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:25","nodeType":"VariableDeclaration","scope":4112,"src":"15161:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":4037,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":4046,"initialValue":{"arguments":[{"arguments":[{"id":4043,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"15238:19:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4041,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15214:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1121","typeString":"contract IERC725Y"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15230:7:25","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"15214:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15214:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":4039,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:25","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15193:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:25"},{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4047,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"15384:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4049,"indexExpression":{"hexValue":"32","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4050,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"15398:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4052,"nodeType":"ExpressionStatement","src":"15384:36:25"},{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4053,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"15430:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4055,"indexExpression":{"hexValue":"32","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4059,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"15459:21:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4056,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:25","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15452:6:25","memberName":"concat","nodeType":"MemberAccess","src":"15446:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4062,"nodeType":"ExpressionStatement","src":"15430:51:25"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4063,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"15555:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4065,"indexExpression":{"hexValue":"33","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4066,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"15569:19:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4068,"nodeType":"ExpressionStatement","src":"15555:33:25"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4069,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"15598:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4071,"indexExpression":{"hexValue":"33","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4074,"nodeType":"ExpressionStatement","src":"15598:18:25"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:25","nodeType":"VariableDeclaration","scope":4112,"src":"15689:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4085,"initialValue":{"arguments":[{"arguments":[{"id":4081,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"15767:20:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":4079,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:25","typeDescriptions":{}}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":4083,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"15802:21:25","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":4077,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"15717:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$4114_$","typeString":"type(library LSP2Utils)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15727:18:25","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":3604,"src":"15717:28:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15717:116:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:25"},{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:25","nodeType":"VariableDeclaration","scope":4112,"src":"15912:32:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4086,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4099,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4094,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"16008:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4092,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15984:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1121","typeString":"contract IERC725Y"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16000:7:25","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"15984:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":4090,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:25","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4097,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"16041:19:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":4088,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15951:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15947:123:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:25"},{"expression":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4100,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"16159:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4102,"indexExpression":{"hexValue":"34","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4103,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"16173:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4105,"nodeType":"ExpressionStatement","src":"16159:31:25"},{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4106,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"16200:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4108,"indexExpression":{"hexValue":"34","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4109,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"16216:19:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4111,"nodeType":"ExpressionStatement","src":"16200:35:25"}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"13412:733:25","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":4113,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:25","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:25","nodeType":"VariableDeclaration","scope":4113,"src":"14197:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1121","typeString":"contract IERC725Y"},"typeName":{"id":3966,"nodeType":"UserDefinedTypeName","pathNode":{"id":3965,"name":"IERC725Y","nameLocations":["14197:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":1121,"src":"14197:8:25"},"referencedDeclaration":1121,"src":"14197:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1121","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:25","nodeType":"VariableDeclaration","scope":4113,"src":"14231:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:25","nodeType":"VariableDeclaration","scope":4113,"src":"14257:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3970,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:25","nodeType":"VariableDeclaration","scope":4113,"src":"14289:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:25","nodeType":"VariableDeclaration","scope":4113,"src":"14329:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3974,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:25","nodeType":"VariableDeclaration","scope":4113,"src":"14366:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:25"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:25","nodeType":"VariableDeclaration","scope":4113,"src":"14448:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3980,"nodeType":"ArrayTypeName","src":"14448:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:25","nodeType":"VariableDeclaration","scope":4113,"src":"14475:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3982,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3983,"nodeType":"ArrayTypeName","src":"14475:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:25"},"scope":4114,"src":"14150:2092:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4115,"src":"482:15762:25","usedErrors":[]}],"src":"39:16206:25"},"id":25},"@lukso/lsp-smart-contracts/contracts/Version.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/Version.sol","exportedSymbols":{"Version":[4121]},"id":4122,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4116,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:26"},{"abstract":true,"baseContracts":[],"canonicalName":"Version","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4121,"linearizedBaseContracts":[4121],"name":"Version","nameLocation":"82:7:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"96:144:26","text":" @dev Get the version of the contract.\n @notice Contract version.\n @return The version of the the contract."},"functionSelector":"ffa1ad74","id":4120,"mutability":"constant","name":"VERSION","nameLocation":"431:7:26","nodeType":"VariableDeclaration","scope":4121,"src":"408:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4118,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"302e31342e30","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"441:8:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f1d6b7cb9911c9974e6731106f7ee4a7ad16ea26bd174ab92c9e4103d389bf3","typeString":"literal_string \"0.14.0\""},"value":"0.14.0"},"visibility":"public"}],"scope":4122,"src":"64:417:26","usedErrors":[]}],"src":"39:443:26"},"id":26},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[4135]},"id":4136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4123,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"117:189:27","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":4135,"linearizedBaseContracts":[4135],"name":"IERC1271","nameLocation":"317:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"332:220:27","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":4134,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:27","nodeType":"FunctionDefinition","parameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"hash","nameLocation":"591:4:27","nodeType":"VariableDeclaration","scope":4134,"src":"583:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"signature","nameLocation":"610:9:27","nodeType":"VariableDeclaration","scope":4134,"src":"597:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4128,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:27"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:27","nodeType":"VariableDeclaration","scope":4134,"src":"644:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4131,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:27"},"scope":4135,"src":"557:106:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4136,"src":"307:358:27","usedErrors":[]}],"src":"92:574:27"},"id":27},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4465]},"id":4466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4137,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"126:67:28","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4465,"linearizedBaseContracts":[4465],"name":"Address","nameLocation":"202:7:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":4152,"nodeType":"Block","src":"1478:254:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4146,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1702:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:28","memberName":"code","nodeType":"MemberAccess","src":"1702:12:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:28","memberName":"length","nodeType":"MemberAccess","src":"1702:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4145,"id":4151,"nodeType":"Return","src":"1695:30:28"}]},"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"216:1191:28","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":4153,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:28","nodeType":"FunctionDefinition","parameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"account","nameLocation":"1440:7:28","nodeType":"VariableDeclaration","scope":4153,"src":"1432:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:28"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4153,"src":"1472:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4143,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:28"},"scope":4465,"src":"1412:320:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"2718:241:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4164,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4465","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4465","typeString":"library Address"}],"id":4163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4162,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:28","typeDescriptions":{}}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:28","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4167,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2761:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":4161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4171,"nodeType":"ExpressionStatement","src":"2728:73:28"},{"assignments":[4173,null],"declarations":[{"constant":false,"id":4173,"mutability":"mutable","name":"success","nameLocation":"2818:7:28","nodeType":"VariableDeclaration","scope":4186,"src":"2813:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4172,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4180,"initialValue":{"arguments":[{"hexValue":"","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4174,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"2831:9:28","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:28","memberName":"call","nodeType":"MemberAccess","src":"2831:14:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2853:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:28"},{"expression":{"arguments":[{"id":4182,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2882:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":4181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4185,"nodeType":"ExpressionStatement","src":"2874:78:28"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"1738:904:28","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:28","nodeType":"FunctionDefinition","parameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:28","nodeType":"VariableDeclaration","scope":4187,"src":"2666:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:28","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"amount","nameLocation":"2701:6:28","nodeType":"VariableDeclaration","scope":4187,"src":"2693:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:28"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[],"src":"2718:0:28"},"scope":4465,"src":"2647:312:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4204,"nodeType":"Block","src":"3790:96:28","statements":[{"expression":{"arguments":[{"id":4198,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"3829:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4199,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3837:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":4197,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4245,4289],"referencedDeclaration":4289,"src":"3807:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4196,"id":4203,"nodeType":"Return","src":"3800:79:28"}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"2965:731:28","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:28","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"target","nameLocation":"3731:6:28","nodeType":"VariableDeclaration","scope":4205,"src":"3723:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4189,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"data","nameLocation":"3752:4:28","nodeType":"VariableDeclaration","scope":4205,"src":"3739:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4191,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:28"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"3776:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4194,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:28"},"scope":4465,"src":"3701:185:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4224,"nodeType":"Block","src":"4255:76:28","statements":[{"expression":{"arguments":[{"id":4218,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"4294:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4219,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"4302:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4221,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4311:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4217,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4245,4289],"referencedDeclaration":4289,"src":"4272:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4216,"id":4223,"nodeType":"Return","src":"4265:59:28"}]},"documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"3892:211:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4225,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:28","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"target","nameLocation":"4147:6:28","nodeType":"VariableDeclaration","scope":4225,"src":"4139:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4207,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"data","nameLocation":"4176:4:28","nodeType":"VariableDeclaration","scope":4225,"src":"4163:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4209,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:28","nodeType":"VariableDeclaration","scope":4225,"src":"4190:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4211,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:28"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4225,"src":"4241:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4214,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:28"},"scope":4465,"src":"4108:223:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4244,"nodeType":"Block","src":"4806:111:28","statements":[{"expression":{"arguments":[{"id":4238,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"4845:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4239,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4853:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4859:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":4237,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4245,4289],"referencedDeclaration":4289,"src":"4823:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4236,"id":4243,"nodeType":"Return","src":"4816:94:28"}]},"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"4337:351:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":4245,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:28","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"target","nameLocation":"4732:6:28","nodeType":"VariableDeclaration","scope":4245,"src":"4724:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"data","nameLocation":"4753:4:28","nodeType":"VariableDeclaration","scope":4245,"src":"4740:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4229,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"value","nameLocation":"4767:5:28","nodeType":"VariableDeclaration","scope":4245,"src":"4759:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:28"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4245,"src":"4792:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4234,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:28"},"scope":4465,"src":"4693:224:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4288,"nodeType":"Block","src":"5344:267:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4465","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4465","typeString":"library Address"}],"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:28","typeDescriptions":{}}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:28","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5387:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":4259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4269,"nodeType":"ExpressionStatement","src":"5354:81:28"},{"assignments":[4271,4273],"declarations":[{"constant":false,"id":4271,"mutability":"mutable","name":"success","nameLocation":"5451:7:28","nodeType":"VariableDeclaration","scope":4288,"src":"5446:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4270,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:28","nodeType":"VariableDeclaration","scope":4288,"src":"5460:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4272,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4280,"initialValue":{"arguments":[{"id":4278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"5513:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4274,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"5487:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:28","memberName":"call","nodeType":"MemberAccess","src":"5487:11:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5506:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:28"},{"expression":{"arguments":[{"id":4282,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"5562:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4283,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"5570:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4284,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5579:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4285,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"5591:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4281,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"5535:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4258,"id":4287,"nodeType":"Return","src":"5528:76:28"}]},"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"4923:237:28","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4289,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:28","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"target","nameLocation":"5213:6:28","nodeType":"VariableDeclaration","scope":4289,"src":"5205:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"data","nameLocation":"5242:4:28","nodeType":"VariableDeclaration","scope":4289,"src":"5229:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4249,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"value","nameLocation":"5264:5:28","nodeType":"VariableDeclaration","scope":4289,"src":"5256:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:28","nodeType":"VariableDeclaration","scope":4289,"src":"5279:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4253,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:28"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4289,"src":"5330:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4256,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:28"},"scope":4465,"src":"5165:446:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"5888:97:28","statements":[{"expression":{"arguments":[{"id":4300,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"5924:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4301,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"5932:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":4299,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[4306,4335],"referencedDeclaration":4335,"src":"5905:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4298,"id":4304,"nodeType":"Return","src":"5898:80:28"}]},"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"5617:166:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:28","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"target","nameLocation":"5824:6:28","nodeType":"VariableDeclaration","scope":4306,"src":"5816:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"data","nameLocation":"5845:4:28","nodeType":"VariableDeclaration","scope":4306,"src":"5832:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4293,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:28"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4306,"src":"5874:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4296,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:28"},"scope":4465,"src":"5788:197:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"6327:168:28","statements":[{"assignments":[4319,4321],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"success","nameLocation":"6343:7:28","nodeType":"VariableDeclaration","scope":4334,"src":"6338:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4318,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:28","nodeType":"VariableDeclaration","scope":4334,"src":"6352:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4320,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4326,"initialValue":{"arguments":[{"id":4324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"6397:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4322,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6379:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:28","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:28","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:28"},{"expression":{"arguments":[{"id":4328,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"6446:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4329,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"6454:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4330,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"6463:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4331,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"6475:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4327,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6419:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4317,"id":4333,"nodeType":"Return","src":"6412:76:28"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"5991:173:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:28","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"target","nameLocation":"6214:6:28","nodeType":"VariableDeclaration","scope":4335,"src":"6206:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"data","nameLocation":"6243:4:28","nodeType":"VariableDeclaration","scope":4335,"src":"6230:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4310,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:28","nodeType":"VariableDeclaration","scope":4335,"src":"6257:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4312,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:28"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"6313:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4315,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:28"},"scope":4465,"src":"6169:326:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"6771:101:28","statements":[{"expression":{"arguments":[{"id":4346,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6809:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4347,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6817:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":4345,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[4352,4381],"referencedDeclaration":4381,"src":"6788:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4344,"id":4350,"nodeType":"Return","src":"6781:84:28"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"6501:168:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:28","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"target","nameLocation":"6712:6:28","nodeType":"VariableDeclaration","scope":4352,"src":"6704:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4337,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"data","nameLocation":"6733:4:28","nodeType":"VariableDeclaration","scope":4352,"src":"6720:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4339,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:28"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4352,"src":"6757:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4342,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:28"},"scope":4465,"src":"6674:198:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"7213:170:28","statements":[{"assignments":[4365,4367],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"success","nameLocation":"7229:7:28","nodeType":"VariableDeclaration","scope":4380,"src":"7224:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4364,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:28","nodeType":"VariableDeclaration","scope":4380,"src":"7238:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4366,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4372,"initialValue":{"arguments":[{"id":4370,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"7285:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4368,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"7265:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:28","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:28","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:28"},{"expression":{"arguments":[{"id":4374,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"7334:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4375,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"7342:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4376,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"7351:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4377,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"7363:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4373,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"7307:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4363,"id":4379,"nodeType":"Return","src":"7300:76:28"}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"6878:175:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:28","nodeType":"FunctionDefinition","parameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"target","nameLocation":"7105:6:28","nodeType":"VariableDeclaration","scope":4381,"src":"7097:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4354,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"data","nameLocation":"7134:4:28","nodeType":"VariableDeclaration","scope":4381,"src":"7121:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4356,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:28","nodeType":"VariableDeclaration","scope":4381,"src":"7148:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4358,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:28"},"returnParameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"7199:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4361,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:28"},"scope":4465,"src":"7058:325:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4419,"nodeType":"Block","src":"7865:434:28","statements":[{"condition":{"id":4395,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"7879:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4417,"nodeType":"Block","src":"8235:58:28","statements":[{"expression":{"arguments":[{"id":4413,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8257:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4414,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"8269:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4412,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"8249:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4416,"nodeType":"ExpressionStatement","src":"8249:33:28"}]},"id":4418,"nodeType":"IfStatement","src":"7875:418:28","trueBody":{"id":4411,"nodeType":"Block","src":"7888:341:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4396,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"7906:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:28","memberName":"length","nodeType":"MemberAccess","src":"7906:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4408,"nodeType":"IfStatement","src":"7902:286:28","trueBody":{"id":4407,"nodeType":"Block","src":"7930:258:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":4402,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"8132:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4401,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"8121:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":4400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4406,"nodeType":"ExpressionStatement","src":"8113:60:28"}]}},{"expression":{"id":4409,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"8208:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4394,"id":4410,"nodeType":"Return","src":"8201:17:28"}]}}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"7389:277:28","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":4420,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:28","nodeType":"FunctionDefinition","parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"target","nameLocation":"7724:6:28","nodeType":"VariableDeclaration","scope":4420,"src":"7716:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4383,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"success","nameLocation":"7745:7:28","nodeType":"VariableDeclaration","scope":4420,"src":"7740:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4385,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:28","nodeType":"VariableDeclaration","scope":4420,"src":"7762:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4387,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:28","nodeType":"VariableDeclaration","scope":4420,"src":"7795:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4389,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:28"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4420,"src":"7851:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4392,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:28"},"scope":4465,"src":"7671:628:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"8680:135:28","statements":[{"condition":{"id":4432,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"8694:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4441,"nodeType":"Block","src":"8751:58:28","statements":[{"expression":{"arguments":[{"id":4437,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"8773:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4438,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"8785:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4436,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"8765:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4440,"nodeType":"ExpressionStatement","src":"8765:33:28"}]},"id":4442,"nodeType":"IfStatement","src":"8690:119:28","trueBody":{"id":4435,"nodeType":"Block","src":"8703:42:28","statements":[{"expression":{"id":4433,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"8724:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4431,"id":4434,"nodeType":"Return","src":"8717:17:28"}]}}]},"documentation":{"id":4421,"nodeType":"StructuredDocumentation","src":"8305:210:28","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:28","nodeType":"FunctionDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"success","nameLocation":"8560:7:28","nodeType":"VariableDeclaration","scope":4444,"src":"8555:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4422,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4425,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:28","nodeType":"VariableDeclaration","scope":4444,"src":"8577:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4424,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4427,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:28","nodeType":"VariableDeclaration","scope":4444,"src":"8610:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4426,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:28"},"returnParameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4444,"src":"8666:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4429,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:28"},"scope":4465,"src":"8520:295:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"8904:457:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4451,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8980:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:28","memberName":"length","nodeType":"MemberAccess","src":"8980:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4461,"nodeType":"Block","src":"9310:45:28","statements":[{"expression":{"arguments":[{"id":4458,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"9331:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4457,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:28","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4460,"nodeType":"ExpressionStatement","src":"9324:20:28"}]},"id":4462,"nodeType":"IfStatement","src":"8976:379:28","trueBody":{"id":4456,"nodeType":"Block","src":"9003:301:28","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:28","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:28"},"nodeType":"YulFunctionCall","src":"9202:17:28"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:28","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:28"},"nodeType":"YulFunctionCall","src":"9243:19:28"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:28"},"nodeType":"YulFunctionCall","src":"9236:44:28"},"nodeType":"YulExpressionStatement","src":"9236:44:28"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4446,"isOffset":false,"isSlot":false,"src":"9208:10:28","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"9251:10:28","valueSize":1}],"id":4455,"nodeType":"InlineAssembly","src":"9152:142:28"}]}}]},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:28","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:28","nodeType":"VariableDeclaration","scope":4464,"src":"8838:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4445,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:28","nodeType":"VariableDeclaration","scope":4464,"src":"8863:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4447,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:28"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[],"src":"8904:0:28"},"scope":4465,"src":"8821:540:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4466,"src":"194:9169:28","usedErrors":[]}],"src":"101:9263:28"},"id":28},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[4546]},"id":4547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4467,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"126:367:29","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":4546,"linearizedBaseContracts":[4546],"name":"Create2","nameLocation":"502:7:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":4510,"nodeType":"Block","src":"1182:383:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4483,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1208:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$4546","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$4546","typeString":"library Create2"}],"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1200:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4481,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:29","typeDescriptions":{}}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1200:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:7:29","memberName":"balance","nodeType":"MemberAccess","src":"1200:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4486,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"1225:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1200:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:31:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""},"value":"Create2: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""}],"id":4480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1192:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:73:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"1192:73:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4492,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"1283:8:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:6:29","memberName":"length","nodeType":"MemberAccess","src":"1283:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""},"value":"Create2: bytecode length is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""}],"id":4491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:65:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4498,"nodeType":"ExpressionStatement","src":"1275:65:29"},{"AST":{"nodeType":"YulBlock","src":"1402:91:29","statements":[{"nodeType":"YulAssignment","src":"1416:67:29","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1432:6:29"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1444:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:29"},"nodeType":"YulFunctionCall","src":"1440:19:29"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1467:8:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1461:5:29"},"nodeType":"YulFunctionCall","src":"1461:15:29"},{"name":"salt","nodeType":"YulIdentifier","src":"1478:4:29"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1424:7:29"},"nodeType":"YulFunctionCall","src":"1424:59:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1416:4:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4478,"isOffset":false,"isSlot":false,"src":"1416:4:29","valueSize":1},{"declaration":4471,"isOffset":false,"isSlot":false,"src":"1432:6:29","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"1444:8:29","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"1467:8:29","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"1478:4:29","valueSize":1}],"id":4499,"nodeType":"InlineAssembly","src":"1393:100:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"1510:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1526:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1518:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4502,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:29","typeDescriptions":{}}},"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1510:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:27:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""},"value":"Create2: Failed on deploy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""}],"id":4500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1502:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:56:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4509,"nodeType":"ExpressionStatement","src":"1502:56:29"}]},"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"516:560:29","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1090:6:29","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4471,"mutability":"mutable","name":"amount","nameLocation":"1105:6:29","nodeType":"VariableDeclaration","scope":4511,"src":"1097:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"salt","nameLocation":"1121:4:29","nodeType":"VariableDeclaration","scope":4511,"src":"1113:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"bytecode","nameLocation":"1140:8:29","nodeType":"VariableDeclaration","scope":4511,"src":"1127:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4474,"name":"bytes","nodeType":"ElementaryTypeName","src":"1127:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1096:53:29"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"addr","nameLocation":"1176:4:29","nodeType":"VariableDeclaration","scope":4511,"src":"1168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4477,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1167:14:29"},"scope":4546,"src":"1081:484:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4530,"nodeType":"Block","src":"1861:73:29","statements":[{"expression":{"arguments":[{"id":4522,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1893:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4523,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"1899:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4526,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1921:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$4546","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$4546","typeString":"library Create2"}],"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1913:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:29","typeDescriptions":{}}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4521,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[4531,4545],"referencedDeclaration":4545,"src":"1878:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4520,"id":4529,"nodeType":"Return","src":"1871:56:29"}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"1571:193:29","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1778:14:29","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"salt","nameLocation":"1801:4:29","nodeType":"VariableDeclaration","scope":4531,"src":"1793:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"bytecodeHash","nameLocation":"1815:12:29","nodeType":"VariableDeclaration","scope":4531,"src":"1807:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1792:36:29"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"1852:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1851:9:29"},"scope":4546,"src":"1769:165:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4544,"nodeType":"Block","src":"2292:1657:29","statements":[{"AST":{"nodeType":"YulBlock","src":"2354:1589:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2368:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2385:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:29"},"nodeType":"YulFunctionCall","src":"2379:11:29"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2372:3:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3592:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"3597:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:29"},"nodeType":"YulFunctionCall","src":"3588:14:29"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"3604:12:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3581:6:29"},"nodeType":"YulFunctionCall","src":"3581:36:29"},"nodeType":"YulExpressionStatement","src":"3581:36:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3641:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:29"},"nodeType":"YulFunctionCall","src":"3637:14:29"},{"name":"salt","nodeType":"YulIdentifier","src":"3653:4:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3630:6:29"},"nodeType":"YulFunctionCall","src":"3630:28:29"},"nodeType":"YulExpressionStatement","src":"3630:28:29"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3678:3:29"},{"name":"deployer","nodeType":"YulIdentifier","src":"3683:8:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3671:6:29"},"nodeType":"YulFunctionCall","src":"3671:21:29"},"nodeType":"YulExpressionStatement","src":"3671:21:29"},{"nodeType":"YulVariableDeclaration","src":"3754:27:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3771:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"3776:4:29","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:29"},"nodeType":"YulFunctionCall","src":"3767:14:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3758:5:29","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3880:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3887:4:29","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3872:7:29"},"nodeType":"YulFunctionCall","src":"3872:20:29"},"nodeType":"YulExpressionStatement","src":"3872:20:29"},{"nodeType":"YulAssignment","src":"3905:28:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3923:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:29","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3913:9:29"},"nodeType":"YulFunctionCall","src":"3913:20:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"3905:4:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4541,"isOffset":false,"isSlot":false,"src":"3905:4:29","valueSize":1},{"declaration":4536,"isOffset":false,"isSlot":false,"src":"3604:12:29","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"3683:8:29","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"3653:4:29","valueSize":1}],"id":4543,"nodeType":"InlineAssembly","src":"2345:1598:29"}]},"documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"1940:232:29","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":4545,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2186:14:29","nodeType":"FunctionDefinition","parameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"salt","nameLocation":"2209:4:29","nodeType":"VariableDeclaration","scope":4545,"src":"2201:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4536,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2223:12:29","nodeType":"VariableDeclaration","scope":4545,"src":"2215:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"deployer","nameLocation":"2245:8:29","nodeType":"VariableDeclaration","scope":4545,"src":"2237:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4537,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2200:54:29"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"addr","nameLocation":"2286:4:29","nodeType":"VariableDeclaration","scope":4545,"src":"2278:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4540,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2277:14:29"},"scope":4546,"src":"2177:1772:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4547,"src":"494:3457:29","usedErrors":[]}],"src":"101:3851:29"},"id":29},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6237],"SignedMath":[6342],"Strings":[4775]},"id":4776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4548,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4776,"sourceUnit":6238,"src":"126:25:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4776,"sourceUnit":6343,"src":"152:31:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"185:34:30","text":" @dev String operations."},"fullyImplemented":true,"id":4775,"linearizedBaseContracts":[4775],"name":"Strings","nameLocation":"228:7:30","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4554,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:30","nodeType":"VariableDeclaration","scope":4775,"src":"242:54:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4552,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:30","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4557,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:30","nodeType":"VariableDeclaration","scope":4775,"src":"302:43:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4555,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:30","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":4604,"nodeType":"Block","src":"518:625:30","statements":[{"id":4603,"nodeType":"UncheckedBlock","src":"528:609:30","statements":[{"assignments":[4566],"declarations":[{"constant":false,"id":4566,"mutability":"mutable","name":"length","nameLocation":"560:6:30","nodeType":"VariableDeclaration","scope":4603,"src":"552:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4573,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"580:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4567,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"569:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6237_$","typeString":"type(library Math)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:30","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6074,"src":"569:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:30"},{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"buffer","nameLocation":"618:6:30","nodeType":"VariableDeclaration","scope":4603,"src":"604:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4574,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4580,"initialValue":{"arguments":[{"id":4578,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"638:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4576,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:30"},{"assignments":[4582],"declarations":[{"constant":false,"id":4582,"mutability":"mutable","name":"ptr","nameLocation":"667:3:30","nodeType":"VariableDeclaration","scope":4603,"src":"659:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4583,"nodeType":"VariableDeclarationStatement","src":"659:11:30"},{"AST":{"nodeType":"YulBlock","src":"740:67:30","statements":[{"nodeType":"YulAssignment","src":"758:35:30","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:30","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:30"},"nodeType":"YulFunctionCall","src":"777:15:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:30"},"nodeType":"YulFunctionCall","src":"765:28:30"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:30"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4575,"isOffset":false,"isSlot":false,"src":"769:6:30","valueSize":1},{"declaration":4566,"isOffset":false,"isSlot":false,"src":"785:6:30","valueSize":1},{"declaration":4582,"isOffset":false,"isSlot":false,"src":"758:3:30","valueSize":1}],"id":4584,"nodeType":"InlineAssembly","src":"731:76:30"},{"body":{"id":4599,"nodeType":"Block","src":"833:267:30","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:30","subExpression":{"id":4586,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"851:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"851:5:30"},{"AST":{"nodeType":"YulBlock","src":"934:84:30","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:30","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:30"},"nodeType":"YulFunctionCall","src":"974:14:30"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:30"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:30"},"nodeType":"YulFunctionCall","src":"969:30:30"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:30"},"nodeType":"YulFunctionCall","src":"956:44:30"},"nodeType":"YulExpressionStatement","src":"956:44:30"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4554,"isOffset":false,"isSlot":false,"src":"990:8:30","valueSize":1},{"declaration":4582,"isOffset":false,"isSlot":false,"src":"964:3:30","valueSize":1},{"declaration":4560,"isOffset":false,"isSlot":false,"src":"978:5:30","valueSize":1}],"id":4589,"nodeType":"InlineAssembly","src":"925:93:30"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"1035:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"1035:11:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"1068:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"nodeType":"IfStatement","src":"1064:21:30","trueBody":{"id":4597,"nodeType":"Break","src":"1080:5:30"}}]},"condition":{"hexValue":"74727565","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4600,"nodeType":"WhileStatement","src":"820:280:30"},{"expression":{"id":4601,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1120:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4564,"id":4602,"nodeType":"Return","src":"1113:13:30"}]}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"352:90:30","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4605,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:30","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"value","nameLocation":"473:5:30","nodeType":"VariableDeclaration","scope":4605,"src":"465:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:30"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4605,"src":"503:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4562,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:30"},"scope":4775,"src":"447:696:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4632,"nodeType":"Block","src":"1313:103:30","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"1354:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:30","trueExpression":{"hexValue":"2d","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"1400:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4624,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"1385:10:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6342_$","typeString":"type(library SignedMath)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:30","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"1385:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4623,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[4605,4633],"referencedDeclaration":4605,"src":"1376:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4615,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4613,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:30","typeDescriptions":{}}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4612,"id":4631,"nodeType":"Return","src":"1323:86:30"}]},"documentation":{"id":4606,"nodeType":"StructuredDocumentation","src":"1149:89:30","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:30","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"value","nameLocation":"1268:5:30","nodeType":"VariableDeclaration","scope":4633,"src":"1261:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4607,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:30"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"1298:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4610,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:30"},"scope":4775,"src":"1243:173:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"1595:100:30","statements":[{"id":4651,"nodeType":"UncheckedBlock","src":"1605:84:30","statements":[{"expression":{"arguments":[{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1648:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1667:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4643,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"1655:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6237_$","typeString":"type(library Math)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:30","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6197,"src":"1655:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4641,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4653,4729,4749],"referencedDeclaration":4729,"src":"1636:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4640,"id":4650,"nodeType":"Return","src":"1629:49:30"}]}]},"documentation":{"id":4634,"nodeType":"StructuredDocumentation","src":"1422:94:30","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:30","nodeType":"FunctionDefinition","parameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"value","nameLocation":"1550:5:30","nodeType":"VariableDeclaration","scope":4653,"src":"1542:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:30"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4653,"src":"1580:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4638,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:30"},"scope":4775,"src":"1521:174:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"1908:347:30","statements":[{"assignments":[4664],"declarations":[{"constant":false,"id":4664,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:30","nodeType":"VariableDeclaration","scope":4728,"src":"1918:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4663,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4673,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4668,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"1954:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4665,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:30"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4674,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"1975:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4676,"indexExpression":{"hexValue":"30","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4679,"nodeType":"ExpressionStatement","src":"1975:15:30"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4680,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"2000:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4682,"indexExpression":{"hexValue":"31","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4685,"nodeType":"ExpressionStatement","src":"2000:15:30"},{"body":{"id":4714,"nodeType":"Block","src":"2070:83:30","statements":[{"expression":{"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4700,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"2084:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4702,"indexExpression":{"id":4701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"2091:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4703,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"2096:8:30","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4707,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"2105:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4709,"nodeType":"ExpressionStatement","src":"2084:33:30"},{"expression":{"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"2131:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4713,"nodeType":"ExpressionStatement","src":"2131:11:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"2058:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"initializationExpression":{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"i","nameLocation":"2038:1:30","nodeType":"VariableDeclaration","scope":4715,"src":"2030:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4689,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"2046:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:30"},"loopExpression":{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:30","subExpression":{"id":4697,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"2067:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"2065:3:30"},"nodeType":"ForStatement","src":"2025:128:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"2170:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"ExpressionStatement","src":"2162:55:30"},{"expression":{"arguments":[{"id":4725,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"2241:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4723,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:30","typeDescriptions":{}}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4662,"id":4727,"nodeType":"Return","src":"2227:21:30"}]},"documentation":{"id":4654,"nodeType":"StructuredDocumentation","src":"1701:112:30","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:30","nodeType":"FunctionDefinition","parameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"value","nameLocation":"1847:5:30","nodeType":"VariableDeclaration","scope":4729,"src":"1839:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"length","nameLocation":"1862:6:30","nodeType":"VariableDeclaration","scope":4729,"src":"1854:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:30"},"returnParameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4729,"src":"1893:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4660,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:30"},"scope":4775,"src":"1818:437:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4748,"nodeType":"Block","src":"2480:76:30","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4742,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"2525:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4740,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:30","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:30","typeDescriptions":{}}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4745,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2533:15:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4737,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4653,4729,4749],"referencedDeclaration":4729,"src":"2497:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4736,"id":4747,"nodeType":"Return","src":"2490:59:30"}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"2261:141:30","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4749,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:30","nodeType":"FunctionDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"addr","nameLocation":"2436:4:30","nodeType":"VariableDeclaration","scope":4749,"src":"2428:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:30"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4749,"src":"2465:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4734,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:30"},"scope":4775,"src":"2407:149:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"2711:66:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"2744:1:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4760,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:30","typeDescriptions":{}}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4759,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4768,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2767:1:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4766,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:30","typeDescriptions":{}}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4765,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4758,"id":4772,"nodeType":"Return","src":"2721:49:30"}]},"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"2562:66:30","text":" @dev Returns true if the two strings are equal."},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:30","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"a","nameLocation":"2662:1:30","nodeType":"VariableDeclaration","scope":4774,"src":"2648:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4751,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4754,"mutability":"mutable","name":"b","nameLocation":"2679:1:30","nodeType":"VariableDeclaration","scope":4774,"src":"2665:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4753,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:30"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"2705:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4756,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:30"},"scope":4775,"src":"2633:144:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4776,"src":"220:2559:30","usedErrors":[]}],"src":"101:2679:30"},"id":30},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5141],"Math":[6237],"SignedMath":[6342],"Strings":[4775]},"id":5142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4777,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:31"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5142,"sourceUnit":4776,"src":"137:24:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"163:205:31","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5141,"linearizedBaseContracts":[5141],"name":"ECDSA","nameLocation":"377:5:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4785,"members":[{"id":4780,"name":"NoError","nameLocation":"417:7:31","nodeType":"EnumValue","src":"417:7:31"},{"id":4781,"name":"InvalidSignature","nameLocation":"434:16:31","nodeType":"EnumValue","src":"434:16:31"},{"id":4782,"name":"InvalidSignatureLength","nameLocation":"460:22:31","nodeType":"EnumValue","src":"460:22:31"},{"id":4783,"name":"InvalidSignatureS","nameLocation":"492:17:31","nodeType":"EnumValue","src":"492:17:31"},{"id":4784,"name":"InvalidSignatureV","nameLocation":"519:17:31","nodeType":"EnumValue","src":"519:17:31"}],"name":"RecoverError","nameLocation":"394:12:31","nodeType":"EnumDefinition","src":"389:175:31"},{"body":{"id":4828,"nodeType":"Block","src":"624:457:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"638:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4792,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"647:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:31","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4780,"src":"647:20:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"734:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4798,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"743:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:31","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4781,"src":"743:29:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"843:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4807,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"852:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:31","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4782,"src":"852:35:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"965:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4816,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"974:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:31","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4783,"src":"974:30:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4824,"nodeType":"IfStatement","src":"961:114:31","trueBody":{"id":4823,"nodeType":"Block","src":"1006:69:31","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":4819,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:31","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4822,"nodeType":"ExpressionStatement","src":"1020:44:31"}]}},"id":4825,"nodeType":"IfStatement","src":"839:236:31","trueBody":{"id":4814,"nodeType":"Block","src":"889:66:31","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":4810,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:31","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4813,"nodeType":"ExpressionStatement","src":"903:41:31"}]}},"id":4826,"nodeType":"IfStatement","src":"730:345:31","trueBody":{"id":4805,"nodeType":"Block","src":"774:59:31","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":4801,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:31","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4804,"nodeType":"ExpressionStatement","src":"788:34:31"}]}},"id":4827,"nodeType":"IfStatement","src":"634:441:31","trueBody":{"id":4796,"nodeType":"Block","src":"669:55:31","statements":[{"functionReturnParameters":4790,"id":4795,"nodeType":"Return","src":"683:7:31"}]}}]},"id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:31","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"error","nameLocation":"604:5:31","nodeType":"VariableDeclaration","scope":4829,"src":"591:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4787,"nodeType":"UserDefinedTypeName","pathNode":{"id":4786,"name":"RecoverError","nameLocations":["591:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"591:12:31"},"referencedDeclaration":4785,"src":"591:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:31"},"returnParameters":{"id":4790,"nodeType":"ParameterList","parameters":[],"src":"624:0:31"},"scope":5141,"src":"570:511:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4874,"nodeType":"Block","src":"2249:626:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4842,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2263:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:31","memberName":"length","nodeType":"MemberAccess","src":"2263:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:31","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4872,"nodeType":"Block","src":"2788:81:31","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4864,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:31","typeDescriptions":{}}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4868,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"2822:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:31","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4782,"src":"2822:35:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"id":4870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4841,"id":4871,"nodeType":"Return","src":"2802:56:31"}]},"id":4873,"nodeType":"IfStatement","src":"2259:610:31","trueBody":{"id":4863,"nodeType":"Block","src":"2287:495:31","statements":[{"assignments":[4847],"declarations":[{"constant":false,"id":4847,"mutability":"mutable","name":"r","nameLocation":"2309:1:31","nodeType":"VariableDeclaration","scope":4863,"src":"2301:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4848,"nodeType":"VariableDeclarationStatement","src":"2301:9:31"},{"assignments":[4850],"declarations":[{"constant":false,"id":4850,"mutability":"mutable","name":"s","nameLocation":"2332:1:31","nodeType":"VariableDeclaration","scope":4863,"src":"2324:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4851,"nodeType":"VariableDeclarationStatement","src":"2324:9:31"},{"assignments":[4853],"declarations":[{"constant":false,"id":4853,"mutability":"mutable","name":"v","nameLocation":"2353:1:31","nodeType":"VariableDeclaration","scope":4863,"src":"2347:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4852,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4854,"nodeType":"VariableDeclarationStatement","src":"2347:7:31"},{"AST":{"nodeType":"YulBlock","src":"2555:171:31","statements":[{"nodeType":"YulAssignment","src":"2573:32:31","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:31"},"nodeType":"YulFunctionCall","src":"2584:20:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:31"},"nodeType":"YulFunctionCall","src":"2578:27:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:31"}]},{"nodeType":"YulAssignment","src":"2622:32:31","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:31","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:31"},"nodeType":"YulFunctionCall","src":"2633:20:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:31"},"nodeType":"YulFunctionCall","src":"2627:27:31"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:31"}]},{"nodeType":"YulAssignment","src":"2671:41:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:31","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:31","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:31"},"nodeType":"YulFunctionCall","src":"2690:20:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:31"},"nodeType":"YulFunctionCall","src":"2684:27:31"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:31"},"nodeType":"YulFunctionCall","src":"2676:36:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4847,"isOffset":false,"isSlot":false,"src":"2573:1:31","valueSize":1},{"declaration":4850,"isOffset":false,"isSlot":false,"src":"2622:1:31","valueSize":1},{"declaration":4834,"isOffset":false,"isSlot":false,"src":"2588:9:31","valueSize":1},{"declaration":4834,"isOffset":false,"isSlot":false,"src":"2637:9:31","valueSize":1},{"declaration":4834,"isOffset":false,"isSlot":false,"src":"2694:9:31","valueSize":1},{"declaration":4853,"isOffset":false,"isSlot":false,"src":"2671:1:31","valueSize":1}],"id":4855,"nodeType":"InlineAssembly","src":"2546:180:31"},{"expression":{"arguments":[{"id":4857,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"2757:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4858,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"2763:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4859,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2766:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2769:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4856,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4875,4949,5043],"referencedDeclaration":5043,"src":"2746:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4841,"id":4862,"nodeType":"Return","src":"2739:32:31"}]}}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"1087:1053:31","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:31","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"hash","nameLocation":"2173:4:31","nodeType":"VariableDeclaration","scope":4875,"src":"2165:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"signature","nameLocation":"2192:9:31","nodeType":"VariableDeclaration","scope":4875,"src":"2179:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:31"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"2226:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4836,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4875,"src":"2235:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4839,"nodeType":"UserDefinedTypeName","pathNode":{"id":4838,"name":"RecoverError","nameLocations":["2235:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"2235:12:31"},"referencedDeclaration":4785,"src":"2235:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:31"},"scope":5141,"src":"2145:730:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4901,"nodeType":"Block","src":"3748:140:31","statements":[{"assignments":[4886,4889],"declarations":[{"constant":false,"id":4886,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:31","nodeType":"VariableDeclaration","scope":4901,"src":"3759:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4885,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4889,"mutability":"mutable","name":"error","nameLocation":"3791:5:31","nodeType":"VariableDeclaration","scope":4901,"src":"3778:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4888,"nodeType":"UserDefinedTypeName","pathNode":{"id":4887,"name":"RecoverError","nameLocations":["3778:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"3778:12:31"},"referencedDeclaration":4785,"src":"3778:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4894,"initialValue":{"arguments":[{"id":4891,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"3811:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4892,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"3817:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4890,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4875,4949,5043],"referencedDeclaration":4875,"src":"3800:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:31"},{"expression":{"arguments":[{"id":4896,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"3849:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}],"id":4895,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"3837:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4785_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4898,"nodeType":"ExpressionStatement","src":"3837:18:31"},{"expression":{"id":4899,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"3872:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4884,"id":4900,"nodeType":"Return","src":"3865:16:31"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"2881:775:31","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:31","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"hash","nameLocation":"3686:4:31","nodeType":"VariableDeclaration","scope":4902,"src":"3678:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"signature","nameLocation":"3705:9:31","nodeType":"VariableDeclaration","scope":4902,"src":"3692:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:31"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"3739:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4882,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:31"},"scope":5141,"src":"3661:227:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"4245:203:31","statements":[{"assignments":[4918],"declarations":[{"constant":false,"id":4918,"mutability":"mutable","name":"s","nameLocation":"4263:1:31","nodeType":"VariableDeclaration","scope":4948,"src":"4255:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4925,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4267:2:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:31","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:31","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:31"},{"assignments":[4927],"declarations":[{"constant":false,"id":4927,"mutability":"mutable","name":"v","nameLocation":"4363:1:31","nodeType":"VariableDeclaration","scope":4948,"src":"4357:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4926,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4940,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4932,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"4382:2:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:31","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:31","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4928,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:31","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:31"},{"expression":{"arguments":[{"id":4942,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4427:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4943,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"4433:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4944,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"4436:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4945,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"4439:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4941,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4875,4949,5043],"referencedDeclaration":5043,"src":"4416:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4916,"id":4947,"nodeType":"Return","src":"4409:32:31"}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"3894:243:31","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:31","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"hash","nameLocation":"4170:4:31","nodeType":"VariableDeclaration","scope":4949,"src":"4162:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"r","nameLocation":"4184:1:31","nodeType":"VariableDeclaration","scope":4949,"src":"4176:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"vs","nameLocation":"4195:2:31","nodeType":"VariableDeclaration","scope":4949,"src":"4187:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:31"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"4222:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4911,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"4231:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4914,"nodeType":"UserDefinedTypeName","pathNode":{"id":4913,"name":"RecoverError","nameLocations":["4231:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"4231:12:31"},"referencedDeclaration":4785,"src":"4231:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:31"},"scope":5141,"src":"4142:306:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"4699:136:31","statements":[{"assignments":[4962,4965],"declarations":[{"constant":false,"id":4962,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:31","nodeType":"VariableDeclaration","scope":4978,"src":"4710:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"error","nameLocation":"4742:5:31","nodeType":"VariableDeclaration","scope":4978,"src":"4729:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4964,"nodeType":"UserDefinedTypeName","pathNode":{"id":4963,"name":"RecoverError","nameLocations":["4729:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"4729:12:31"},"referencedDeclaration":4785,"src":"4729:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4971,"initialValue":{"arguments":[{"id":4967,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"4762:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4968,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"4768:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4969,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"4771:2:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4966,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4875,4949,5043],"referencedDeclaration":4949,"src":"4751:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:31"},{"expression":{"arguments":[{"id":4973,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"4796:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}],"id":4972,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"4784:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4785_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4975,"nodeType":"ExpressionStatement","src":"4784:18:31"},{"expression":{"id":4976,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"4819:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4960,"id":4977,"nodeType":"Return","src":"4812:16:31"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"4454:154:31","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:31","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"hash","nameLocation":"4638:4:31","nodeType":"VariableDeclaration","scope":4979,"src":"4630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"r","nameLocation":"4652:1:31","nodeType":"VariableDeclaration","scope":4979,"src":"4644:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"vs","nameLocation":"4663:2:31","nodeType":"VariableDeclaration","scope":4979,"src":"4655:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:31"},"returnParameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4979,"src":"4690:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:31"},"scope":5141,"src":"4613:222:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5042,"nodeType":"Block","src":"5120:1345:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4998,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"6016:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:31","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:31","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5011,"nodeType":"IfStatement","src":"6004:161:31","trueBody":{"id":5010,"nodeType":"Block","src":"6089:76:31","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5002,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:31","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5006,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"6123:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:31","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4783,"src":"6123:30:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4995,"id":5009,"nodeType":"Return","src":"6103:51:31"}]}},{"assignments":[5013],"declarations":[{"constant":false,"id":5013,"mutability":"mutable","name":"signer","nameLocation":"6267:6:31","nodeType":"VariableDeclaration","scope":5042,"src":"6259:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5012,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5020,"initialValue":{"arguments":[{"id":5015,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"6286:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5016,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"6292:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5017,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"6295:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5018,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"6298:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5014,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:31","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:31"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6314:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:31","typeDescriptions":{}}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"IfStatement","src":"6310:101:31","trueBody":{"id":5035,"nodeType":"Block","src":"6336:75:31","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5027,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:31","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5031,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"6370:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:31","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4781,"src":"6370:29:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"id":5033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4995,"id":5034,"nodeType":"Return","src":"6350:50:31"}]}},{"expression":{"components":[{"id":5037,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6429:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5038,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"6437:12:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4785_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:31","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4780,"src":"6437:20:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"id":5040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4995,"id":5041,"nodeType":"Return","src":"6421:37:31"}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"4841:163:31","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":5043,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:31","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"hash","nameLocation":"5037:4:31","nodeType":"VariableDeclaration","scope":5043,"src":"5029:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"v","nameLocation":"5049:1:31","nodeType":"VariableDeclaration","scope":5043,"src":"5043:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4983,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"r","nameLocation":"5060:1:31","nodeType":"VariableDeclaration","scope":5043,"src":"5052:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"s","nameLocation":"5071:1:31","nodeType":"VariableDeclaration","scope":5043,"src":"5063:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:31"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5043,"src":"5097:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4990,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5043,"src":"5106:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4993,"nodeType":"UserDefinedTypeName","pathNode":{"id":4992,"name":"RecoverError","nameLocations":["5106:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"5106:12:31"},"referencedDeclaration":4785,"src":"5106:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:31"},"scope":5141,"src":"5009:1456:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"6692:138:31","statements":[{"assignments":[5058,5061],"declarations":[{"constant":false,"id":5058,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:31","nodeType":"VariableDeclaration","scope":5075,"src":"6703:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5057,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"error","nameLocation":"6735:5:31","nodeType":"VariableDeclaration","scope":5075,"src":"6722:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5060,"nodeType":"UserDefinedTypeName","pathNode":{"id":5059,"name":"RecoverError","nameLocations":["6722:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"6722:12:31"},"referencedDeclaration":4785,"src":"6722:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5068,"initialValue":{"arguments":[{"id":5063,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"6755:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5064,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"6761:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5065,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"6764:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5066,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6767:1:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5062,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4875,4949,5043],"referencedDeclaration":5043,"src":"6744:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4785_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:31"},{"expression":{"arguments":[{"id":5070,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6791:5:31","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4785","typeString":"enum ECDSA.RecoverError"}],"id":5069,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"6779:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4785_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5072,"nodeType":"ExpressionStatement","src":"6779:18:31"},{"expression":{"id":5073,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"6814:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5056,"id":5074,"nodeType":"Return","src":"6807:16:31"}]},"documentation":{"id":5044,"nodeType":"StructuredDocumentation","src":"6471:122:31","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:31","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"hash","nameLocation":"6623:4:31","nodeType":"VariableDeclaration","scope":5076,"src":"6615:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5048,"mutability":"mutable","name":"v","nameLocation":"6635:1:31","nodeType":"VariableDeclaration","scope":5076,"src":"6629:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5047,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"r","nameLocation":"6646:1:31","nodeType":"VariableDeclaration","scope":5076,"src":"6638:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"s","nameLocation":"6657:1:31","nodeType":"VariableDeclaration","scope":5076,"src":"6649:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:31"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"6683:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5054,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:31"},"scope":5141,"src":"6598:232:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"7206:310:31","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:31","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:31","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:31"},"nodeType":"YulFunctionCall","src":"7376:48:31"},"nodeType":"YulExpressionStatement","src":"7376:48:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:31","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:31"},"nodeType":"YulFunctionCall","src":"7437:18:31"},"nodeType":"YulExpressionStatement","src":"7437:18:31"},{"nodeType":"YulAssignment","src":"7468:32:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:31","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:31","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:31"},"nodeType":"YulFunctionCall","src":"7479:21:31"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5079,"isOffset":false,"isSlot":false,"src":"7450:4:31","valueSize":1},{"declaration":5082,"isOffset":false,"isSlot":false,"src":"7468:7:31","valueSize":1}],"id":5084,"nodeType":"InlineAssembly","src":"7353:157:31"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"6836:279:31","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:31","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"hash","nameLocation":"7160:4:31","nodeType":"VariableDeclaration","scope":5086,"src":"7152:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:31"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"message","nameLocation":"7197:7:31","nodeType":"VariableDeclaration","scope":5086,"src":"7189:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:31"},"scope":5141,"src":"7120:396:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5107,"nodeType":"Block","src":"7881:116:31","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":5100,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"7976:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:31","memberName":"length","nodeType":"MemberAccess","src":"7976:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5098,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"7959:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4775_$","typeString":"type(library Strings)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4605,"src":"7959:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5103,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"7987:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5095,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5094,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5093,"id":5106,"nodeType":"Return","src":"7891:99:31"}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"7522:274:31","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5108,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:31","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"s","nameLocation":"7846:1:31","nodeType":"VariableDeclaration","scope":5108,"src":"7833:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5088,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:31"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5108,"src":"7872:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:31"},"scope":5141,"src":"7801:196:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"8443:290:31","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:31","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:31"},"nodeType":"YulFunctionCall","src":"8530:11:31"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:31","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:31"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:31","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:31"},"nodeType":"YulFunctionCall","src":"8554:23:31"},"nodeType":"YulExpressionStatement","src":"8554:23:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:31","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:31"},"nodeType":"YulFunctionCall","src":"8597:14:31"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:31"},"nodeType":"YulFunctionCall","src":"8590:39:31"},"nodeType":"YulExpressionStatement","src":"8590:39:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:31","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:31"},"nodeType":"YulFunctionCall","src":"8649:14:31"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:31"},"nodeType":"YulFunctionCall","src":"8642:34:31"},"nodeType":"YulExpressionStatement","src":"8642:34:31"},{"nodeType":"YulAssignment","src":"8689:28:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:31","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:31"},"nodeType":"YulFunctionCall","src":"8697:20:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5116,"isOffset":false,"isSlot":false,"src":"8689:4:31","valueSize":1},{"declaration":5111,"isOffset":false,"isSlot":false,"src":"8613:15:31","valueSize":1},{"declaration":5113,"isOffset":false,"isSlot":false,"src":"8665:10:31","valueSize":1}],"id":5118,"nodeType":"InlineAssembly","src":"8496:231:31"}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"8003:328:31","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:31","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:31","nodeType":"VariableDeclaration","scope":5120,"src":"8361:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:31","nodeType":"VariableDeclaration","scope":5120,"src":"8386:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:31"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"data","nameLocation":"8437:4:31","nodeType":"VariableDeclaration","scope":5120,"src":"8429:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:31"},"scope":5141,"src":"8336:397:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5139,"nodeType":"Block","src":"9048:80:31","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5134,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"9104:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5135,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"9115:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5131,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5129,"id":5138,"nodeType":"Return","src":"9058:63:31"}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"8739:193:31","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":5140,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:31","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"validator","nameLocation":"8986:9:31","nodeType":"VariableDeclaration","scope":5140,"src":"8978:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"data","nameLocation":"9010:4:31","nodeType":"VariableDeclaration","scope":5140,"src":"8997:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5124,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:31"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5140,"src":"9039:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:31"},"scope":5141,"src":"8937:191:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5142,"src":"369:8761:31","usedErrors":[]}],"src":"112:9019:31"},"id":31},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5165],"IERC165":[5371]},"id":5166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5143,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:32"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5166,"sourceUnit":5372,"src":"124:23:32","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5146,"name":"IERC165","nameLocations":["754:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":5371,"src":"754:7:32"},"id":5147,"nodeType":"InheritanceSpecifier","src":"754:7:32"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5145,"nodeType":"StructuredDocumentation","src":"149:576:32","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":5165,"linearizedBaseContracts":[5165,5371],"name":"ERC165","nameLocation":"744:6:32","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5370],"body":{"id":5163,"nodeType":"Block","src":"920:64:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"937:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5158,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"957:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5371_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5371_$","typeString":"type(contract IERC165)"}],"id":5157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5371","typeString":"type(contract IERC165)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5155,"id":5162,"nodeType":"Return","src":"930:47:32"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"768:56:32","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5164,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:32","nodeType":"FunctionDefinition","overrides":{"id":5152,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:32"},"parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:32","nodeType":"VariableDeclaration","scope":5164,"src":"856:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5149,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:32"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5164,"src":"914:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5153,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:32"},"scope":5165,"src":"829:155:32","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5166,"src":"726:260:32","usedErrors":[]}],"src":"99:888:32"},"id":32},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[5359],"IERC165":[5371]},"id":5360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5167,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:33"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5360,"sourceUnit":5372,"src":"146:23:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"171:277:33","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":5359,"linearizedBaseContracts":[5359],"name":"ERC165Checker","nameLocation":"457:13:33","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5172,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:33","nodeType":"VariableDeclaration","scope":5359,"src":"551:58:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5170,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:33","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":5194,"nodeType":"Block","src":"774:357:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5181,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"1008:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":5183,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"1022:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5371_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5371_$","typeString":"type(contract IERC165)"}],"id":5182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5371","typeString":"type(contract IERC165)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1031:11:33","memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5180,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"975:32:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:68:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:33","subExpression":{"arguments":[{"id":5188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"1093:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5189,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"1102:21:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5187,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"1060:32:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:64:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5179,"id":5193,"nodeType":"Return","src":"956:168:33"}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"616:83:33","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:33","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"account","nameLocation":"736:7:33","nodeType":"VariableDeclaration","scope":5195,"src":"728:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5174,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:33"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5195,"src":"768:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5177,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:33"},"scope":5359,"src":"704:427:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5214,"nodeType":"Block","src":"1442:189:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5206,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"1558:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5205,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"1543:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":5209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"1603:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5210,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"1612:11:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5208,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"1570:32:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:54:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5204,"id":5213,"nodeType":"Return","src":"1536:88:33"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"1137:207:33","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":5215,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:33","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"account","nameLocation":"1384:7:33","nodeType":"VariableDeclaration","scope":5215,"src":"1376:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5197,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5200,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:33","nodeType":"VariableDeclaration","scope":5215,"src":"1393:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5199,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:33"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5215,"src":"1436:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5202,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:33"},"scope":5359,"src":"1349:282:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5270,"nodeType":"Block","src":"2155:560:33","statements":[{"assignments":[5231],"declarations":[{"constant":false,"id":5231,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:33","nodeType":"VariableDeclaration","scope":5270,"src":"2264:35:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5229,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"nodeType":"ArrayTypeName","src":"2264:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5238,"initialValue":{"arguments":[{"expression":{"id":5235,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2313:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:6:33","memberName":"length","nodeType":"MemberAccess","src":"2313:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:33","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":5232,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5233,"nodeType":"ArrayTypeName","src":"2306:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:33"},{"condition":{"arguments":[{"id":5240,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"2405:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5239,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"2390:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5267,"nodeType":"IfStatement","src":"2386:284:33","trueBody":{"id":5266,"nodeType":"Block","src":"2415:255:33","statements":[{"body":{"id":5264,"nodeType":"Block","src":"2542:118:33","statements":[{"expression":{"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5253,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2560:21:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5255,"indexExpression":{"id":5254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"2582:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5257,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"2620:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5258,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2629:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5260,"indexExpression":{"id":5259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"2642:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5256,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"2587:32:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5263,"nodeType":"ExpressionStatement","src":"2560:85:33"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"2512:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5247,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2516:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:33","memberName":"length","nodeType":"MemberAccess","src":"2516:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"initializationExpression":{"assignments":[5243],"declarations":[{"constant":false,"id":5243,"mutability":"mutable","name":"i","nameLocation":"2505:1:33","nodeType":"VariableDeclaration","scope":5265,"src":"2497:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5245,"initialValue":{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:33"},"loopExpression":{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:33","subExpression":{"id":5250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"2537:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"nodeType":"ExpressionStatement","src":"2537:3:33"},"nodeType":"ForStatement","src":"2492:168:33"}]}},{"expression":{"id":5268,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2687:21:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":5226,"id":5269,"nodeType":"Return","src":"2680:28:33"}]},"documentation":{"id":5216,"nodeType":"StructuredDocumentation","src":"1637:374:33","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":5271,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:33","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"account","nameLocation":"2065:7:33","nodeType":"VariableDeclaration","scope":5271,"src":"2057:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5217,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:33","nodeType":"VariableDeclaration","scope":5271,"src":"2082:28:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":5219,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":5220,"nodeType":"ArrayTypeName","src":"2082:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:33"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5271,"src":"2140:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5223,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"ArrayTypeName","src":"2140:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:33"},"scope":5359,"src":"2016:699:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5316,"nodeType":"Block","src":"3157:436:33","statements":[{"condition":{"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:33","subExpression":{"arguments":[{"id":5283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"3229:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5282,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"3214:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5289,"nodeType":"IfStatement","src":"3209:67:33","trueBody":{"id":5288,"nodeType":"Block","src":"3239:37:33","statements":[{"expression":{"hexValue":"66616c7365","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5281,"id":5287,"nodeType":"Return","src":"3253:12:33"}]}},{"body":{"id":5312,"nodeType":"Block","src":"3395:134:33","statements":[{"condition":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:33","subExpression":{"arguments":[{"id":5302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"3447:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5303,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"3456:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5305,"indexExpression":{"id":5304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"3469:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5301,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"3414:32:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5311,"nodeType":"IfStatement","src":"3409:110:33","trueBody":{"id":5310,"nodeType":"Block","src":"3474:45:33","statements":[{"expression":{"hexValue":"66616c7365","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5281,"id":5309,"nodeType":"Return","src":"3492:12:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"3365:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5295,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"3369:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3382:6:33","memberName":"length","nodeType":"MemberAccess","src":"3369:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5313,"initializationExpression":{"assignments":[5291],"declarations":[{"constant":false,"id":5291,"mutability":"mutable","name":"i","nameLocation":"3358:1:33","nodeType":"VariableDeclaration","scope":5313,"src":"3350:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5293,"initialValue":{"hexValue":"30","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:33"},"loopExpression":{"expression":{"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:33","subExpression":{"id":5298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"3390:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5300,"nodeType":"ExpressionStatement","src":"3390:3:33"},"nodeType":"ForStatement","src":"3345:184:33"},{"expression":{"hexValue":"74727565","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5281,"id":5315,"nodeType":"Return","src":"3575:11:33"}]},"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"2721:324:33","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":5317,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:33","nodeType":"FunctionDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"account","nameLocation":"3089:7:33","nodeType":"VariableDeclaration","scope":5317,"src":"3081:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5273,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5277,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:33","nodeType":"VariableDeclaration","scope":5317,"src":"3098:28:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":5275,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":5276,"nodeType":"ArrayTypeName","src":"3098:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:33"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5317,"src":"3151:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5279,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:33"},"scope":5359,"src":"3050:543:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"4529:539:33","statements":[{"assignments":[5328],"declarations":[{"constant":false,"id":5328,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:33","nodeType":"VariableDeclaration","scope":5357,"src":"4563:26:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5327,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5336,"initialValue":{"arguments":[{"expression":{"expression":{"id":5331,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"4615:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5371_$","typeString":"type(contract IERC165)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:17:33","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5370,"src":"4615:25:33","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:33","memberName":"selector","nodeType":"MemberAccess","src":"4615:34:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5334,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"4651:11:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":5329,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4596:18:33","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:33"},{"assignments":[5338],"declarations":[{"constant":false,"id":5338,"mutability":"mutable","name":"success","nameLocation":"4710:7:33","nodeType":"VariableDeclaration","scope":5357,"src":"4705:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5337,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5339,"nodeType":"VariableDeclarationStatement","src":"4705:12:33"},{"assignments":[5341],"declarations":[{"constant":false,"id":5341,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:33","nodeType":"VariableDeclaration","scope":5357,"src":"4727:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5342,"nodeType":"VariableDeclarationStatement","src":"4727:18:33"},{"assignments":[5344],"declarations":[{"constant":false,"id":5344,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:33","nodeType":"VariableDeclaration","scope":5357,"src":"4755:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5345,"nodeType":"VariableDeclarationStatement","src":"4755:19:33"},{"AST":{"nodeType":"YulBlock","src":"4793:203:33","statements":[{"nodeType":"YulAssignment","src":"4807:97:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:33","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:33"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:33"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:33"},"nodeType":"YulFunctionCall","src":"4845:24:33"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:33"},"nodeType":"YulFunctionCall","src":"4871:20:33"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:33","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:33","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:33"},"nodeType":"YulFunctionCall","src":"4818:86:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:33"}]},{"nodeType":"YulAssignment","src":"4917:30:33","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:33"},"nodeType":"YulFunctionCall","src":"4931:16:33"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:33"}]},{"nodeType":"YulAssignment","src":"4960:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:33","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:33"},"nodeType":"YulFunctionCall","src":"4975:11:33"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5320,"isOffset":false,"isSlot":false,"src":"4836:7:33","valueSize":1},{"declaration":5328,"isOffset":false,"isSlot":false,"src":"4849:13:33","valueSize":1},{"declaration":5328,"isOffset":false,"isSlot":false,"src":"4877:13:33","valueSize":1},{"declaration":5341,"isOffset":false,"isSlot":false,"src":"4917:10:33","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"4960:11:33","valueSize":1},{"declaration":5338,"isOffset":false,"isSlot":false,"src":"4807:7:33","valueSize":1}],"id":5346,"nodeType":"InlineAssembly","src":"4784:212:33"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"5013:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"5024:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"5046:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5326,"id":5356,"nodeType":"Return","src":"5006:55:33"}]},"documentation":{"id":5318,"nodeType":"StructuredDocumentation","src":"3599:817:33","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:33","nodeType":"FunctionDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"account","nameLocation":"4471:7:33","nodeType":"VariableDeclaration","scope":5358,"src":"4463:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5322,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:33","nodeType":"VariableDeclaration","scope":5358,"src":"4480:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5321,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:33"},"returnParameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"4523:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5324,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:33"},"scope":5359,"src":"4421:647:33","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5360,"src":"449:4621:33","usedErrors":[]}],"src":"121:4950:33"},"id":33},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5371]},"id":5372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5361,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:34"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5362,"nodeType":"StructuredDocumentation","src":"125:279:34","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5371,"linearizedBaseContracts":[5371],"name":"IERC165","nameLocation":"415:7:34","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5363,"nodeType":"StructuredDocumentation","src":"429:340:34","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5370,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:34","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:34","nodeType":"VariableDeclaration","scope":5370,"src":"801:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5364,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:34","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:34"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5370,"src":"844:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5367,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:34"},"scope":5371,"src":"774:76:34","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5372,"src":"405:447:34","usedErrors":[]}],"src":"100:753:34"},"id":34},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6237]},"id":6238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5373,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:35"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"128:73:35","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6237,"linearizedBaseContracts":[6237],"name":"Math","nameLocation":"210:4:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5378,"members":[{"id":5375,"name":"Down","nameLocation":"245:4:35","nodeType":"EnumValue","src":"245:4:35"},{"id":5376,"name":"Up","nameLocation":"287:2:35","nodeType":"EnumValue","src":"287:2:35"},{"id":5377,"name":"Zero","nameLocation":"318:4:35","nodeType":"EnumValue","src":"318:4:35"}],"name":"Rounding","nameLocation":"226:8:35","nodeType":"EnumDefinition","src":"221:122:35"},{"body":{"id":5395,"nodeType":"Block","src":"480:37:35","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"497:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"501:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"509:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:35","trueExpression":{"id":5391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"505:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5387,"id":5394,"nodeType":"Return","src":"490:20:35"}]},"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"349:59:35","text":" @dev Returns the largest of two numbers."},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:35","nodeType":"FunctionDefinition","parameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"a","nameLocation":"434:1:35","nodeType":"VariableDeclaration","scope":5396,"src":"426:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5380,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5383,"mutability":"mutable","name":"b","nameLocation":"445:1:35","nodeType":"VariableDeclaration","scope":5396,"src":"437:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:35"},"returnParameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"471:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:35"},"scope":6237,"src":"413:104:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5413,"nodeType":"Block","src":"655:37:35","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"672:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"676:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"684:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:35","trueExpression":{"id":5409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"680:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5405,"id":5412,"nodeType":"Return","src":"665:20:35"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"523:60:35","text":" @dev Returns the smallest of two numbers."},"id":5414,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:35","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"a","nameLocation":"609:1:35","nodeType":"VariableDeclaration","scope":5414,"src":"601:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"b","nameLocation":"620:1:35","nodeType":"VariableDeclaration","scope":5414,"src":"612:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:35"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5414,"src":"646:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:35"},"scope":6237,"src":"588:104:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5436,"nodeType":"Block","src":"876:82:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"931:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"935:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"941:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"945:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5423,"id":5435,"nodeType":"Return","src":"923:28:35"}]},"documentation":{"id":5415,"nodeType":"StructuredDocumentation","src":"698:102:35","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5437,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:35","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"a","nameLocation":"830:1:35","nodeType":"VariableDeclaration","scope":5437,"src":"822:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"b","nameLocation":"841:1:35","nodeType":"VariableDeclaration","scope":5437,"src":"833:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:35"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5437,"src":"867:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:35"},"scope":6237,"src":"805:153:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5461,"nodeType":"Block","src":"1228:123:35","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"1316:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"1330:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5455,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"1339:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:35","trueExpression":{"hexValue":"30","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5446,"id":5460,"nodeType":"Return","src":"1309:35:35"}]},"documentation":{"id":5438,"nodeType":"StructuredDocumentation","src":"964:188:35","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":5462,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:35","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"a","nameLocation":"1182:1:35","nodeType":"VariableDeclaration","scope":5462,"src":"1174:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5442,"mutability":"mutable","name":"b","nameLocation":"1193:1:35","nodeType":"VariableDeclaration","scope":5462,"src":"1185:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:35"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5462,"src":"1219:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:35"},"scope":6237,"src":"1157:194:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5584,"nodeType":"Block","src":"1765:4115:35","statements":[{"id":5583,"nodeType":"UncheckedBlock","src":"1775:4099:35","statements":[{"assignments":[5475],"declarations":[{"constant":false,"id":5475,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:35","nodeType":"VariableDeclaration","scope":5583,"src":"2096:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5476,"nodeType":"VariableDeclarationStatement","src":"2096:13:35"},{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:35","nodeType":"VariableDeclaration","scope":5583,"src":"2168:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5479,"nodeType":"VariableDeclarationStatement","src":"2168:13:35"},{"AST":{"nodeType":"YulBlock","src":"2248:157:35","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:35","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:35"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:35"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:35","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:35"},"nodeType":"YulFunctionCall","src":"2289:6:35"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:35"},"nodeType":"YulFunctionCall","src":"2276:20:35"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:35","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:35","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:35"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:35"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:35"},"nodeType":"YulFunctionCall","src":"2322:9:35"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:35"}]},{"nodeType":"YulAssignment","src":"2348:43:35","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:35"},"nodeType":"YulFunctionCall","src":"2361:14:35"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:35"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:35"},"nodeType":"YulFunctionCall","src":"2377:13:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:35"},"nodeType":"YulFunctionCall","src":"2357:34:35"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5475,"isOffset":false,"isSlot":false,"src":"2313:5:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"2369:5:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"2384:5:35","valueSize":1},{"declaration":5478,"isOffset":false,"isSlot":false,"src":"2348:5:35","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"2283:1:35","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"2326:1:35","valueSize":1},{"declaration":5467,"isOffset":false,"isSlot":false,"src":"2286:1:35","valueSize":1},{"declaration":5467,"isOffset":false,"isSlot":false,"src":"2329:1:35","valueSize":1}],"id":5480,"nodeType":"InlineAssembly","src":"2239:166:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2486:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5489,"nodeType":"IfStatement","src":"2482:368:35","trueBody":{"id":5488,"nodeType":"Block","src":"2498:352:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5484,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"2816:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5485,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"2824:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5473,"id":5487,"nodeType":"Return","src":"2809:26:35"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"2960:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5492,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2974:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":5490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"ExpressionStatement","src":"2952:53:35"},{"assignments":[5498],"declarations":[{"constant":false,"id":5498,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:35","nodeType":"VariableDeclaration","scope":5583,"src":"3261:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5499,"nodeType":"VariableDeclarationStatement","src":"3261:17:35"},{"AST":{"nodeType":"YulBlock","src":"3301:291:35","statements":[{"nodeType":"YulAssignment","src":"3370:38:35","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:35"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:35"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:35"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:35"},"nodeType":"YulFunctionCall","src":"3383:25:35"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:35"}]},{"nodeType":"YulAssignment","src":"3490:41:35","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:35"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:35"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:35"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:35"},"nodeType":"YulFunctionCall","src":"3510:20:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:35"},"nodeType":"YulFunctionCall","src":"3499:32:35"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:35"}]},{"nodeType":"YulAssignment","src":"3548:30:35","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:35"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:35"},"nodeType":"YulFunctionCall","src":"3557:21:35"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5469,"isOffset":false,"isSlot":false,"src":"3396:11:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"3524:5:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"3548:5:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"3561:5:35","valueSize":1},{"declaration":5478,"isOffset":false,"isSlot":false,"src":"3490:5:35","valueSize":1},{"declaration":5478,"isOffset":false,"isSlot":false,"src":"3503:5:35","valueSize":1},{"declaration":5498,"isOffset":false,"isSlot":false,"src":"3370:9:35","valueSize":1},{"declaration":5498,"isOffset":false,"isSlot":false,"src":"3513:9:35","valueSize":1},{"declaration":5498,"isOffset":false,"isSlot":false,"src":"3568:9:35","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"3390:1:35","valueSize":1},{"declaration":5467,"isOffset":false,"isSlot":false,"src":"3393:1:35","valueSize":1}],"id":5500,"nodeType":"InlineAssembly","src":"3292:300:35"},{"assignments":[5502],"declarations":[{"constant":false,"id":5502,"mutability":"mutable","name":"twos","nameLocation":"3907:4:35","nodeType":"VariableDeclaration","scope":5583,"src":"3899:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"3914:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:35","subExpression":{"id":5504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"3930:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:35"},{"AST":{"nodeType":"YulBlock","src":"3969:362:35","statements":[{"nodeType":"YulAssignment","src":"4034:37:35","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:35"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:35"},"nodeType":"YulFunctionCall","src":"4049:22:35"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:35"}]},{"nodeType":"YulAssignment","src":"4138:25:35","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:35"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:35"},"nodeType":"YulFunctionCall","src":"4147:16:35"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:35"}]},{"nodeType":"YulAssignment","src":"4278:39:35","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:35","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:35"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:35"},"nodeType":"YulFunctionCall","src":"4294:12:35"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:35"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:35"},"nodeType":"YulFunctionCall","src":"4290:23:35"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:35","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:35"},"nodeType":"YulFunctionCall","src":"4286:31:35"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5469,"isOffset":false,"isSlot":false,"src":"4034:11:35","valueSize":1},{"declaration":5469,"isOffset":false,"isSlot":false,"src":"4053:11:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"4138:5:35","valueSize":1},{"declaration":5475,"isOffset":false,"isSlot":false,"src":"4151:5:35","valueSize":1},{"declaration":5502,"isOffset":false,"isSlot":false,"src":"4066:4:35","valueSize":1},{"declaration":5502,"isOffset":false,"isSlot":false,"src":"4158:4:35","valueSize":1},{"declaration":5502,"isOffset":false,"isSlot":false,"src":"4278:4:35","valueSize":1},{"declaration":5502,"isOffset":false,"isSlot":false,"src":"4301:4:35","valueSize":1},{"declaration":5502,"isOffset":false,"isSlot":false,"src":"4308:4:35","valueSize":1}],"id":5511,"nodeType":"InlineAssembly","src":"3960:371:35"},{"expression":{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"4397:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"4406:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5514,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"4414:4:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5517,"nodeType":"ExpressionStatement","src":"4397:21:35"},{"assignments":[5519],"declarations":[{"constant":false,"id":5519,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:35","nodeType":"VariableDeclaration","scope":5583,"src":"4736:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5526,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5521,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"4759:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:35"},{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5527,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"4992:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5007:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5530,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5021:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ExpressionStatement","src":"4992:36:35"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5061:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5537,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5076:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5538,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5090:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"5061:36:35"},{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5131:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5146:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5546,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5160:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5550,"nodeType":"ExpressionStatement","src":"5131:36:35"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5201:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5216:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5554,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5230:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"5201:36:35"},{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5559,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5271:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5286:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5562,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5300:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5566,"nodeType":"ExpressionStatement","src":"5271:36:35"},{"expression":{"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5342:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"5357:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5570,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5371:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5574,"nodeType":"ExpressionStatement","src":"5342:36:35"},{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"5812:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"5821:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5577,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"5829:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"nodeType":"ExpressionStatement","src":"5812:24:35"},{"expression":{"id":5581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"5857:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5473,"id":5582,"nodeType":"Return","src":"5850:13:35"}]}]},"documentation":{"id":5463,"nodeType":"StructuredDocumentation","src":"1357:305:35","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":5585,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:35","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"x","nameLocation":"1691:1:35","nodeType":"VariableDeclaration","scope":5585,"src":"1683:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"y","nameLocation":"1702:1:35","nodeType":"VariableDeclaration","scope":5585,"src":"1694:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5469,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:35","nodeType":"VariableDeclaration","scope":5585,"src":"1705:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:35"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"result","nameLocation":"1757:6:35","nodeType":"VariableDeclaration","scope":5585,"src":"1749:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:35"},"scope":6237,"src":"1667:4213:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"6122:189:35","statements":[{"assignments":[5601],"declarations":[{"constant":false,"id":5601,"mutability":"mutable","name":"result","nameLocation":"6140:6:35","nodeType":"VariableDeclaration","scope":5628,"src":"6132:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5607,"initialValue":{"arguments":[{"id":5603,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"6156:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5604,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"6159:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6162:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5602,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5585,5629],"referencedDeclaration":5585,"src":"6149:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:35"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"6188:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5609,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"6200:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5378_$","typeString":"type(enum Math.Rounding)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:35","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5376,"src":"6200:11:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"src":"6188:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5613,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"6222:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5614,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"6225:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6228:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:35","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5625,"nodeType":"IfStatement","src":"6184:98:35","trueBody":{"id":5624,"nodeType":"Block","src":"6246:36:35","statements":[{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"6260:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ExpressionStatement","src":"6260:11:35"}]}},{"expression":{"id":5626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"6298:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5599,"id":5627,"nodeType":"Return","src":"6291:13:35"}]},"documentation":{"id":5586,"nodeType":"StructuredDocumentation","src":"5886:121:35","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:35","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"x","nameLocation":"6036:1:35","nodeType":"VariableDeclaration","scope":5629,"src":"6028:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5587,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5590,"mutability":"mutable","name":"y","nameLocation":"6047:1:35","nodeType":"VariableDeclaration","scope":5629,"src":"6039:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5592,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:35","nodeType":"VariableDeclaration","scope":5629,"src":"6050:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:35","nodeType":"VariableDeclaration","scope":5629,"src":"6071:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"typeName":{"id":5594,"nodeType":"UserDefinedTypeName","pathNode":{"id":5593,"name":"Rounding","nameLocations":["6071:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5378,"src":"6071:8:35"},"referencedDeclaration":5378,"src":"6071:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:35"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"6113:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:35"},"scope":6237,"src":"6012:299:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"6587:1585:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"6601:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"6597:45:35","trueBody":{"id":5642,"nodeType":"Block","src":"6609:33:35","statements":[{"expression":{"hexValue":"30","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5636,"id":5641,"nodeType":"Return","src":"6623:8:35"}]}},{"assignments":[5645],"declarations":[{"constant":false,"id":5645,"mutability":"mutable","name":"result","nameLocation":"7329:6:35","nodeType":"VariableDeclaration","scope":5740,"src":"7321:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7349:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5647,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5909,5945],"referencedDeclaration":5909,"src":"7344:4:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:35"},{"id":5739,"nodeType":"UncheckedBlock","src":"7758:408:35","statements":[{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7782:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7792:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7801:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7805:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"7782:35:35"},{"expression":{"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7831:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7841:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7850:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7854:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"nodeType":"ExpressionStatement","src":"7831:35:35"},{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7880:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7890:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7899:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7903:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5687,"nodeType":"ExpressionStatement","src":"7880:35:35"},{"expression":{"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7929:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7939:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7948:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7952:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5698,"nodeType":"ExpressionStatement","src":"7929:35:35"},{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7978:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"7988:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"7997:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8001:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5709,"nodeType":"ExpressionStatement","src":"7978:35:35"},{"expression":{"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8027:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8037:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"8046:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8050:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5720,"nodeType":"ExpressionStatement","src":"8027:35:35"},{"expression":{"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8076:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8086:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"8095:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8099:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5731,"nodeType":"ExpressionStatement","src":"8076:35:35"},{"expression":{"arguments":[{"id":5733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8136:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"8144:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8148:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5732,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"8132:3:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5636,"id":5738,"nodeType":"Return","src":"8125:30:35"}]}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"6317:208:35","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:35","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"a","nameLocation":"6552:1:35","nodeType":"VariableDeclaration","scope":5741,"src":"6544:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:35"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5741,"src":"6578:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:35"},"scope":6237,"src":"6530:1642:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"8348:161:35","statements":[{"id":5775,"nodeType":"UncheckedBlock","src":"8358:145:35","statements":[{"assignments":[5753],"declarations":[{"constant":false,"id":5753,"mutability":"mutable","name":"result","nameLocation":"8390:6:35","nodeType":"VariableDeclaration","scope":5775,"src":"8382:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5757,"initialValue":{"arguments":[{"id":5755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"8404:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5741,5777],"referencedDeclaration":5741,"src":"8399:4:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"8427:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"8437:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5760,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"8449:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5378_$","typeString":"type(enum Math.Rounding)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:35","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5376,"src":"8449:11:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"src":"8437:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"8464:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"8473:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"8482:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:35","trueExpression":{"hexValue":"31","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5751,"id":5774,"nodeType":"Return","src":"8420:72:35"}]}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"8178:89:35","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:35","nodeType":"FunctionDefinition","parameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"a","nameLocation":"8294:1:35","nodeType":"VariableDeclaration","scope":5777,"src":"8286:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5747,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:35","nodeType":"VariableDeclaration","scope":5777,"src":"8297:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"typeName":{"id":5746,"nodeType":"UserDefinedTypeName","pathNode":{"id":5745,"name":"Rounding","nameLocations":["8297:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5378,"src":"8297:8:35"},"referencedDeclaration":5378,"src":"8297:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:35"},"returnParameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5777,"src":"8339:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5749,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:35"},"scope":6237,"src":"8272:237:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"8694:922:35","statements":[{"assignments":[5786],"declarations":[{"constant":false,"id":5786,"mutability":"mutable","name":"result","nameLocation":"8712:6:35","nodeType":"VariableDeclaration","scope":5908,"src":"8704:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5788,"initialValue":{"hexValue":"30","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:35"},{"id":5905,"nodeType":"UncheckedBlock","src":"8732:855:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"8760:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5803,"nodeType":"IfStatement","src":"8756:99:35","trueBody":{"id":5802,"nodeType":"Block","src":"8778:77:35","statements":[{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"8796:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5797,"nodeType":"ExpressionStatement","src":"8796:13:35"},{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"8827:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"8827:13:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"8872:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"8868:96:35","trueBody":{"id":5817,"nodeType":"Block","src":"8889:75:35","statements":[{"expression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"8907:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5812,"nodeType":"ExpressionStatement","src":"8907:12:35"},{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"8937:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5816,"nodeType":"ExpressionStatement","src":"8937:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"8981:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"8977:96:35","trueBody":{"id":5832,"nodeType":"Block","src":"8998:75:35","statements":[{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9016:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5827,"nodeType":"ExpressionStatement","src":"9016:12:35"},{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9046:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5831,"nodeType":"ExpressionStatement","src":"9046:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9090:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5848,"nodeType":"IfStatement","src":"9086:96:35","trueBody":{"id":5847,"nodeType":"Block","src":"9107:75:35","statements":[{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9125:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5842,"nodeType":"ExpressionStatement","src":"9125:12:35"},{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9155:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5846,"nodeType":"ExpressionStatement","src":"9155:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9199:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5863,"nodeType":"IfStatement","src":"9195:93:35","trueBody":{"id":5862,"nodeType":"Block","src":"9215:73:35","statements":[{"expression":{"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9233:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5857,"nodeType":"ExpressionStatement","src":"9233:11:35"},{"expression":{"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9262:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ExpressionStatement","src":"9262:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9305:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"9301:93:35","trueBody":{"id":5877,"nodeType":"Block","src":"9321:73:35","statements":[{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9339:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ExpressionStatement","src":"9339:11:35"},{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9368:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5876,"nodeType":"ExpressionStatement","src":"9368:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9411:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"9407:93:35","trueBody":{"id":5892,"nodeType":"Block","src":"9427:73:35","statements":[{"expression":{"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9445:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5887,"nodeType":"ExpressionStatement","src":"9445:11:35"},{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9474:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5891,"nodeType":"ExpressionStatement","src":"9474:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"9517:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5904,"nodeType":"IfStatement","src":"9513:64:35","trueBody":{"id":5903,"nodeType":"Block","src":"9533:44:35","statements":[{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9551:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5902,"nodeType":"ExpressionStatement","src":"9551:11:35"}]}}]},{"expression":{"id":5906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"9603:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5784,"id":5907,"nodeType":"Return","src":"9596:13:35"}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"8515:113:35","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:35","nodeType":"FunctionDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"value","nameLocation":"8655:5:35","nodeType":"VariableDeclaration","scope":5909,"src":"8647:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:35"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"8685:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:35"},"scope":6237,"src":"8633:983:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5944,"nodeType":"Block","src":"9849:165:35","statements":[{"id":5943,"nodeType":"UncheckedBlock","src":"9859:149:35","statements":[{"assignments":[5921],"declarations":[{"constant":false,"id":5921,"mutability":"mutable","name":"result","nameLocation":"9891:6:35","nodeType":"VariableDeclaration","scope":5943,"src":"9883:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5920,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5925,"initialValue":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"9905:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5909,5945],"referencedDeclaration":5909,"src":"9900:4:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"9932:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"9942:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5928,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"9954:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5378_$","typeString":"type(enum Math.Rounding)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:35","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5376,"src":"9954:11:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"src":"9942:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"9974:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"9983:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:35","trueExpression":{"hexValue":"31","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5919,"id":5942,"nodeType":"Return","src":"9925:72:35"}]}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"9622:142:35","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5945,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:35","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"9791:5:35","nodeType":"VariableDeclaration","scope":5945,"src":"9783:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:35","nodeType":"VariableDeclaration","scope":5945,"src":"9798:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"typeName":{"id":5914,"nodeType":"UserDefinedTypeName","pathNode":{"id":5913,"name":"Rounding","nameLocations":["9798:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5378,"src":"9798:8:35"},"referencedDeclaration":5378,"src":"9798:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:35"},"returnParameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5945,"src":"9840:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:35"},"scope":6237,"src":"9769:245:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6073,"nodeType":"Block","src":"10201:854:35","statements":[{"assignments":[5954],"declarations":[{"constant":false,"id":5954,"mutability":"mutable","name":"result","nameLocation":"10219:6:35","nodeType":"VariableDeclaration","scope":6073,"src":"10211:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5956,"initialValue":{"hexValue":"30","id":5955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:35"},{"id":6070,"nodeType":"UncheckedBlock","src":"10239:787:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10267:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5973,"nodeType":"IfStatement","src":"10263:103:35","trueBody":{"id":5972,"nodeType":"Block","src":"10286:80:35","statements":[{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10304:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5967,"nodeType":"ExpressionStatement","src":"10304:17:35"},{"expression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10339:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5971,"nodeType":"ExpressionStatement","src":"10339:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10383:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"10379:103:35","trueBody":{"id":5989,"nodeType":"Block","src":"10402:80:35","statements":[{"expression":{"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10420:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5984,"nodeType":"ExpressionStatement","src":"10420:17:35"},{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10455:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5988,"nodeType":"ExpressionStatement","src":"10455:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10499:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6007,"nodeType":"IfStatement","src":"10495:103:35","trueBody":{"id":6006,"nodeType":"Block","src":"10518:80:35","statements":[{"expression":{"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10536:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:35","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6001,"nodeType":"ExpressionStatement","src":"10536:17:35"},{"expression":{"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10571:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6005,"nodeType":"ExpressionStatement","src":"10571:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10615:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"10611:100:35","trueBody":{"id":6023,"nodeType":"Block","src":"10633:78:35","statements":[{"expression":{"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10651:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6018,"nodeType":"ExpressionStatement","src":"10651:16:35"},{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10685:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6022,"nodeType":"ExpressionStatement","src":"10685:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10728:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6041,"nodeType":"IfStatement","src":"10724:100:35","trueBody":{"id":6040,"nodeType":"Block","src":"10746:78:35","statements":[{"expression":{"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10764:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6035,"nodeType":"ExpressionStatement","src":"10764:16:35"},{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10798:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6039,"nodeType":"ExpressionStatement","src":"10798:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10841:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"10837:100:35","trueBody":{"id":6057,"nodeType":"Block","src":"10859:78:35","statements":[{"expression":{"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10877:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:35","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6052,"nodeType":"ExpressionStatement","src":"10877:16:35"},{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10911:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6056,"nodeType":"ExpressionStatement","src":"10911:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"10954:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6069,"nodeType":"IfStatement","src":"10950:66:35","trueBody":{"id":6068,"nodeType":"Block","src":"10972:44:35","statements":[{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"10990:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6067,"nodeType":"ExpressionStatement","src":"10990:11:35"}]}}]},{"expression":{"id":6071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"11042:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5952,"id":6072,"nodeType":"Return","src":"11035:13:35"}]},"documentation":{"id":5946,"nodeType":"StructuredDocumentation","src":"10020:114:35","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6074,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:35","nodeType":"FunctionDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"value","nameLocation":"10162:5:35","nodeType":"VariableDeclaration","scope":6074,"src":"10154:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:35"},"returnParameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6074,"src":"10192:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:35"},"scope":6237,"src":"10139:916:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6109,"nodeType":"Block","src":"11290:167:35","statements":[{"id":6108,"nodeType":"UncheckedBlock","src":"11300:151:35","statements":[{"assignments":[6086],"declarations":[{"constant":false,"id":6086,"mutability":"mutable","name":"result","nameLocation":"11332:6:35","nodeType":"VariableDeclaration","scope":6108,"src":"11324:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6090,"initialValue":{"arguments":[{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11347:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6087,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6074,6110],"referencedDeclaration":6074,"src":"11341:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"11374:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"11384:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6093,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"11396:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5378_$","typeString":"type(enum Math.Rounding)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:35","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5376,"src":"11396:11:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"src":"11384:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"11417:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"11426:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:35","trueExpression":{"hexValue":"31","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6084,"id":6107,"nodeType":"Return","src":"11367:73:35"}]}]},"documentation":{"id":6075,"nodeType":"StructuredDocumentation","src":"11061:143:35","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6110,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:35","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"value","nameLocation":"11232:5:35","nodeType":"VariableDeclaration","scope":6110,"src":"11224:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6080,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:35","nodeType":"VariableDeclaration","scope":6110,"src":"11239:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"typeName":{"id":6079,"nodeType":"UserDefinedTypeName","pathNode":{"id":6078,"name":"Rounding","nameLocations":["11239:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5378,"src":"11239:8:35"},"referencedDeclaration":5378,"src":"11239:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:35"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6110,"src":"11281:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:35"},"scope":6237,"src":"11209:248:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6196,"nodeType":"Block","src":"11771:600:35","statements":[{"assignments":[6119],"declarations":[{"constant":false,"id":6119,"mutability":"mutable","name":"result","nameLocation":"11789:6:35","nodeType":"VariableDeclaration","scope":6196,"src":"11781:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6118,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6121,"initialValue":{"hexValue":"30","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:35"},{"id":6193,"nodeType":"UncheckedBlock","src":"11809:533:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"11837:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"11833:98:35","trueBody":{"id":6135,"nodeType":"Block","src":"11855:76:35","statements":[{"expression":{"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"11873:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:35","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6130,"nodeType":"ExpressionStatement","src":"11873:13:35"},{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"11904:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6134,"nodeType":"ExpressionStatement","src":"11904:12:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"11948:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6151,"nodeType":"IfStatement","src":"11944:95:35","trueBody":{"id":6150,"nodeType":"Block","src":"11965:74:35","statements":[{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"11983:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:35","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6145,"nodeType":"ExpressionStatement","src":"11983:12:35"},{"expression":{"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12013:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6149,"nodeType":"ExpressionStatement","src":"12013:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"12056:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6166,"nodeType":"IfStatement","src":"12052:95:35","trueBody":{"id":6165,"nodeType":"Block","src":"12073:74:35","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"12091:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:35","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6160,"nodeType":"ExpressionStatement","src":"12091:12:35"},{"expression":{"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12121:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:35","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6164,"nodeType":"ExpressionStatement","src":"12121:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"12164:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6181,"nodeType":"IfStatement","src":"12160:95:35","trueBody":{"id":6180,"nodeType":"Block","src":"12181:74:35","statements":[{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"12199:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:35","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"nodeType":"ExpressionStatement","src":"12199:12:35"},{"expression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12229:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6179,"nodeType":"ExpressionStatement","src":"12229:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"12272:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:35","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"12268:64:35","trueBody":{"id":6191,"nodeType":"Block","src":"12288:44:35","statements":[{"expression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12306:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6190,"nodeType":"ExpressionStatement","src":"12306:11:35"}]}}]},{"expression":{"id":6194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"12358:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6117,"id":6195,"nodeType":"Return","src":"12351:13:35"}]},"documentation":{"id":6111,"nodeType":"StructuredDocumentation","src":"11463:240:35","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6197,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:35","nodeType":"FunctionDefinition","parameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"value","nameLocation":"11732:5:35","nodeType":"VariableDeclaration","scope":6197,"src":"11724:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:35"},"returnParameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6197,"src":"11762:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:35"},"scope":6237,"src":"11708:663:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6235,"nodeType":"Block","src":"12608:174:35","statements":[{"id":6234,"nodeType":"UncheckedBlock","src":"12618:158:35","statements":[{"assignments":[6209],"declarations":[{"constant":false,"id":6209,"mutability":"mutable","name":"result","nameLocation":"12650:6:35","nodeType":"VariableDeclaration","scope":6234,"src":"12642:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6213,"initialValue":{"arguments":[{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"12666:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6210,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6197,6236],"referencedDeclaration":6197,"src":"12659:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:35"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"12693:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"12703:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6216,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"12715:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5378_$","typeString":"type(enum Math.Rounding)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:35","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5376,"src":"12715:11:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"src":"12703:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"12736:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"12751:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:35","trueExpression":{"hexValue":"31","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6207,"id":6233,"nodeType":"Return","src":"12686:79:35"}]}]},"documentation":{"id":6198,"nodeType":"StructuredDocumentation","src":"12377:144:35","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6236,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:35","nodeType":"FunctionDefinition","parameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"value","nameLocation":"12550:5:35","nodeType":"VariableDeclaration","scope":6236,"src":"12542:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6203,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:35","nodeType":"VariableDeclaration","scope":6236,"src":"12557:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"},"typeName":{"id":6202,"nodeType":"UserDefinedTypeName","pathNode":{"id":6201,"name":"Rounding","nameLocations":["12557:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":5378,"src":"12557:8:35"},"referencedDeclaration":5378,"src":"12557:8:35","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5378","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:35"},"returnParameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6236,"src":"12599:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:35"},"scope":6237,"src":"12526:256:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6238,"src":"202:12582:35","usedErrors":[]}],"src":"103:12682:35"},"id":35},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6342]},"id":6343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6239,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:36"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6240,"nodeType":"StructuredDocumentation","src":"134:80:36","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6342,"linearizedBaseContracts":[6342],"name":"SignedMath","nameLocation":"223:10:36","nodeType":"ContractDefinition","nodes":[{"body":{"id":6257,"nodeType":"Block","src":"375:37:36","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"392:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"396:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6254,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"404:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:36","trueExpression":{"id":6253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"400:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6249,"id":6256,"nodeType":"Return","src":"385:20:36"}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"240:66:36","text":" @dev Returns the largest of two signed numbers."},"id":6258,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:36","nodeType":"FunctionDefinition","parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"a","nameLocation":"331:1:36","nodeType":"VariableDeclaration","scope":6258,"src":"324:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6242,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6245,"mutability":"mutable","name":"b","nameLocation":"341:1:36","nodeType":"VariableDeclaration","scope":6258,"src":"334:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6244,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:36"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6258,"src":"367:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6247,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:36"},"scope":6342,"src":"311:101:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"554:37:36","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"571:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6269,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"575:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"583:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:36","trueExpression":{"id":6271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"579:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6267,"id":6274,"nodeType":"Return","src":"564:20:36"}]},"documentation":{"id":6259,"nodeType":"StructuredDocumentation","src":"418:67:36","text":" @dev Returns the smallest of two signed numbers."},"id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:36","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"a","nameLocation":"510:1:36","nodeType":"VariableDeclaration","scope":6276,"src":"503:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6260,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6263,"mutability":"mutable","name":"b","nameLocation":"520:1:36","nodeType":"VariableDeclaration","scope":6276,"src":"513:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6262,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:36"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6276,"src":"546:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6265,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:36"},"scope":6342,"src":"490:101:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6319,"nodeType":"Block","src":"796:162:36","statements":[{"assignments":[6287],"declarations":[{"constant":false,"id":6287,"mutability":"mutable","name":"x","nameLocation":"865:1:36","nodeType":"VariableDeclaration","scope":6319,"src":"858:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6286,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6300,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"870:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"874:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"881:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"885:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:36"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"910:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6306,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"930:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6304,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:36","typeDescriptions":{}}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:36","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6302,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:36","typeDescriptions":{}}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"944:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"948:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6285,"id":6318,"nodeType":"Return","src":"903:48:36"}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"597:126:36","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6320,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:36","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"a","nameLocation":"752:1:36","nodeType":"VariableDeclaration","scope":6320,"src":"745:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6278,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6281,"mutability":"mutable","name":"b","nameLocation":"762:1:36","nodeType":"VariableDeclaration","scope":6320,"src":"755:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6280,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:36"},"returnParameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6320,"src":"788:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6283,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:36"},"scope":6342,"src":"728:230:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6340,"nodeType":"Block","src":"1102:158:36","statements":[{"id":6339,"nodeType":"UncheckedBlock","src":"1112:142:36","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1227:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:36","subExpression":{"id":6334,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1241:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:36","trueExpression":{"id":6333,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1236:1:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:36","typeDescriptions":{}}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6327,"id":6338,"nodeType":"Return","src":"1212:31:36"}]}]},"documentation":{"id":6321,"nodeType":"StructuredDocumentation","src":"964:78:36","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6341,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:36","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"n","nameLocation":"1067:1:36","nodeType":"VariableDeclaration","scope":6341,"src":"1060:8:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:36"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"1093:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:36"},"scope":6342,"src":"1047:213:36","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6343,"src":"215:1047:36","usedErrors":[]}],"src":"109:1154:36"},"id":36},"contracts/UP.sol":{"ast":{"absolutePath":"contracts/UP.sol","exportedSymbols":{"LSP0ERC725Account":[6387],"LSP0ERC725AccountCore":[2455],"OwnableUnset":[955],"Version":[4121],"_TYPEID_LSP0_VALUE_RECEIVED":[1152]},"id":6388,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":6344,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:37"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/Version.sol","file":"@lukso/lsp-smart-contracts/contracts/Version.sol","id":6346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6388,"sourceUnit":4122,"src":"75:73:37","symbolAliases":[{"foreign":{"id":6345,"name":"Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"83:7:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol","id":6348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6388,"sourceUnit":2456,"src":"149:119:37","symbolAliases":[{"foreign":{"id":6347,"name":"LSP0ERC725AccountCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"157:21:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","id":6350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6388,"sourceUnit":956,"src":"269:87:37","symbolAliases":[{"foreign":{"id":6349,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"277:12:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol","id":6352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6388,"sourceUnit":1162,"src":"371:117:37","symbolAliases":[{"foreign":{"id":6351,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"379:27:37","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6354,"name":"LSP0ERC725AccountCore","nameLocations":["1403:21:37"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1403:21:37"},"id":6355,"nodeType":"InheritanceSpecifier","src":"1403:21:37"},{"baseName":{"id":6356,"name":"Version","nameLocations":["1426:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":4121,"src":"1426:7:37"},"id":6357,"nodeType":"InheritanceSpecifier","src":"1426:7:37"}],"canonicalName":"LSP0ERC725Account","contractDependencies":[],"contractKind":"contract","documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"490:882:37","text":" @title Deployable Implementation of [LSP-0-ERC725Account] Standard.\n @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\n @dev A smart contract account including basic functionalities such as:\n - Detecting supported standards using [ERC-165]\n - Executing several operation on other addresses including creating contracts using [ERC-725X]\n - A generic data key-value store using [ERC-725Y]\n - Validating signatures using [ERC-1271]\n - Receiving notification and react on them using [LSP-1-UniversalReceiver]\n - Safer ownership management through 2-steps transfer using [LSP-14-Ownable2Step]\n - Extending the account with new functions and interfaceIds of future standards using [LSP-17-ContractExtension]\n - Verifying calls on the owner to make it easier to interact with the account directly using [LSP-20-CallVerification]"},"fullyImplemented":true,"id":6387,"linearizedBaseContracts":[6387,4121,2455,3341,2999,2837,3026,1135,4135,823,1121,588,1070,5165,5371,955,2492],"name":"LSP0ERC725Account","nameLocation":"1382:17:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":6385,"nodeType":"Block","src":"2101:284:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2115:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2119:5:37","memberName":"value","nodeType":"MemberAccess","src":"2115:9:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2115:14:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"IfStatement","src":"2111:221:37","trueBody":{"id":6377,"nodeType":"Block","src":"2131:201:37","statements":[{"eventCall":{"arguments":[{"expression":{"id":6368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2185:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:6:37","memberName":"sender","nodeType":"MemberAccess","src":"2185:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2213:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2217:5:37","memberName":"value","nodeType":"MemberAccess","src":"2213:9:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6372,"name":"_TYPEID_LSP0_VALUE_RECEIVED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2240:27:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2305:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6367,"name":"UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"2150:17:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes32,bytes memory,bytes memory)"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2150:171:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"EmitStatement","src":"2145:176:37"}]}},{"expression":{"arguments":[{"id":6382,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"2365:12:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6379,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2342:12:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OwnableUnset_$955_$","typeString":"type(contract OwnableUnset)"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2355:9:37","memberName":"_setOwner","nodeType":"MemberAccess","referencedDeclaration":954,"src":"2342:22:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:36:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6384,"nodeType":"ExpressionStatement","src":"2342:36:37"}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"1440:614:37","text":" @notice Deploying a LSP0ERC725Account contract with owner set to address `initialOwner`.\n @dev Set `initialOwner` as the contract owner.\n - The `constructor` also allows funding the contract on deployment.\n - The `initialOwner` will then be allowed to call protected functions marked with the `onlyOwner` modifier.\n @param initialOwner The owner of the contract.\n @custom:events\n - {UniversalReceiver} event when funding the contract on deployment.\n - {OwnershipTransferred} event when `initialOwner` is set as the contract {owner}."},"id":6386,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"initialOwner","nameLocation":"2079:12:37","nodeType":"VariableDeclaration","scope":6386,"src":"2071:20:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6359,"name":"address","nodeType":"ElementaryTypeName","src":"2071:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2070:22:37"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[],"src":"2101:0:37"},"scope":6387,"src":"2059:326:37","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":6388,"src":"1373:1014:37","usedErrors":[972,977,980,983,986,989,992,995,998,1001,1004,2515,2518,2521,2526,2855,3365,3372,3377]}],"src":"39:2349:37"},"id":37},"solidity-bytes-utils/contracts/BytesLib.sol":{"ast":{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","exportedSymbols":{"BytesLib":[6720]},"id":6721,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":6389,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:38"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6720,"linearizedBaseContracts":[6720],"name":"BytesLib","nameLocation":"378:8:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":6404,"nodeType":"Block","src":"545:2803:38","statements":[{"assignments":[6399],"declarations":[{"constant":false,"id":6399,"mutability":"mutable","name":"tempBytes","nameLocation":"568:9:38","nodeType":"VariableDeclaration","scope":6404,"src":"555:22:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6398,"name":"bytes","nodeType":"ElementaryTypeName","src":"555:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6400,"nodeType":"VariableDeclarationStatement","src":"555:22:38"},{"AST":{"nodeType":"YulBlock","src":"597:2718:38","statements":[{"nodeType":"YulAssignment","src":"741:24:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"760:4:38","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"754:5:38"},"nodeType":"YulFunctionCall","src":"754:11:38"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"741:9:38"}]},{"nodeType":"YulVariableDeclaration","src":"897:30:38","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"917:9:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"911:5:38"},"nodeType":"YulFunctionCall","src":"911:16:38"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"901:6:38","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"947:9:38"},{"name":"length","nodeType":"YulIdentifier","src":"958:6:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"940:6:38"},"nodeType":"YulFunctionCall","src":"940:25:38"},"nodeType":"YulExpressionStatement","src":"940:25:38"},{"nodeType":"YulVariableDeclaration","src":"1175:30:38","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1189:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"1200:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1185:3:38"},"nodeType":"YulFunctionCall","src":"1185:20:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1179:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1330:26:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1345:2:38"},{"name":"length","nodeType":"YulIdentifier","src":"1349:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:38"},"nodeType":"YulFunctionCall","src":"1341:15:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1334:3:38","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:162:38","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1867:2:38"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1877:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:38"},"nodeType":"YulFunctionCall","src":"1871:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1860:6:38"},"nodeType":"YulFunctionCall","src":"1860:21:38"},"nodeType":"YulExpressionStatement","src":"1860:21:38"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1566:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"1570:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1563:2:38"},"nodeType":"YulFunctionCall","src":"1563:11:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1575:157:38","statements":[{"nodeType":"YulAssignment","src":"1663:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1673:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"1677:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:38"},"nodeType":"YulFunctionCall","src":"1669:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1663:2:38"}]},{"nodeType":"YulAssignment","src":"1699:19:38","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1709:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"1713:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:38"},"nodeType":"YulFunctionCall","src":"1705:13:38"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1699:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"1374:188:38","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:30:38","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1532:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"1543:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:38"},"nodeType":"YulFunctionCall","src":"1528:20:38"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1522:2:38","type":""}]}]},"src":"1370:525:38"},{"nodeType":"YulAssignment","src":"2096:27:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2112:10:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:38"},"nodeType":"YulFunctionCall","src":"2106:17:38"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2096:6:38"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2143:9:38"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2158:6:38"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2172:9:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2166:5:38"},"nodeType":"YulFunctionCall","src":"2166:16:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:38"},"nodeType":"YulFunctionCall","src":"2154:29:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:38"},"nodeType":"YulFunctionCall","src":"2136:48:38"},"nodeType":"YulExpressionStatement","src":"2136:48:38"},{"nodeType":"YulAssignment","src":"2322:9:38","value":{"name":"end","nodeType":"YulIdentifier","src":"2328:3:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2322:2:38"}]},{"nodeType":"YulAssignment","src":"2458:22:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2469:2:38"},{"name":"length","nodeType":"YulIdentifier","src":"2473:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2465:3:38"},"nodeType":"YulFunctionCall","src":"2465:15:38"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2458:3:38"}]},{"body":{"nodeType":"YulBlock","src":"2662:53:38","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2687:2:38"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2697:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2691:5:38"},"nodeType":"YulFunctionCall","src":"2691:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2680:6:38"},"nodeType":"YulFunctionCall","src":"2680:21:38"},"nodeType":"YulExpressionStatement","src":"2680:21:38"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2565:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"2569:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:38"},"nodeType":"YulFunctionCall","src":"2562:11:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2574:87:38","statements":[{"nodeType":"YulAssignment","src":"2592:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2602:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"2606:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:38"},"nodeType":"YulFunctionCall","src":"2598:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2592:2:38"}]},{"nodeType":"YulAssignment","src":"2628:19:38","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2638:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"2642:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:38"},"nodeType":"YulFunctionCall","src":"2634:13:38"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2628:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"2498:63:38","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:31:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2530:10:38"},{"kind":"number","nodeType":"YulLiteral","src":"2542:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:38"},"nodeType":"YulFunctionCall","src":"2526:21:38"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2520:2:38","type":""}]}]},"src":"2494:221:38"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:4:38","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3180:3:38"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3196:6:38"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3210:9:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3204:5:38"},"nodeType":"YulFunctionCall","src":"3204:16:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3192:3:38"},"nodeType":"YulFunctionCall","src":"3192:29:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:38"},"nodeType":"YulFunctionCall","src":"3185:37:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:38"},"nodeType":"YulFunctionCall","src":"3176:47:38"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:38","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:38"},"nodeType":"YulFunctionCall","src":"3172:56:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:2:38","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3244:3:38"},"nodeType":"YulFunctionCall","src":"3244:7:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3153:3:38"},"nodeType":"YulFunctionCall","src":"3153:151:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:38"},"nodeType":"YulFunctionCall","src":"3140:165:38"},"nodeType":"YulExpressionStatement","src":"3140:165:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":6393,"isOffset":false,"isSlot":false,"src":"2112:10:38","valueSize":1},{"declaration":6393,"isOffset":false,"isSlot":false,"src":"2530:10:38","valueSize":1},{"declaration":6391,"isOffset":false,"isSlot":false,"src":"1532:9:38","valueSize":1},{"declaration":6391,"isOffset":false,"isSlot":false,"src":"3210:9:38","valueSize":1},{"declaration":6391,"isOffset":false,"isSlot":false,"src":"917:9:38","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"1189:9:38","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"2143:9:38","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"2172:9:38","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"741:9:38","valueSize":1},{"declaration":6399,"isOffset":false,"isSlot":false,"src":"947:9:38","valueSize":1}],"id":6401,"nodeType":"InlineAssembly","src":"588:2727:38"},{"expression":{"id":6402,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"3332:9:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6397,"id":6403,"nodeType":"Return","src":"3325:16:38"}]},"id":6405,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"402:6:38","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"_preBytes","nameLocation":"431:9:38","nodeType":"VariableDeclaration","scope":6405,"src":"418:22:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6390,"name":"bytes","nodeType":"ElementaryTypeName","src":"418:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6393,"mutability":"mutable","name":"_postBytes","nameLocation":"463:10:38","nodeType":"VariableDeclaration","scope":6405,"src":"450:23:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6392,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"408:71:38"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6405,"src":"527:12:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6395,"name":"bytes","nodeType":"ElementaryTypeName","src":"527:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"526:14:38"},"scope":6720,"src":"393:2955:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6413,"nodeType":"Block","src":"3436:6015:38","statements":[{"AST":{"nodeType":"YulBlock","src":"3455:5990:38","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:34:38","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3697:14:38"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3691:5:38"},"nodeType":"YulFunctionCall","src":"3691:21:38"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3682:5:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4205:76:38","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4228:5:38"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4243:5:38","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4261:5:38"},{"kind":"number","nodeType":"YulLiteral","src":"4268:1:38","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4257:3:38"},"nodeType":"YulFunctionCall","src":"4257:13:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4250:6:38"},"nodeType":"YulFunctionCall","src":"4250:21:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4239:3:38"},"nodeType":"YulFunctionCall","src":"4239:33:38"},{"kind":"number","nodeType":"YulLiteral","src":"4274:1:38","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4235:3:38"},"nodeType":"YulFunctionCall","src":"4235:41:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4224:3:38"},"nodeType":"YulFunctionCall","src":"4224:53:38"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:38","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4220:3:38"},"nodeType":"YulFunctionCall","src":"4220:61:38"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4209:7:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4294:32:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4315:10:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4309:5:38"},"nodeType":"YulFunctionCall","src":"4309:17:38"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4298:7:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4339:38:38","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4360:7:38"},{"name":"mlength","nodeType":"YulIdentifier","src":"4369:7:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:38"},"nodeType":"YulFunctionCall","src":"4356:21:38"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4343:9:38","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4710:1485:38","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"4991:14:38"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5303:5:38"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5521:10:38"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5517:3:38"},"nodeType":"YulFunctionCall","src":"5517:21:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5511:5:38"},"nodeType":"YulFunctionCall","src":"5511:28:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5648:5:38","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:2:38","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5663:7:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5655:3:38"},"nodeType":"YulFunctionCall","src":"5655:16:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5644:3:38"},"nodeType":"YulFunctionCall","src":"5644:28:38"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5404:3:38"},"nodeType":"YulFunctionCall","src":"5404:302:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5895:5:38","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:2:38","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5910:9:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5902:3:38"},"nodeType":"YulFunctionCall","src":"5902:18:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5891:3:38"},"nodeType":"YulFunctionCall","src":"5891:30:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5367:3:38"},"nodeType":"YulFunctionCall","src":"5367:584:38"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6104:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"6113:1:38","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6100:3:38"},"nodeType":"YulFunctionCall","src":"6100:15:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:38"},"nodeType":"YulFunctionCall","src":"5334:807:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:38"},"nodeType":"YulFunctionCall","src":"5134:1029:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4963:6:38"},"nodeType":"YulFunctionCall","src":"4963:1218:38"},"nodeType":"YulExpressionStatement","src":"4963:1218:38"}]},"nodeType":"YulCase","src":"4703:1492:38","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:1:38","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6215:1935:38","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6424:3:38","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6429:14:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6417:6:38"},"nodeType":"YulFunctionCall","src":"6417:27:38"},"nodeType":"YulExpressionStatement","src":"6417:27:38"},{"nodeType":"YulVariableDeclaration","src":"6461:53:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6485:3:38","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6490:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6475:9:38"},"nodeType":"YulFunctionCall","src":"6475:20:38"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6501:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"6510:2:38","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6497:3:38"},"nodeType":"YulFunctionCall","src":"6497:16:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:38"},"nodeType":"YulFunctionCall","src":"6471:43:38"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6465:2:38","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6574:14:38"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6598:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:38","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6594:3:38"},"nodeType":"YulFunctionCall","src":"6594:17:38"},{"kind":"number","nodeType":"YulLiteral","src":"6613:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:38"},"nodeType":"YulFunctionCall","src":"6590:25:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6567:6:38"},"nodeType":"YulFunctionCall","src":"6567:49:38"},"nodeType":"YulExpressionStatement","src":"6567:49:38"},{"nodeType":"YulVariableDeclaration","src":"7204:30:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7222:2:38","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7226:7:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7218:3:38"},"nodeType":"YulFunctionCall","src":"7218:16:38"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7208:6:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7251:33:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7265:10:38"},{"name":"submod","nodeType":"YulIdentifier","src":"7277:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:38"},"nodeType":"YulFunctionCall","src":"7261:23:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7255:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7301:35:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7316:10:38"},{"name":"mlength","nodeType":"YulIdentifier","src":"7328:7:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:38"},"nodeType":"YulFunctionCall","src":"7312:24:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7353:38:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:5:38","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7380:6:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7369:3:38"},"nodeType":"YulFunctionCall","src":"7369:18:38"},{"kind":"number","nodeType":"YulLiteral","src":"7389:1:38","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:38"},"nodeType":"YulFunctionCall","src":"7365:26:38"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7357:4:38","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7437:2:38"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7523:5:38"},{"kind":"number","nodeType":"YulLiteral","src":"7558:66:38","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7490:3:38"},"nodeType":"YulFunctionCall","src":"7490:160:38"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7686:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7680:5:38"},"nodeType":"YulFunctionCall","src":"7680:9:38"},{"name":"mask","nodeType":"YulIdentifier","src":"7691:4:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7676:3:38"},"nodeType":"YulFunctionCall","src":"7676:20:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:38"},"nodeType":"YulFunctionCall","src":"7461:257:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7409:6:38"},"nodeType":"YulFunctionCall","src":"7409:327:38"},"nodeType":"YulExpressionStatement","src":"7409:327:38"},{"body":{"nodeType":"YulBlock","src":"7964:61:38","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7993:2:38"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8003:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7997:5:38"},"nodeType":"YulFunctionCall","src":"7997:9:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7986:6:38"},"nodeType":"YulFunctionCall","src":"7986:21:38"},"nodeType":"YulExpressionStatement","src":"7986:21:38"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7858:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"7862:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7855:2:38"},"nodeType":"YulFunctionCall","src":"7855:11:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7867:96:38","statements":[{"nodeType":"YulAssignment","src":"7889:16:38","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7899:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"7903:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7895:3:38"},"nodeType":"YulFunctionCall","src":"7895:10:38"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7889:2:38"}]},{"nodeType":"YulAssignment","src":"7926:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7936:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:38"},"nodeType":"YulFunctionCall","src":"7932:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7926:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"7758:96:38","statements":[{"nodeType":"YulAssignment","src":"7780:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7790:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:38"},"nodeType":"YulFunctionCall","src":"7786:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7780:2:38"}]},{"nodeType":"YulAssignment","src":"7820:16:38","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7830:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"7834:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:38"},"nodeType":"YulFunctionCall","src":"7826:10:38"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7820:2:38"}]}]},"src":"7754:271:38"},{"nodeType":"YulAssignment","src":"8043:32:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8055:5:38","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8066:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8062:3:38"},"nodeType":"YulFunctionCall","src":"8062:12:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8051:3:38"},"nodeType":"YulFunctionCall","src":"8051:24:38"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8043:4:38"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8100:2:38"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8118:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8112:5:38"},"nodeType":"YulFunctionCall","src":"8112:9:38"},{"name":"mask","nodeType":"YulIdentifier","src":"8123:4:38"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8108:3:38"},"nodeType":"YulFunctionCall","src":"8108:20:38"},{"name":"mask","nodeType":"YulIdentifier","src":"8130:4:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8104:3:38"},"nodeType":"YulFunctionCall","src":"8104:31:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8093:6:38"},"nodeType":"YulFunctionCall","src":"8093:43:38"},"nodeType":"YulExpressionStatement","src":"8093:43:38"}]},"nodeType":"YulCase","src":"6208:1942:38","value":{"kind":"number","nodeType":"YulLiteral","src":"6213:1:38","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8171:1264:38","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8268:3:38","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8273:14:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:38"},"nodeType":"YulFunctionCall","src":"8261:27:38"},"nodeType":"YulExpressionStatement","src":"8261:27:38"},{"nodeType":"YulVariableDeclaration","src":"8381:53:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8405:3:38","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8410:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8395:9:38"},"nodeType":"YulFunctionCall","src":"8395:20:38"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8421:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:38","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8417:3:38"},"nodeType":"YulFunctionCall","src":"8417:16:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8391:3:38"},"nodeType":"YulFunctionCall","src":"8391:43:38"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8385:2:38","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8494:14:38"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8518:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"8529:1:38","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8514:3:38"},"nodeType":"YulFunctionCall","src":"8514:17:38"},{"kind":"number","nodeType":"YulLiteral","src":"8533:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:38"},"nodeType":"YulFunctionCall","src":"8510:25:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8487:6:38"},"nodeType":"YulFunctionCall","src":"8487:49:38"},"nodeType":"YulExpressionStatement","src":"8487:49:38"},{"nodeType":"YulVariableDeclaration","src":"8663:34:38","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8685:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:38","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8681:3:38"},"nodeType":"YulFunctionCall","src":"8681:16:38"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8667:10:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8714:34:38","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8736:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:38","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8732:3:38"},"nodeType":"YulFunctionCall","src":"8732:16:38"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8718:10:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8765:33:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8783:2:38","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8787:10:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8779:3:38"},"nodeType":"YulFunctionCall","src":"8779:19:38"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8769:6:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8815:33:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8829:10:38"},{"name":"submod","nodeType":"YulIdentifier","src":"8841:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8825:3:38"},"nodeType":"YulFunctionCall","src":"8825:23:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8819:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8865:35:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8880:10:38"},{"name":"mlength","nodeType":"YulIdentifier","src":"8892:7:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:38"},"nodeType":"YulFunctionCall","src":"8876:24:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8869:3:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8917:38:38","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8937:5:38","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8944:6:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8933:3:38"},"nodeType":"YulFunctionCall","src":"8933:18:38"},{"kind":"number","nodeType":"YulLiteral","src":"8953:1:38","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8929:3:38"},"nodeType":"YulFunctionCall","src":"8929:26:38"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8921:4:38","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8980:2:38"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8994:2:38"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8988:5:38"},"nodeType":"YulFunctionCall","src":"8988:9:38"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9009:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9003:5:38"},"nodeType":"YulFunctionCall","src":"9003:9:38"},{"name":"mask","nodeType":"YulIdentifier","src":"9014:4:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8999:3:38"},"nodeType":"YulFunctionCall","src":"8999:20:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:38"},"nodeType":"YulFunctionCall","src":"8984:36:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8973:6:38"},"nodeType":"YulFunctionCall","src":"8973:48:38"},"nodeType":"YulExpressionStatement","src":"8973:48:38"},{"body":{"nodeType":"YulBlock","src":"9249:61:38","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9278:2:38"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9288:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9282:5:38"},"nodeType":"YulFunctionCall","src":"9282:9:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9271:6:38"},"nodeType":"YulFunctionCall","src":"9271:21:38"},"nodeType":"YulExpressionStatement","src":"9271:21:38"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9143:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"9147:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9140:2:38"},"nodeType":"YulFunctionCall","src":"9140:11:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9152:96:38","statements":[{"nodeType":"YulAssignment","src":"9174:16:38","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9184:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"9188:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:38"},"nodeType":"YulFunctionCall","src":"9180:10:38"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9174:2:38"}]},{"nodeType":"YulAssignment","src":"9211:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9221:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"9225:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9217:3:38"},"nodeType":"YulFunctionCall","src":"9217:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9211:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"9043:96:38","statements":[{"nodeType":"YulAssignment","src":"9065:16:38","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9075:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"9079:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:38"},"nodeType":"YulFunctionCall","src":"9071:10:38"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9065:2:38"}]},{"nodeType":"YulAssignment","src":"9102:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9112:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"9116:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:38"},"nodeType":"YulFunctionCall","src":"9108:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9102:2:38"}]}]},"src":"9039:271:38"},{"nodeType":"YulAssignment","src":"9328:32:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:5:38","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9351:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"9355:3:38"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9347:3:38"},"nodeType":"YulFunctionCall","src":"9347:12:38"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9336:3:38"},"nodeType":"YulFunctionCall","src":"9336:24:38"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9328:4:38"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9385:2:38"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9403:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9397:5:38"},"nodeType":"YulFunctionCall","src":"9397:9:38"},{"name":"mask","nodeType":"YulIdentifier","src":"9408:4:38"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9393:3:38"},"nodeType":"YulFunctionCall","src":"9393:20:38"},{"name":"mask","nodeType":"YulIdentifier","src":"9415:4:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9389:3:38"},"nodeType":"YulFunctionCall","src":"9389:31:38"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9378:6:38"},"nodeType":"YulFunctionCall","src":"9378:43:38"},"nodeType":"YulExpressionStatement","src":"9378:43:38"}]},"nodeType":"YulCase","src":"8163:1272:38","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4658:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:38","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4655:2:38"},"nodeType":"YulFunctionCall","src":"4655:15:38"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4675:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:38","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4672:2:38"},"nodeType":"YulFunctionCall","src":"4672:17:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:38"},"nodeType":"YulFunctionCall","src":"4651:39:38"},"nodeType":"YulSwitch","src":"4644:4791:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":6409,"isOffset":false,"isSlot":false,"src":"4315:10:38","valueSize":1},{"declaration":6409,"isOffset":false,"isSlot":false,"src":"5521:10:38","valueSize":1},{"declaration":6409,"isOffset":false,"isSlot":false,"src":"7265:10:38","valueSize":1},{"declaration":6409,"isOffset":false,"isSlot":false,"src":"7316:10:38","valueSize":1},{"declaration":6409,"isOffset":false,"isSlot":false,"src":"8829:10:38","valueSize":1},{"declaration":6409,"isOffset":false,"isSlot":false,"src":"8880:10:38","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"3697:14:38","suffix":"slot","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"4991:14:38","suffix":"slot","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"6429:14:38","suffix":"slot","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"6574:14:38","suffix":"slot","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"8273:14:38","suffix":"slot","valueSize":1},{"declaration":6407,"isOffset":false,"isSlot":true,"src":"8494:14:38","suffix":"slot","valueSize":1}],"id":6412,"nodeType":"InlineAssembly","src":"3446:5999:38"}]},"id":6414,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3363:13:38","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"_preBytes","nameLocation":"3391:9:38","nodeType":"VariableDeclaration","scope":6414,"src":"3377:23:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6406,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6409,"mutability":"mutable","name":"_postBytes","nameLocation":"3415:10:38","nodeType":"VariableDeclaration","scope":6414,"src":"3402:23:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6408,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:50:38"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[],"src":"3436:0:38"},"scope":6720,"src":"3354:6097:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"9621:2640:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6426,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"9639:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:2:38","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9639:12:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6429,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"9655:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9639:23:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9664:16:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":6425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9631:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9631:50:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6433,"nodeType":"ExpressionStatement","src":"9631:50:38"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6435,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"9699:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:38","memberName":"length","nodeType":"MemberAccess","src":"9699:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"9716:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6438,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"9725:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9716:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9699:33:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9734:19:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":6434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9691:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9691:63:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6443,"nodeType":"ExpressionStatement","src":"9691:63:38"},{"assignments":[6445],"declarations":[{"constant":false,"id":6445,"mutability":"mutable","name":"tempBytes","nameLocation":"9778:9:38","nodeType":"VariableDeclaration","scope":6450,"src":"9765:22:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6444,"name":"bytes","nodeType":"ElementaryTypeName","src":"9765:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6446,"nodeType":"VariableDeclarationStatement","src":"9765:22:38"},{"AST":{"nodeType":"YulBlock","src":"9807:2421:38","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9863:1960:38","statements":[{"nodeType":"YulAssignment","src":"10019:24:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10038:4:38","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10032:5:38"},"nodeType":"YulFunctionCall","src":"10032:11:38"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10019:9:38"}]},{"nodeType":"YulVariableDeclaration","src":"10667:33:38","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10688:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"10697:2:38","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10684:3:38"},"nodeType":"YulFunctionCall","src":"10684:16:38"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10671:9:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11021:70:38","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11039:9:38"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11050:9:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:38"},"nodeType":"YulFunctionCall","src":"11035:25:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11066:4:38","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11079:9:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11072:6:38"},"nodeType":"YulFunctionCall","src":"11072:17:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11062:3:38"},"nodeType":"YulFunctionCall","src":"11062:28:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11031:3:38"},"nodeType":"YulFunctionCall","src":"11031:60:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"11025:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11108:27:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11123:2:38"},{"name":"_length","nodeType":"YulIdentifier","src":"11127:7:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:38"},"nodeType":"YulFunctionCall","src":"11119:16:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"11112:3:38","type":""}]},{"body":{"nodeType":"YulBlock","src":"11517:61:38","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11546:2:38"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11556:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11550:5:38"},"nodeType":"YulFunctionCall","src":"11550:9:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11539:6:38"},"nodeType":"YulFunctionCall","src":"11539:21:38"},"nodeType":"YulExpressionStatement","src":"11539:21:38"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11408:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"11412:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11405:2:38"},"nodeType":"YulFunctionCall","src":"11405:11:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11417:99:38","statements":[{"nodeType":"YulAssignment","src":"11439:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11449:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"11453:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11445:3:38"},"nodeType":"YulFunctionCall","src":"11445:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11439:2:38"}]},{"nodeType":"YulAssignment","src":"11479:19:38","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11489:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"11493:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11485:3:38"},"nodeType":"YulFunctionCall","src":"11485:13:38"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11479:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"11157:247:38","statements":[{"nodeType":"YulVariableDeclaration","src":"11306:80:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11328:6:38"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11336:9:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:38"},"nodeType":"YulFunctionCall","src":"11324:22:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11352:4:38","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11365:9:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11358:6:38"},"nodeType":"YulFunctionCall","src":"11358:17:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11348:3:38"},"nodeType":"YulFunctionCall","src":"11348:28:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11320:3:38"},"nodeType":"YulFunctionCall","src":"11320:57:38"},{"name":"_start","nodeType":"YulIdentifier","src":"11379:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:38"},"nodeType":"YulFunctionCall","src":"11316:70:38"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11310:2:38","type":""}]}]},"src":"11153:425:38"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11603:9:38"},{"name":"_length","nodeType":"YulIdentifier","src":"11614:7:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:38"},"nodeType":"YulFunctionCall","src":"11596:26:38"},"nodeType":"YulExpressionStatement","src":"11596:26:38"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:4:38","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11791:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:38","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11787:3:38"},"nodeType":"YulFunctionCall","src":"11787:11:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11804:2:38","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11800:3:38"},"nodeType":"YulFunctionCall","src":"11800:7:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11783:3:38"},"nodeType":"YulFunctionCall","src":"11783:25:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:38"},"nodeType":"YulFunctionCall","src":"11770:39:38"},"nodeType":"YulExpressionStatement","src":"11770:39:38"}]},"nodeType":"YulCase","src":"9856:1967:38","value":{"kind":"number","nodeType":"YulLiteral","src":"9861:1:38","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11927:291:38","statements":[{"nodeType":"YulAssignment","src":"11945:24:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11964:4:38","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11958:5:38"},"nodeType":"YulFunctionCall","src":"11958:11:38"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11945:9:38"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12139:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"12150:1:38","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12132:6:38"},"nodeType":"YulFunctionCall","src":"12132:20:38"},"nodeType":"YulExpressionStatement","src":"12132:20:38"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12177:4:38","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12187:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"12198:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:38"},"nodeType":"YulFunctionCall","src":"12183:20:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12170:6:38"},"nodeType":"YulFunctionCall","src":"12170:34:38"},"nodeType":"YulExpressionStatement","src":"12170:34:38"}]},"nodeType":"YulCase","src":"11919:299:38","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9835:7:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9828:6:38"},"nodeType":"YulFunctionCall","src":"9828:15:38"},"nodeType":"YulSwitch","src":"9821:2397:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":6416,"isOffset":false,"isSlot":false,"src":"11328:6:38","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"10688:7:38","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"11127:7:38","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"11614:7:38","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"9835:7:38","valueSize":1},{"declaration":6418,"isOffset":false,"isSlot":false,"src":"11379:6:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"10019:9:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"11039:9:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"11603:9:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"11945:9:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"12139:9:38","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"12187:9:38","valueSize":1}],"id":6447,"nodeType":"InlineAssembly","src":"9798:2430:38"},{"expression":{"id":6448,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"12245:9:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6424,"id":6449,"nodeType":"Return","src":"12238:16:38"}]},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9466:5:38","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"_bytes","nameLocation":"9494:6:38","nodeType":"VariableDeclaration","scope":6451,"src":"9481:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6415,"name":"bytes","nodeType":"ElementaryTypeName","src":"9481:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6418,"mutability":"mutable","name":"_start","nameLocation":"9518:6:38","nodeType":"VariableDeclaration","scope":6451,"src":"9510:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6417,"name":"uint256","nodeType":"ElementaryTypeName","src":"9510:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6420,"mutability":"mutable","name":"_length","nameLocation":"9542:7:38","nodeType":"VariableDeclaration","scope":6451,"src":"9534:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6419,"name":"uint256","nodeType":"ElementaryTypeName","src":"9534:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9471:84:38"},"returnParameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"9603:12:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6422,"name":"bytes","nodeType":"ElementaryTypeName","src":"9603:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9602:14:38"},"scope":6720,"src":"9457:2804:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6476,"nodeType":"Block","src":"12355:266:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6461,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"12373:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12380:6:38","memberName":"length","nodeType":"MemberAccess","src":"12373:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6463,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"12390:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12399:2:38","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12390:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12373:28:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12403:23:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":6460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12365:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12365:62:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6469,"nodeType":"ExpressionStatement","src":"12365:62:38"},{"assignments":[6471],"declarations":[{"constant":false,"id":6471,"mutability":"mutable","name":"tempAddress","nameLocation":"12445:11:38","nodeType":"VariableDeclaration","scope":6476,"src":"12437:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6470,"name":"address","nodeType":"ElementaryTypeName","src":"12437:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6472,"nodeType":"VariableDeclarationStatement","src":"12437:19:38"},{"AST":{"nodeType":"YulBlock","src":"12476:110:38","statements":[{"nodeType":"YulAssignment","src":"12490:86:38","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12523:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"12531:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:38"},"nodeType":"YulFunctionCall","src":"12519:17:38"},{"name":"_start","nodeType":"YulIdentifier","src":"12538:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:38"},"nodeType":"YulFunctionCall","src":"12515:30:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12509:5:38"},"nodeType":"YulFunctionCall","src":"12509:37:38"},{"kind":"number","nodeType":"YulLiteral","src":"12548:27:38","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12505:3:38"},"nodeType":"YulFunctionCall","src":"12505:71:38"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12490:11:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6453,"isOffset":false,"isSlot":false,"src":"12523:6:38","valueSize":1},{"declaration":6455,"isOffset":false,"isSlot":false,"src":"12538:6:38","valueSize":1},{"declaration":6471,"isOffset":false,"isSlot":false,"src":"12490:11:38","valueSize":1}],"id":6473,"nodeType":"InlineAssembly","src":"12467:119:38"},{"expression":{"id":6474,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"12603:11:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6459,"id":6475,"nodeType":"Return","src":"12596:18:38"}]},"id":6477,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12276:9:38","nodeType":"FunctionDefinition","parameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"_bytes","nameLocation":"12299:6:38","nodeType":"VariableDeclaration","scope":6477,"src":"12286:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6452,"name":"bytes","nodeType":"ElementaryTypeName","src":"12286:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6455,"mutability":"mutable","name":"_start","nameLocation":"12315:6:38","nodeType":"VariableDeclaration","scope":6477,"src":"12307:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12307:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12285:37:38"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6477,"src":"12346:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6457,"name":"address","nodeType":"ElementaryTypeName","src":"12346:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12345:9:38"},"scope":6720,"src":"12267:354:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6502,"nodeType":"Block","src":"12711:218:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6487,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"12729:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12736:6:38","memberName":"length","nodeType":"MemberAccess","src":"12729:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6489,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"12746:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12755:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12746:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12729:27:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12759:21:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":6486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12721:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12721:60:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6495,"nodeType":"ExpressionStatement","src":"12721:60:38"},{"assignments":[6497],"declarations":[{"constant":false,"id":6497,"mutability":"mutable","name":"tempUint","nameLocation":"12797:8:38","nodeType":"VariableDeclaration","scope":6502,"src":"12791:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6496,"name":"uint8","nodeType":"ElementaryTypeName","src":"12791:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6498,"nodeType":"VariableDeclarationStatement","src":"12791:14:38"},{"AST":{"nodeType":"YulBlock","src":"12825:72:38","statements":[{"nodeType":"YulAssignment","src":"12839:48:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12865:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"12873:3:38","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12861:3:38"},"nodeType":"YulFunctionCall","src":"12861:16:38"},{"name":"_start","nodeType":"YulIdentifier","src":"12879:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:38"},"nodeType":"YulFunctionCall","src":"12857:29:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12851:5:38"},"nodeType":"YulFunctionCall","src":"12851:36:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12839:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6479,"isOffset":false,"isSlot":false,"src":"12865:6:38","valueSize":1},{"declaration":6481,"isOffset":false,"isSlot":false,"src":"12879:6:38","valueSize":1},{"declaration":6497,"isOffset":false,"isSlot":false,"src":"12839:8:38","valueSize":1}],"id":6499,"nodeType":"InlineAssembly","src":"12816:81:38"},{"expression":{"id":6500,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"12914:8:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6485,"id":6501,"nodeType":"Return","src":"12907:15:38"}]},"id":6503,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12636:7:38","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"_bytes","nameLocation":"12657:6:38","nodeType":"VariableDeclaration","scope":6503,"src":"12644:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6478,"name":"bytes","nodeType":"ElementaryTypeName","src":"12644:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6481,"mutability":"mutable","name":"_start","nameLocation":"12673:6:38","nodeType":"VariableDeclaration","scope":6503,"src":"12665:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6480,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12643:37:38"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6503,"src":"12704:5:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6483,"name":"uint8","nodeType":"ElementaryTypeName","src":"12704:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12703:7:38"},"scope":6720,"src":"12627:302:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6528,"nodeType":"Block","src":"13021:219:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6513,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"13039:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13046:6:38","memberName":"length","nodeType":"MemberAccess","src":"13039:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"13056:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13065:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13056:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13039:27:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13068:22:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":6512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13031:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13031:60:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"ExpressionStatement","src":"13031:60:38"},{"assignments":[6523],"declarations":[{"constant":false,"id":6523,"mutability":"mutable","name":"tempUint","nameLocation":"13108:8:38","nodeType":"VariableDeclaration","scope":6528,"src":"13101:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6522,"name":"uint16","nodeType":"ElementaryTypeName","src":"13101:6:38","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":6524,"nodeType":"VariableDeclarationStatement","src":"13101:15:38"},{"AST":{"nodeType":"YulBlock","src":"13136:72:38","statements":[{"nodeType":"YulAssignment","src":"13150:48:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13176:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"13184:3:38","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13172:3:38"},"nodeType":"YulFunctionCall","src":"13172:16:38"},{"name":"_start","nodeType":"YulIdentifier","src":"13190:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13168:3:38"},"nodeType":"YulFunctionCall","src":"13168:29:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13162:5:38"},"nodeType":"YulFunctionCall","src":"13162:36:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13150:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6505,"isOffset":false,"isSlot":false,"src":"13176:6:38","valueSize":1},{"declaration":6507,"isOffset":false,"isSlot":false,"src":"13190:6:38","valueSize":1},{"declaration":6523,"isOffset":false,"isSlot":false,"src":"13150:8:38","valueSize":1}],"id":6525,"nodeType":"InlineAssembly","src":"13127:81:38"},{"expression":{"id":6526,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"13225:8:38","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6511,"id":6527,"nodeType":"Return","src":"13218:15:38"}]},"id":6529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12944:8:38","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"_bytes","nameLocation":"12966:6:38","nodeType":"VariableDeclaration","scope":6529,"src":"12953:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6504,"name":"bytes","nodeType":"ElementaryTypeName","src":"12953:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6507,"mutability":"mutable","name":"_start","nameLocation":"12982:6:38","nodeType":"VariableDeclaration","scope":6529,"src":"12974:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"12974:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12952:37:38"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6529,"src":"13013:6:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6509,"name":"uint16","nodeType":"ElementaryTypeName","src":"13013:6:38","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13012:8:38"},"scope":6720,"src":"12935:305:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6554,"nodeType":"Block","src":"13332:219:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6539,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"13350:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13357:6:38","memberName":"length","nodeType":"MemberAccess","src":"13350:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6541,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"13367:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13367:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:27:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13379:22:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":6538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13342:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13342:60:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6547,"nodeType":"ExpressionStatement","src":"13342:60:38"},{"assignments":[6549],"declarations":[{"constant":false,"id":6549,"mutability":"mutable","name":"tempUint","nameLocation":"13419:8:38","nodeType":"VariableDeclaration","scope":6554,"src":"13412:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6548,"name":"uint32","nodeType":"ElementaryTypeName","src":"13412:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":6550,"nodeType":"VariableDeclarationStatement","src":"13412:15:38"},{"AST":{"nodeType":"YulBlock","src":"13447:72:38","statements":[{"nodeType":"YulAssignment","src":"13461:48:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13487:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"13495:3:38","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13483:3:38"},"nodeType":"YulFunctionCall","src":"13483:16:38"},{"name":"_start","nodeType":"YulIdentifier","src":"13501:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:38"},"nodeType":"YulFunctionCall","src":"13479:29:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13473:5:38"},"nodeType":"YulFunctionCall","src":"13473:36:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13461:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6531,"isOffset":false,"isSlot":false,"src":"13487:6:38","valueSize":1},{"declaration":6533,"isOffset":false,"isSlot":false,"src":"13501:6:38","valueSize":1},{"declaration":6549,"isOffset":false,"isSlot":false,"src":"13461:8:38","valueSize":1}],"id":6551,"nodeType":"InlineAssembly","src":"13438:81:38"},{"expression":{"id":6552,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"13536:8:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6537,"id":6553,"nodeType":"Return","src":"13529:15:38"}]},"id":6555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13255:8:38","nodeType":"FunctionDefinition","parameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"_bytes","nameLocation":"13277:6:38","nodeType":"VariableDeclaration","scope":6555,"src":"13264:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6530,"name":"bytes","nodeType":"ElementaryTypeName","src":"13264:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6533,"mutability":"mutable","name":"_start","nameLocation":"13293:6:38","nodeType":"VariableDeclaration","scope":6555,"src":"13285:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6532,"name":"uint256","nodeType":"ElementaryTypeName","src":"13285:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:37:38"},"returnParameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6555,"src":"13324:6:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6535,"name":"uint32","nodeType":"ElementaryTypeName","src":"13324:6:38","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13323:8:38"},"scope":6720,"src":"13246:305:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6580,"nodeType":"Block","src":"13643:219:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6565,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"13661:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13668:6:38","memberName":"length","nodeType":"MemberAccess","src":"13661:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6567,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"13678:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13687:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13678:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13661:27:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13690:22:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":6564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13653:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13653:60:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6573,"nodeType":"ExpressionStatement","src":"13653:60:38"},{"assignments":[6575],"declarations":[{"constant":false,"id":6575,"mutability":"mutable","name":"tempUint","nameLocation":"13730:8:38","nodeType":"VariableDeclaration","scope":6580,"src":"13723:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6574,"name":"uint64","nodeType":"ElementaryTypeName","src":"13723:6:38","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":6576,"nodeType":"VariableDeclarationStatement","src":"13723:15:38"},{"AST":{"nodeType":"YulBlock","src":"13758:72:38","statements":[{"nodeType":"YulAssignment","src":"13772:48:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13798:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"13806:3:38","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:38"},"nodeType":"YulFunctionCall","src":"13794:16:38"},{"name":"_start","nodeType":"YulIdentifier","src":"13812:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:38"},"nodeType":"YulFunctionCall","src":"13790:29:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13784:5:38"},"nodeType":"YulFunctionCall","src":"13784:36:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13772:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6557,"isOffset":false,"isSlot":false,"src":"13798:6:38","valueSize":1},{"declaration":6559,"isOffset":false,"isSlot":false,"src":"13812:6:38","valueSize":1},{"declaration":6575,"isOffset":false,"isSlot":false,"src":"13772:8:38","valueSize":1}],"id":6577,"nodeType":"InlineAssembly","src":"13749:81:38"},{"expression":{"id":6578,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"13847:8:38","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6563,"id":6579,"nodeType":"Return","src":"13840:15:38"}]},"id":6581,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13566:8:38","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"_bytes","nameLocation":"13588:6:38","nodeType":"VariableDeclaration","scope":6581,"src":"13575:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6556,"name":"bytes","nodeType":"ElementaryTypeName","src":"13575:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6559,"mutability":"mutable","name":"_start","nameLocation":"13604:6:38","nodeType":"VariableDeclaration","scope":6581,"src":"13596:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6558,"name":"uint256","nodeType":"ElementaryTypeName","src":"13596:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13574:37:38"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6581,"src":"13635:6:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6561,"name":"uint64","nodeType":"ElementaryTypeName","src":"13635:6:38","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13634:8:38"},"scope":6720,"src":"13557:305:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6606,"nodeType":"Block","src":"13954:220:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6591,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"13972:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13979:6:38","memberName":"length","nodeType":"MemberAccess","src":"13972:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6593,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"13989:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:38","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13989:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13972:28:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14002:22:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":6590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13964:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13964:61:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"ExpressionStatement","src":"13964:61:38"},{"assignments":[6601],"declarations":[{"constant":false,"id":6601,"mutability":"mutable","name":"tempUint","nameLocation":"14042:8:38","nodeType":"VariableDeclaration","scope":6606,"src":"14035:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6600,"name":"uint96","nodeType":"ElementaryTypeName","src":"14035:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":6602,"nodeType":"VariableDeclarationStatement","src":"14035:15:38"},{"AST":{"nodeType":"YulBlock","src":"14070:72:38","statements":[{"nodeType":"YulAssignment","src":"14084:48:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14110:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"14118:3:38","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14106:3:38"},"nodeType":"YulFunctionCall","src":"14106:16:38"},{"name":"_start","nodeType":"YulIdentifier","src":"14124:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:38"},"nodeType":"YulFunctionCall","src":"14102:29:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14096:5:38"},"nodeType":"YulFunctionCall","src":"14096:36:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14084:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6583,"isOffset":false,"isSlot":false,"src":"14110:6:38","valueSize":1},{"declaration":6585,"isOffset":false,"isSlot":false,"src":"14124:6:38","valueSize":1},{"declaration":6601,"isOffset":false,"isSlot":false,"src":"14084:8:38","valueSize":1}],"id":6603,"nodeType":"InlineAssembly","src":"14061:81:38"},{"expression":{"id":6604,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"14159:8:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6589,"id":6605,"nodeType":"Return","src":"14152:15:38"}]},"id":6607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13877:8:38","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"_bytes","nameLocation":"13899:6:38","nodeType":"VariableDeclaration","scope":6607,"src":"13886:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6582,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6585,"mutability":"mutable","name":"_start","nameLocation":"13915:6:38","nodeType":"VariableDeclaration","scope":6607,"src":"13907:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"13907:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13885:37:38"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6607,"src":"13946:6:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6587,"name":"uint96","nodeType":"ElementaryTypeName","src":"13946:6:38","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13945:8:38"},"scope":6720,"src":"13868:306:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6632,"nodeType":"Block","src":"14268:223:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6617,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"14286:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14293:6:38","memberName":"length","nodeType":"MemberAccess","src":"14286:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6619,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"14303:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14303:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14286:28:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14316:23:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":6616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14278:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14278:62:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6625,"nodeType":"ExpressionStatement","src":"14278:62:38"},{"assignments":[6627],"declarations":[{"constant":false,"id":6627,"mutability":"mutable","name":"tempUint","nameLocation":"14358:8:38","nodeType":"VariableDeclaration","scope":6632,"src":"14350:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6626,"name":"uint128","nodeType":"ElementaryTypeName","src":"14350:7:38","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":6628,"nodeType":"VariableDeclarationStatement","src":"14350:16:38"},{"AST":{"nodeType":"YulBlock","src":"14386:73:38","statements":[{"nodeType":"YulAssignment","src":"14400:49:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14426:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"14434:4:38","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14422:3:38"},"nodeType":"YulFunctionCall","src":"14422:17:38"},{"name":"_start","nodeType":"YulIdentifier","src":"14441:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:38"},"nodeType":"YulFunctionCall","src":"14418:30:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14412:5:38"},"nodeType":"YulFunctionCall","src":"14412:37:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14400:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6609,"isOffset":false,"isSlot":false,"src":"14426:6:38","valueSize":1},{"declaration":6611,"isOffset":false,"isSlot":false,"src":"14441:6:38","valueSize":1},{"declaration":6627,"isOffset":false,"isSlot":false,"src":"14400:8:38","valueSize":1}],"id":6629,"nodeType":"InlineAssembly","src":"14377:82:38"},{"expression":{"id":6630,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"14476:8:38","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6615,"id":6631,"nodeType":"Return","src":"14469:15:38"}]},"id":6633,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"14189:9:38","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"_bytes","nameLocation":"14212:6:38","nodeType":"VariableDeclaration","scope":6633,"src":"14199:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6608,"name":"bytes","nodeType":"ElementaryTypeName","src":"14199:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6611,"mutability":"mutable","name":"_start","nameLocation":"14228:6:38","nodeType":"VariableDeclaration","scope":6633,"src":"14220:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"14220:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14198:37:38"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6633,"src":"14259:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6613,"name":"uint128","nodeType":"ElementaryTypeName","src":"14259:7:38","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14258:9:38"},"scope":6720,"src":"14180:311:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6658,"nodeType":"Block","src":"14585:223:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6643,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"14603:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14610:6:38","memberName":"length","nodeType":"MemberAccess","src":"14603:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6645,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"14620:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14620:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14603:28:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14633:23:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":6642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14595:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14595:62:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6651,"nodeType":"ExpressionStatement","src":"14595:62:38"},{"assignments":[6653],"declarations":[{"constant":false,"id":6653,"mutability":"mutable","name":"tempUint","nameLocation":"14675:8:38","nodeType":"VariableDeclaration","scope":6658,"src":"14667:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"14667:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6654,"nodeType":"VariableDeclarationStatement","src":"14667:16:38"},{"AST":{"nodeType":"YulBlock","src":"14703:73:38","statements":[{"nodeType":"YulAssignment","src":"14717:49:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14743:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"14751:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14739:3:38"},"nodeType":"YulFunctionCall","src":"14739:17:38"},{"name":"_start","nodeType":"YulIdentifier","src":"14758:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14735:3:38"},"nodeType":"YulFunctionCall","src":"14735:30:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14729:5:38"},"nodeType":"YulFunctionCall","src":"14729:37:38"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14717:8:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6635,"isOffset":false,"isSlot":false,"src":"14743:6:38","valueSize":1},{"declaration":6637,"isOffset":false,"isSlot":false,"src":"14758:6:38","valueSize":1},{"declaration":6653,"isOffset":false,"isSlot":false,"src":"14717:8:38","valueSize":1}],"id":6655,"nodeType":"InlineAssembly","src":"14694:82:38"},{"expression":{"id":6656,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"14793:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6641,"id":6657,"nodeType":"Return","src":"14786:15:38"}]},"id":6659,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14506:9:38","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"_bytes","nameLocation":"14529:6:38","nodeType":"VariableDeclaration","scope":6659,"src":"14516:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6634,"name":"bytes","nodeType":"ElementaryTypeName","src":"14516:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6637,"mutability":"mutable","name":"_start","nameLocation":"14545:6:38","nodeType":"VariableDeclaration","scope":6659,"src":"14537:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"14537:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14515:37:38"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6659,"src":"14576:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"14576:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14575:9:38"},"scope":6720,"src":"14497:311:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6684,"nodeType":"Block","src":"14902:232:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6669,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"14920:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14927:6:38","memberName":"length","nodeType":"MemberAccess","src":"14920:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6671,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"14937:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14946:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14937:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14920:28:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14950:23:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":6668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14912:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14912:62:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"ExpressionStatement","src":"14912:62:38"},{"assignments":[6679],"declarations":[{"constant":false,"id":6679,"mutability":"mutable","name":"tempBytes32","nameLocation":"14992:11:38","nodeType":"VariableDeclaration","scope":6684,"src":"14984:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14984:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6680,"nodeType":"VariableDeclarationStatement","src":"14984:19:38"},{"AST":{"nodeType":"YulBlock","src":"15023:76:38","statements":[{"nodeType":"YulAssignment","src":"15037:52:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"15066:6:38"},{"kind":"number","nodeType":"YulLiteral","src":"15074:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:38"},"nodeType":"YulFunctionCall","src":"15062:17:38"},{"name":"_start","nodeType":"YulIdentifier","src":"15081:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15058:3:38"},"nodeType":"YulFunctionCall","src":"15058:30:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15052:5:38"},"nodeType":"YulFunctionCall","src":"15052:37:38"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"15037:11:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6661,"isOffset":false,"isSlot":false,"src":"15066:6:38","valueSize":1},{"declaration":6663,"isOffset":false,"isSlot":false,"src":"15081:6:38","valueSize":1},{"declaration":6679,"isOffset":false,"isSlot":false,"src":"15037:11:38","valueSize":1}],"id":6681,"nodeType":"InlineAssembly","src":"15014:85:38"},{"expression":{"id":6682,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"15116:11:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6667,"id":6683,"nodeType":"Return","src":"15109:18:38"}]},"id":6685,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14823:9:38","nodeType":"FunctionDefinition","parameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"_bytes","nameLocation":"14846:6:38","nodeType":"VariableDeclaration","scope":6685,"src":"14833:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6660,"name":"bytes","nodeType":"ElementaryTypeName","src":"14833:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6663,"mutability":"mutable","name":"_start","nameLocation":"14862:6:38","nodeType":"VariableDeclaration","scope":6685,"src":"14854:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"14854:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14832:37:38"},"returnParameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6685,"src":"14893:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14893:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14892:9:38"},"scope":6720,"src":"14814:320:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6701,"nodeType":"Block","src":"15233:1323:38","statements":[{"assignments":[6695],"declarations":[{"constant":false,"id":6695,"mutability":"mutable","name":"success","nameLocation":"15248:7:38","nodeType":"VariableDeclaration","scope":6701,"src":"15243:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6694,"name":"bool","nodeType":"ElementaryTypeName","src":"15243:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6697,"initialValue":{"hexValue":"74727565","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15258:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15243:19:38"},{"AST":{"nodeType":"YulBlock","src":"15282:1243:38","statements":[{"nodeType":"YulVariableDeclaration","src":"15296:30:38","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15316:9:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15310:5:38"},"nodeType":"YulFunctionCall","src":"15310:16:38"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15300:6:38","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15459:961:38","statements":[{"nodeType":"YulVariableDeclaration","src":"15688:11:38","value":{"kind":"number","nodeType":"YulLiteral","src":"15698:1:38","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15692:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15717:30:38","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15731:9:38"},{"kind":"number","nodeType":"YulLiteral","src":"15742:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15727:3:38"},"nodeType":"YulFunctionCall","src":"15727:20:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15721:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15764:26:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15779:2:38"},{"name":"length","nodeType":"YulIdentifier","src":"15783:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:38"},"nodeType":"YulFunctionCall","src":"15775:15:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15768:3:38","type":""}]},{"body":{"nodeType":"YulBlock","src":"16122:284:38","statements":[{"body":{"nodeType":"YulBlock","src":"16258:130:38","statements":[{"nodeType":"YulAssignment","src":"16322:12:38","value":{"kind":"number","nodeType":"YulLiteral","src":"16333:1:38","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16322:7:38"}]},{"nodeType":"YulAssignment","src":"16359:7:38","value":{"kind":"number","nodeType":"YulLiteral","src":"16365:1:38","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16359:2:38"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16241:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16235:5:38"},"nodeType":"YulFunctionCall","src":"16235:9:38"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16252:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16246:5:38"},"nodeType":"YulFunctionCall","src":"16246:9:38"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16232:2:38"},"nodeType":"YulFunctionCall","src":"16232:24:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16225:6:38"},"nodeType":"YulFunctionCall","src":"16225:32:38"},"nodeType":"YulIf","src":"16222:166:38"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16004:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"16008:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16001:2:38"},"nodeType":"YulFunctionCall","src":"16001:11:38"},{"name":"cb","nodeType":"YulIdentifier","src":"16014:2:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15997:3:38"},"nodeType":"YulFunctionCall","src":"15997:20:38"},{"kind":"number","nodeType":"YulLiteral","src":"16019:1:38","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15994:2:38"},"nodeType":"YulFunctionCall","src":"15994:27:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16022:99:38","statements":[{"nodeType":"YulAssignment","src":"16044:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16054:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"16058:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16050:3:38"},"nodeType":"YulFunctionCall","src":"16050:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"16044:2:38"}]},{"nodeType":"YulAssignment","src":"16084:19:38","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16094:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"16098:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16090:3:38"},"nodeType":"YulFunctionCall","src":"16090:13:38"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"16084:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"15812:181:38","statements":[{"nodeType":"YulVariableDeclaration","src":"15834:31:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15848:10:38"},{"kind":"number","nodeType":"YulLiteral","src":"15860:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:38"},"nodeType":"YulFunctionCall","src":"15844:21:38"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15838:2:38","type":""}]}]},"src":"15808:598:38"}]},"nodeType":"YulCase","src":"15452:968:38","value":{"kind":"number","nodeType":"YulLiteral","src":"15457:1:38","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16441:74:38","statements":[{"nodeType":"YulAssignment","src":"16489:12:38","value":{"kind":"number","nodeType":"YulLiteral","src":"16500:1:38","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16489:7:38"}]}]},"nodeType":"YulCase","src":"16433:82:38","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15413:6:38"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15427:10:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15421:5:38"},"nodeType":"YulFunctionCall","src":"15421:17:38"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15410:2:38"},"nodeType":"YulFunctionCall","src":"15410:29:38"},"nodeType":"YulSwitch","src":"15403:1112:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":6689,"isOffset":false,"isSlot":false,"src":"15427:10:38","valueSize":1},{"declaration":6689,"isOffset":false,"isSlot":false,"src":"15848:10:38","valueSize":1},{"declaration":6687,"isOffset":false,"isSlot":false,"src":"15316:9:38","valueSize":1},{"declaration":6687,"isOffset":false,"isSlot":false,"src":"15731:9:38","valueSize":1},{"declaration":6695,"isOffset":false,"isSlot":false,"src":"16322:7:38","valueSize":1},{"declaration":6695,"isOffset":false,"isSlot":false,"src":"16489:7:38","valueSize":1}],"id":6698,"nodeType":"InlineAssembly","src":"15273:1252:38"},{"expression":{"id":6699,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"16542:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6693,"id":6700,"nodeType":"Return","src":"16535:14:38"}]},"id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"15149:5:38","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"_preBytes","nameLocation":"15168:9:38","nodeType":"VariableDeclaration","scope":6702,"src":"15155:22:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6686,"name":"bytes","nodeType":"ElementaryTypeName","src":"15155:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6689,"mutability":"mutable","name":"_postBytes","nameLocation":"15192:10:38","nodeType":"VariableDeclaration","scope":6702,"src":"15179:23:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6688,"name":"bytes","nodeType":"ElementaryTypeName","src":"15179:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15154:49:38"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6702,"src":"15227:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6691,"name":"bool","nodeType":"ElementaryTypeName","src":"15227:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15226:6:38"},"scope":6720,"src":"15140:1416:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6718,"nodeType":"Block","src":"16713:2559:38","statements":[{"assignments":[6712],"declarations":[{"constant":false,"id":6712,"mutability":"mutable","name":"success","nameLocation":"16728:7:38","nodeType":"VariableDeclaration","scope":6718,"src":"16723:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6711,"name":"bool","nodeType":"ElementaryTypeName","src":"16723:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6714,"initialValue":{"hexValue":"74727565","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16738:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16723:19:38"},{"AST":{"nodeType":"YulBlock","src":"16762:2479:38","statements":[{"nodeType":"YulVariableDeclaration","src":"16821:34:38","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16840:14:38"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16834:5:38"},"nodeType":"YulFunctionCall","src":"16834:21:38"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16825:5:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16946:76:38","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16969:5:38"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16984:5:38","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17002:5:38"},{"kind":"number","nodeType":"YulLiteral","src":"17009:1:38","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16998:3:38"},"nodeType":"YulFunctionCall","src":"16998:13:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16991:6:38"},"nodeType":"YulFunctionCall","src":"16991:21:38"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16980:3:38"},"nodeType":"YulFunctionCall","src":"16980:33:38"},{"kind":"number","nodeType":"YulLiteral","src":"17015:1:38","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16976:3:38"},"nodeType":"YulFunctionCall","src":"16976:41:38"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16965:3:38"},"nodeType":"YulFunctionCall","src":"16965:53:38"},{"kind":"number","nodeType":"YulLiteral","src":"17020:1:38","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16961:3:38"},"nodeType":"YulFunctionCall","src":"16961:61:38"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16950:7:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17035:32:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17056:10:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17050:5:38"},"nodeType":"YulFunctionCall","src":"17050:17:38"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"17039:7:38","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17191:1945:38","statements":[{"body":{"nodeType":"YulBlock","src":"17502:1620:38","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17574:340:38","statements":[{"nodeType":"YulAssignment","src":"17667:38:38","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17684:5:38"},{"kind":"number","nodeType":"YulLiteral","src":"17691:5:38","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17680:3:38"},"nodeType":"YulFunctionCall","src":"17680:17:38"},{"kind":"number","nodeType":"YulLiteral","src":"17699:5:38","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17676:3:38"},"nodeType":"YulFunctionCall","src":"17676:29:38"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17667:5:38"}]},{"body":{"nodeType":"YulBlock","src":"17782:110:38","statements":[{"nodeType":"YulAssignment","src":"17854:12:38","value":{"kind":"number","nodeType":"YulLiteral","src":"17865:1:38","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17854:7:38"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17744:5:38"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17761:10:38"},{"kind":"number","nodeType":"YulLiteral","src":"17773:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17757:3:38"},"nodeType":"YulFunctionCall","src":"17757:21:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17751:5:38"},"nodeType":"YulFunctionCall","src":"17751:28:38"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17741:2:38"},"nodeType":"YulFunctionCall","src":"17741:39:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17734:6:38"},"nodeType":"YulFunctionCall","src":"17734:47:38"},"nodeType":"YulIf","src":"17731:161:38"}]},"nodeType":"YulCase","src":"17567:347:38","value":{"kind":"number","nodeType":"YulLiteral","src":"17572:1:38","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17943:1161:38","statements":[{"nodeType":"YulVariableDeclaration","src":"18212:11:38","value":{"kind":"number","nodeType":"YulLiteral","src":"18222:1:38","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"18216:2:38","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18336:3:38","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18341:14:38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18329:6:38"},"nodeType":"YulFunctionCall","src":"18329:27:38"},"nodeType":"YulExpressionStatement","src":"18329:27:38"},{"nodeType":"YulVariableDeclaration","src":"18381:30:38","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18401:3:38","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18406:4:38","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18391:9:38"},"nodeType":"YulFunctionCall","src":"18391:20:38"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18385:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18437:31:38","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18451:10:38"},{"kind":"number","nodeType":"YulLiteral","src":"18463:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18447:3:38"},"nodeType":"YulFunctionCall","src":"18447:21:38"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18441:2:38","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18493:27:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18508:2:38"},{"name":"mlength","nodeType":"YulIdentifier","src":"18512:7:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18504:3:38"},"nodeType":"YulFunctionCall","src":"18504:16:38"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18497:3:38","type":""}]},{"body":{"nodeType":"YulBlock","src":"18828:254:38","statements":[{"body":{"nodeType":"YulBlock","src":"18894:162:38","statements":[{"nodeType":"YulAssignment","src":"18974:12:38","value":{"kind":"number","nodeType":"YulLiteral","src":"18985:1:38","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18974:7:38"}]},{"nodeType":"YulAssignment","src":"19019:7:38","value":{"kind":"number","nodeType":"YulLiteral","src":"19025:1:38","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"19019:2:38"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18877:2:38"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18871:5:38"},"nodeType":"YulFunctionCall","src":"18871:9:38"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18888:2:38"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18882:5:38"},"nodeType":"YulFunctionCall","src":"18882:9:38"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18868:2:38"},"nodeType":"YulFunctionCall","src":"18868:24:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18861:6:38"},"nodeType":"YulFunctionCall","src":"18861:32:38"},"nodeType":"YulIf","src":"18858:198:38"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18689:2:38"},{"name":"end","nodeType":"YulIdentifier","src":"18693:3:38"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18686:2:38"},"nodeType":"YulFunctionCall","src":"18686:11:38"},{"name":"cb","nodeType":"YulIdentifier","src":"18699:2:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18682:3:38"},"nodeType":"YulFunctionCall","src":"18682:20:38"},{"kind":"number","nodeType":"YulLiteral","src":"18704:1:38","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18679:2:38"},"nodeType":"YulFunctionCall","src":"18679:27:38"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18707:120:38","statements":[{"nodeType":"YulAssignment","src":"18737:16:38","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18747:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:38","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:38"},"nodeType":"YulFunctionCall","src":"18743:10:38"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18737:2:38"}]},{"nodeType":"YulAssignment","src":"18782:19:38","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18792:2:38"},{"kind":"number","nodeType":"YulLiteral","src":"18796:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18788:3:38"},"nodeType":"YulFunctionCall","src":"18788:13:38"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18782:2:38"}]}]},"pre":{"nodeType":"YulBlock","src":"18676:2:38","statements":[]},"src":"18672:410:38"}]},"nodeType":"YulCase","src":"17935:1169:38","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17534:7:38"},{"kind":"number","nodeType":"YulLiteral","src":"17543:2:38","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17531:2:38"},"nodeType":"YulFunctionCall","src":"17531:15:38"},"nodeType":"YulSwitch","src":"17524:1580:38"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17492:7:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17485:6:38"},"nodeType":"YulFunctionCall","src":"17485:15:38"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17478:6:38"},"nodeType":"YulFunctionCall","src":"17478:23:38"},"nodeType":"YulIf","src":"17475:1647:38"}]},"nodeType":"YulCase","src":"17184:1952:38","value":{"kind":"number","nodeType":"YulLiteral","src":"17189:1:38","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19157:74:38","statements":[{"nodeType":"YulAssignment","src":"19205:12:38","value":{"kind":"number","nodeType":"YulLiteral","src":"19216:1:38","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19205:7:38"}]}]},"nodeType":"YulCase","src":"19149:82:38","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17154:7:38"},{"name":"mlength","nodeType":"YulIdentifier","src":"17163:7:38"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17151:2:38"},"nodeType":"YulFunctionCall","src":"17151:20:38"},"nodeType":"YulSwitch","src":"17144:2087:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":6706,"isOffset":false,"isSlot":false,"src":"17056:10:38","valueSize":1},{"declaration":6706,"isOffset":false,"isSlot":false,"src":"17761:10:38","valueSize":1},{"declaration":6706,"isOffset":false,"isSlot":false,"src":"18451:10:38","valueSize":1},{"declaration":6704,"isOffset":false,"isSlot":true,"src":"16840:14:38","suffix":"slot","valueSize":1},{"declaration":6704,"isOffset":false,"isSlot":true,"src":"18341:14:38","suffix":"slot","valueSize":1},{"declaration":6712,"isOffset":false,"isSlot":false,"src":"17854:7:38","valueSize":1},{"declaration":6712,"isOffset":false,"isSlot":false,"src":"18974:7:38","valueSize":1},{"declaration":6712,"isOffset":false,"isSlot":false,"src":"19205:7:38","valueSize":1}],"id":6715,"nodeType":"InlineAssembly","src":"16753:2488:38"},{"expression":{"id":6716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"19258:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6710,"id":6717,"nodeType":"Return","src":"19251:14:38"}]},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16571:12:38","nodeType":"FunctionDefinition","parameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"_preBytes","nameLocation":"16607:9:38","nodeType":"VariableDeclaration","scope":6719,"src":"16593:23:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6703,"name":"bytes","nodeType":"ElementaryTypeName","src":"16593:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6706,"mutability":"mutable","name":"_postBytes","nameLocation":"16639:10:38","nodeType":"VariableDeclaration","scope":6719,"src":"16626:23:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6705,"name":"bytes","nodeType":"ElementaryTypeName","src":"16626:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16583:72:38"},"returnParameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6719,"src":"16703:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6708,"name":"bool","nodeType":"ElementaryTypeName","src":"16703:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16702:6:38"},"scope":6720,"src":"16562:2710:38","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6721,"src":"370:18904:38","usedErrors":[]}],"src":"336:18939:38"},"id":38}},"contracts":{"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"ERC725XCore":{"abi":[{"inputs":[],"name":"ERC725X_ContractDeploymentFailed","type":"error"},{"inputs":[],"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersEmptyArray","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC725X_InsufficientBalance","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInDelegateCall","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInStaticCall","type":"error"},{"inputs":[],"name":"ERC725X_NoContractBytecodeProvided","type":"error"},{"inputs":[{"internalType":"uint256","name":"operationTypeProvided","type":"uint256"}],"name":"ERC725X_UnknownOperationType","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","owner()":"8da5cb5b","renounceOwnership()":"715018a6","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725X_ContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_CreateOperationsRequireEmptyRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC725X_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInStaticCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_NoContractBytecodeProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationTypeProvided\",\"type\":\"uint256\"}],\"name\":\"ERC725X_UnknownOperationType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network> It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`. It also allows to deploy and create new contracts via both the `create` and `create2` opcodes. This is the basis for a smart contract based account system, but could also be used as a proxy account system.\",\"errors\":{\"ERC725X_ContractDeploymentFailed()\":[{\"details\":\"Reverts when contract deployment failed via {execute} or {executeBatch} functions, This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_CreateOperationsRequireEmptyRecipientAddress()\":[{\"details\":\"Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_ExecuteParametersEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\"}],\"ERC725X_ExecuteParametersLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas` array parameters provided when calling the {executeBatch} function.\"}],\"ERC725X_InsufficientBalance(uint256,uint256)\":[{\"details\":\"Reverts when trying to send more native tokens `value` than available in current `balance`.\",\"params\":{\"balance\":\"The balance of native tokens of the ERC725X smart contract.\",\"value\":\"The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\"}}],\"ERC725X_MsgValueDisallowedInDelegateCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`). Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\"}],\"ERC725X_MsgValueDisallowedInStaticCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`). Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\"}],\"ERC725X_NoContractBytecodeProvided()\":[{\"details\":\"Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_UnknownOperationType(uint256)\":[{\"details\":\"Reverts when the `operationTypeProvided` is none of the default operation types available. (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\",\"params\":{\"operationTypeProvided\":\"The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\"}}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}}},\"kind\":\"dev\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"custom:events\":\"- {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL). - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2).\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract. - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully. - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0. - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\",\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"custom:events\":\"- {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\",\"custom:requirements\":\"- All the array parameters provided MUST be equal and have the same length. - SHOULD only be callable by the {owner} of the contract. - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\",\"custom:warning\":\"- The `msg.value` should not be trusted for any method called with `operationType`: `DELEGATECALL` (4).\",\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Core implementation of ERC725X sub-standard, a generic executor.\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"}},\"kind\":\"user\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":\"ERC725XCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0x30faca9e584d40972ded6ef505f7b2ec86bef57ba382a461cf69939bb04a3879\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5384e205fe05e9174865600c69ff69c30bbdf764d66c5e5608343f6df92f24fa\",\"dweb:/ipfs/QmPXEuNg4GVrqiapuJsn7rGYxFkuSGKGff46MgTPRj5r43\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x98e44c24f108317e314fe431e9178c05c199383092e3e358c294fd3a6fa9f8e0\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://071667b6982a6bb749e2592ea9ab045bf076d428eef431f7abb8f2cb0137615d\",\"dweb:/ipfs/QmT9sNeKZLqHXkpwJt3KHvEar4gqXjNUnEhnGakPovNbBH\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ERC725YCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Core implementation of ERC725Y sub-standard, a general data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":\"ERC725YCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"OwnableUnset":{"abi":[{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"modified version of OpenZeppelin implementation, where: - _setOwner(address) function is internal, so this function can be used in constructor of contracts implementation (instead of using transferOwnership(address) - the contract does not inherit from Context contract\",\"errors\":{\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OwnableUnset\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":\"OwnableUnset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"IERC725X":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself). It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`. It also allows to deploy and create new contracts via both the `create` and `create2` opcodes. This is the basis for a smart contract based account system, but could also be used as a proxy account system.\",\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}}},\"kind\":\"dev\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"custom:warning\":\"Be aware that `msg.value` is persisting between the caller and the callee when using `DELEGATECALL` (`4`) as `operationType`.\",\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"custom:warning\":\"The `msg.value` should not be trusted for any method called with the batch with `operationType`: `DELEGATECALL` (4).\",\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for the ERC725X sub-standard, a generic executor.\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"}},\"kind\":\"user\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":\"IERC725X\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x98e44c24f108317e314fe431e9178c05c199383092e3e358c294fd3a6fa9f8e0\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://071667b6982a6bb749e2592ea9ab045bf076d428eef431f7abb8f2cb0137615d\",\"dweb:/ipfs/QmT9sNeKZLqHXkpwJt3KHvEar4gqXjNUnEhnGakPovNbBH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol":{"ILSP0ERC725Account":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"batchCalls(bytes[])":"6963d438"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\",\"kind\":\"dev\",\"methods\":{\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}}},\"title\":\"Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\":\"ILSP0ERC725Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x8a8baf99256d7af9389700213dff72587e3a7083da9f25fbe20940244da58a8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b203d51255de422125cfbe57c6acd8f8730d1df430b8cc838b8773e64e952f6d\",\"dweb:/ipfs/QmNMjDiUrgMAaRWM3PjZkRTQSgTQS1GRinwBDPESbvW2ER\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol":{"LSP0ERC725AccountCore":{"abi":[{"inputs":[],"name":"ERC725X_ContractDeploymentFailed","type":"error"},{"inputs":[],"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersEmptyArray","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC725X_InsufficientBalance","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInDelegateCall","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInStaticCall","type":"error"},{"inputs":[],"name":"ERC725X_NoContractBytecodeProvided","type":"error"},{"inputs":[{"internalType":"uint256","name":"operationTypeProvided","type":"uint256"}],"name":"ERC725X_UnknownOperationType","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"LSP14CallerNotPendingOwner","type":"error"},{"inputs":[],"name":"LSP14CannotTransferOwnershipToSelf","type":"error"},{"inputs":[],"name":"LSP14MustAcceptOwnershipInSeparateTransaction","type":"error"},{"inputs":[{"internalType":"uint256","name":"renounceOwnershipStart","type":"uint256"},{"internalType":"uint256","name":"renounceOwnershipEnd","type":"uint256"}],"name":"LSP14NotInRenounceOwnershipInterval","type":"error"},{"inputs":[{"internalType":"bool","name":"postCall","type":"bool"},{"internalType":"bytes4","name":"returnedStatus","type":"bytes4"}],"name":"LSP20CallVerificationFailed","type":"error"},{"inputs":[{"internalType":"bool","name":"postCall","type":"bool"}],"name":"LSP20CallingVerifierFailed","type":"error"},{"inputs":[{"internalType":"address","name":"logicVerifier","type":"address"}],"name":"LSP20EOACannotVerifyCall","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[],"name":"RenounceOwnershipStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"returnedStatus","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pendingNewOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"receivedData","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"returnedValues","type":"bytes"}],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY()":"ead3fbdf","RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD()":"01bfba61","acceptOwnership()":"79ba5097","batchCalls(bytes[])":"6963d438","execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","isValidSignature(bytes32,bytes)":"1626ba7e","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725X_ContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_CreateOperationsRequireEmptyRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC725X_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInStaticCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_NoContractBytecodeProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationTypeProvided\",\"type\":\"uint256\"}],\"name\":\"ERC725X_UnknownOperationType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP14CallerNotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14CannotTransferOwnershipToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14MustAcceptOwnershipInSeparateTransaction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipEnd\",\"type\":\"uint256\"}],\"name\":\"LSP14NotInRenounceOwnershipInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"postCall\",\"type\":\"bool\"},{\"internalType\":\"bytes4\",\"name\":\"returnedStatus\",\"type\":\"bytes4\"}],\"name\":\"LSP20CallVerificationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"postCall\",\"type\":\"bool\"}],\"name\":\"LSP20CallingVerifierFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logicVerifier\",\"type\":\"address\"}],\"name\":\"LSP20EOACannotVerifyCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RenounceOwnershipStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"returnedStatus\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingNewOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedValues\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\",\"errors\":{\"ERC725X_ContractDeploymentFailed()\":[{\"details\":\"Reverts when contract deployment failed via {execute} or {executeBatch} functions, This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_CreateOperationsRequireEmptyRecipientAddress()\":[{\"details\":\"Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_ExecuteParametersEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\"}],\"ERC725X_ExecuteParametersLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas` array parameters provided when calling the {executeBatch} function.\"}],\"ERC725X_InsufficientBalance(uint256,uint256)\":[{\"details\":\"Reverts when trying to send more native tokens `value` than available in current `balance`.\",\"params\":{\"balance\":\"The balance of native tokens of the ERC725X smart contract.\",\"value\":\"The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\"}}],\"ERC725X_MsgValueDisallowedInDelegateCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`). Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\"}],\"ERC725X_MsgValueDisallowedInStaticCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`). Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\"}],\"ERC725X_NoContractBytecodeProvided()\":[{\"details\":\"Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_UnknownOperationType(uint256)\":[{\"details\":\"Reverts when the `operationTypeProvided` is none of the default operation types available. (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\",\"params\":{\"operationTypeProvided\":\"The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\"}}],\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"LSP14CallerNotPendingOwner(address)\":[{\"details\":\"Reverts when the `caller` that is trying to accept ownership of the contract is not the pending owner.\",\"params\":{\"caller\":\"The address that tried to accept ownership.\"}}],\"LSP14CannotTransferOwnershipToSelf()\":[{\"details\":\"Reverts when trying to transfer ownership to the `address(this)`.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"details\":\"Reverts when pending owner accept ownership in the same transaction of transferring ownership.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"details\":\"Reverts when trying to renounce ownership before the initial confirmation delay.\",\"params\":{\"renounceOwnershipEnd\":\"The end timestamp when one can confirm the renouncement of ownership.\",\"renounceOwnershipStart\":\"The start timestamp when one can confirm the renouncement of ownership.\"}}],\"LSP20CallVerificationFailed(bool,bytes4)\":[{\"details\":\"reverts when the call to the owner does not return the LSP20 success value\",\"params\":{\"postCall\":\"True if the execution call was done, False otherwise\",\"returnedStatus\":\"The bytes4 decoded data returned by the logic verifier.\"}}],\"LSP20CallingVerifierFailed(bool)\":[{\"details\":\"reverts when the call to the owner fail with no revert reason\",\"params\":{\"postCall\":\"True if the execution call was done, False otherwise\"}}],\"LSP20EOACannotVerifyCall(address)\":[{\"details\":\"Reverts when the logic verifier is an Externally Owned Account (EOA) that cannot return the LSP20 success value.\",\"params\":{\"logicVerifier\":\"The address of the logic verifier\"}}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}},\"OwnershipRenounced()\":{\"details\":\"Emitted when the ownership of the contract has been renounced.\"},\"OwnershipTransferStarted(address,address)\":{\"details\":\"Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}},\"RenounceOwnershipStarted()\":{\"details\":\"Emitted when starting the {renounceOwnership(..)} 2-step process.\"},\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"custom:requirements\":\"- Only the {pendingOwner} can call this function. - When notifying the previous owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_SenderNotification]. - When notifying the new owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_RecipientNotification].\",\"details\":\"Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}. Once this function is called: - The current {owner()} will lose access to the functions restricted to the {owner()} only. - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\"},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"execute(uint256,address,uint256,bytes)\":{\"custom:events\":\"- {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2). - {UniversalReceiver} event when receiving native tokens.\",\"custom:requirements\":\"- Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully. - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`. - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\",\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"custom:events\":\"- {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). (each iteration) - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2) (each iteration) - {UniversalReceiver} event when receiving native tokens.\",\"custom:requirements\":\"- The length of the parameters provided must be equal. - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully. - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`. - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\",\"custom:warning\":\"- The `msg.value` should not be trusted for any method called within the batch with `operationType`: `DELEGATECALL` (4).\",\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"isValidSignature(bytes32,bytes)\":{\"custom:warning\":\"This function does not enforce by default the inclusion of the address of this contract in the signature digest. It is recommended that protocols or applications using this contract include the targeted address (= this contract) in the data to sign. To ensure that a signature is valid for a specific LSP0ERC725Account and prevent signatures from the same EOA to be replayed across different LSP0ERC725Accounts.\",\"details\":\"Handles two cases: 1. If the owner is an EOA, recovers an address from the hash and the signature provided:      - Returns the `_ERC1271_SUCCESSVALUE` if the address recovered is the same as the owner, indicating that it was a valid signature.      - If the address is different, it returns the `_ERC1271_FAILVALUE` indicating that the signature is not valid. 2. If the owner is a smart contract, it forwards the call of {isValidSignature()} to the owner contract:      - If the contract fails or returns the `_ERC1271_FAILVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_FAILVALUE`, indicating that the signature is not valid.      - If the {isValidSignature()} on the owner returned the `_ERC1271_SUCCESSVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_SUCCESSVALUE`, indicating that it's a valid signature.\",\"params\":{\"dataHash\":\"The hash of the data to be validated.\",\"signature\":\"A signature that can validate the previous parameter (Hash).\"},\"returns\":{\"returnedStatus\":\"A `bytes4` value that indicates if the signature is valid or not.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"custom:info\":\"If no ownership transfer is in progress, the pendingOwner will be `address(0).`.\",\"details\":\"The address that ownership of the contract is transferred to. This address may use {acceptOwnership()} to gain ownership of the contract.\"},\"renounceOwnership()\":{\"custom:danger\":\"Leaves the contract without an owner. Once ownership of the contract has been renounced, any functions that are restricted to be called by the owner or an address allowed by the owner will be permanently inaccessible, making these functions not callable anymore and unusable.\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Renounce ownership of the contract in a 2-step process. 1. The first call will initiate the process of renouncing ownership. 2. The second call is used as a confirmation and will leave the contract without an owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"- {UniversalReceiver} event when receiving native tokens. - {DataChanged} event.\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"- {UniversalReceiver} event when receiving native tokens. - {DataChanged} event. (on each iteration of setting data)\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Achieves the goal of [ERC-165] to detect supported interfaces and [LSP-17-ContractExtension] by checking if the interfaceId being queried is supported on another linked extension. If the contract doesn't support the `interfaceId`, it forwards the call to the `supportsInterface` extension according to [LSP-17-ContractExtension], and checks if the extension implements the interface defined by `interfaceId`.\",\"params\":{\"interfaceId\":\"The interface ID to check if the contract supports it.\"},\"returns\":{\"_0\":\"`true` if this contract implements the interface defined by `interfaceId`, `false` otherwise.\"}},\"transferOwnership(address)\":{\"custom:requirements\":\"- Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - When notifying the new owner via LSP1, the `typeId` used must be the `keccak256(...)` hash of [LSP0OwnershipTransferStarted]. - Pending owner cannot accept ownership in the same tx via the LSP1 hook.\",\"details\":\"Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner. If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\",\"params\":{\"newOwner\":\"The address of the new owner.\"}},\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"- {UniversalReceiver} when receiving native tokens. - {UniversalReceiver} event with the function parameters, call options, and the response of the UniversalReceiverDelegates (URD) contract that was called.\",\"details\":\"Achieves the goal of [LSP-1-UniversalReceiver] by allowing the account to be notified about incoming/outgoing transactions and enabling reactions to these actions. The reaction is achieved by having two external contracts ([LSP1UniversalReceiverDelegate]) that react on the whole transaction and on the specific typeId, respectively. The function performs the following steps: 1. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY].      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function. 2. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX] + `bytes32(typeId)`.   (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function. This function delegates internally the handling of native tokens to the {universalReceiver} function itself passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data.\",\"params\":{\"receivedData\":\"The data received.\",\"typeId\":\"The type of call received.\"},\"returns\":{\"returnedValues\":\"The ABI encoded return value of the LSP1UniversalReceiverDelegate call and the LSP1TypeIdDelegate call.\"}}},\"title\":\"The Core Implementation of [LSP-0-ERC725Account] Standard.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP14CannotTransferOwnershipToSelf()\":[{\"notice\":\"Cannot transfer ownership to the address of the contract itself.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"notice\":\"Cannot accept ownership in the same transaction with {transferOwnership(...)}.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"notice\":\"Cannot confirm ownership renouncement yet. The ownership renouncement is allowed from: `renounceOwnershipStart` until: `renounceOwnershipEnd`.\"}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"},\"OwnershipRenounced()\":{\"notice\":\"Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`.\"},\"OwnershipTransferStarted(address,address)\":{\"notice\":\"The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\"},\"RenounceOwnershipStarted()\":{\"notice\":\"Ownership renouncement initiated.\"},\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"`msg.sender` is accepting ownership of contract: `address(this)`.\"},\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Achieves the goal of [EIP-1271] by validating signatures of smart contracts according to their own logic.\"},\"renounceOwnership()\":{\"notice\":\"`msg.sender` is renouncing ownership of contract `address(this)`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checking if this contract supports the interface defined by the `bytes4` interface ID `interfaceId`.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership initiated by `newOwner`.\"},\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Notifying the contract by calling its `universalReceiver` function with the following informations: typeId: `typeId`; data: `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol\":\"LSP0ERC725AccountCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0x30faca9e584d40972ded6ef505f7b2ec86bef57ba382a461cf69939bb04a3879\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5384e205fe05e9174865600c69ff69c30bbdf764d66c5e5608343f6df92f24fa\",\"dweb:/ipfs/QmPXEuNg4GVrqiapuJsn7rGYxFkuSGKGff46MgTPRj5r43\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x98e44c24f108317e314fe431e9178c05c199383092e3e358c294fd3a6fa9f8e0\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://071667b6982a6bb749e2592ea9ab045bf076d428eef431f7abb8f2cb0137615d\",\"dweb:/ipfs/QmT9sNeKZLqHXkpwJt3KHvEar4gqXjNUnEhnGakPovNbBH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x8a8baf99256d7af9389700213dff72587e3a7083da9f25fbe20940244da58a8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b203d51255de422125cfbe57c6acd8f8730d1df430b8cc838b8773e64e952f6d\",\"dweb:/ipfs/QmNMjDiUrgMAaRWM3PjZkRTQSgTQS1GRinwBDPESbvW2ER\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol\":{\"keccak256\":\"0x9066f85dcef006b7896a367fd08fd0a62706a32457be6859191f15f5e865d049\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64ee93036c278b6c458dfbc07324c219aaefba30cc27cbef78711bb6b3259178\",\"dweb:/ipfs/QmYX41QaQb4nR8qQpiKNAHM7EVJM4KZdJaV6j2CeUgYAPq\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol\":{\"keccak256\":\"0x281f3faae5275658f9deac2402e1d267585ff7c9cab76c8286f3c111d45937fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b6242256fa26b8bd1639b68a19c9ec31465f5ac0644189f8ece3eb83540b3ed5\",\"dweb:/ipfs/QmR99tQjcUdw9sUwV64ti3kgcxyC9K9aiy146VXZS3Gbei\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol\":{\"keccak256\":\"0x05ca1e94dce690e868ec7f1eb8776a016e1117ad2eac3ec38f0cf0df1fbf3dd4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47927c7dada048db78f03b04be4f87d67751cc4c277a70e60cac79edaaf07f69\",\"dweb:/ipfs/QmeqS32QNL78GnbjSPR1YH6bwgtmiR85ceW6h9efeW7FTH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol\":{\"keccak256\":\"0x456a3b97d311fa515285ca06f3ae6086c760a73b73e95e806f392ac21e231600\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e2ebe4846d92df77de5436c7e73077eb1ddf909c1e41ef3c0bdc13a21dcd310\",\"dweb:/ipfs/QmazkXSWdj1QGXG8ymbRKvhsFvrfGV97jfg9sn99KYajvK\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol\":{\"keccak256\":\"0x91eac2f8e413fcf5c61f2c0494d93de1c5a97404ceb365504ae10f00506b042f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c454097fcc2325540840a5f539bb9f52b53914e512fa969b72ce5b89c4241aa4\",\"dweb:/ipfs/QmceznDNfzCGpnX2bsTxnvqyxRPzQjqHsZSGtRsokbZNWk\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol\":{\"keccak256\":\"0x0dda32e2d2dba5b3d46a1001bcfe02f5d9c9cc8cc1a4f58fcfb9afda8aec6ec4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4b27cf49d9f9c65e902afaece0fd214b8fa1c32f2b3f369f704eb7b121d772c7\",\"dweb:/ipfs/Qmcn4rGo6XsnYmWxvzNp7dM26ZtVvvSTU4HTcAdLd2CKzP\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\":{\"keccak256\":\"0xaafc91328097796841faacbbe3151d36302282d91e947ce29244b4fdc285c717\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ee5d998e6705e2cfd2b7c188b308c5ad1938ba31925d70af28e2c260b32b30\",\"dweb:/ipfs/QmUBayZquBqjG2wtkZxKfjXRwd4p3ztNmRshAoCeSavjxW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol\":{\"keccak256\":\"0xc302150618a783d0912ccf73c86e723822a0c42400c0dafe66cbae0a8bdda939\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6cd7fbb3517319f1f6f3104979512f535da6cb72fc7cb98a7e57e31251dcf005\",\"dweb:/ipfs/QmZaMpDsPnYRLeXTbuGv8iSsGp91zVVKcZ4hGw5XyWxstY\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol\":{\"keccak256\":\"0xf97a0412c94233fef7a1bc49d2d3b374be0e53faf31e20e8e6f45fca0af54d0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://148f9ba63ea4f641e2ec60aa3ea8e0576642abc116e55f9eeffd4dbb2986a221\",\"dweb:/ipfs/QmRkT4xx18H32j7yS4bNERMMAe3m3oWBgZ9grRJS7Gqpt4\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol\":{\"keccak256\":\"0x385f90f7c45f4d196ecdbe53b6228435022b23644882ca7e2727597aace14875\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12d6227162fe438673bdfd34eb03e21831d9e026a1e6fc03b4c419e8012fc6ee\",\"dweb:/ipfs/Qma4KThYJh3gWS5JXmpD5z44wuH9uym3BPwfvNFfzFgcU2\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol\":{\"keccak256\":\"0x0b07d30183b746fd59d33424041fb1e6d3f61af19da4be7778dbcf43a8fe08fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d95aad9cd0762630948d719c199aa7825880deed36687ed57ccd7a6fcf5deac\",\"dweb:/ipfs/QmS9cWMEiCuX7JgjQZgKk35m6b4RUjsPBHVoEfpXVkMhqV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol":{"ILSP14Ownable2Step":{"abi":[{"anonymous":false,"inputs":[],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[],"name":"RenounceOwnershipStarted","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RenounceOwnershipStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipRenounced()\":{\"details\":\"Emitted when the ownership of the contract has been renounced.\"},\"OwnershipTransferStarted(address,address)\":{\"details\":\"Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}},\"RenounceOwnershipStarted()\":{\"details\":\"Emitted when starting the {renounceOwnership(..)} 2-step process.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}. Once this function is called: - The current {owner()} will lose access to the functions restricted to the {owner()} only. - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\"},\"pendingOwner()\":{\"details\":\"The address that ownership of the contract is transferred to. This address may use {acceptOwnership()} to gain ownership of the contract.\"},\"renounceOwnership()\":{\"details\":\"Renounce ownership of the contract in a 2-step process. 1. The first call will initiate the process of renouncing ownership. 2. The second call is used as a confirmation and will leave the contract without an owner.\"},\"transferOwnership(address)\":{\"details\":\"Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner. If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\",\"params\":{\"newOwner\":\"The address of the new owner.\"}}},\"title\":\"Interface of the LSP14 - Ownable 2-step standard, an extension of the [EIP173] (Ownable) standard with 2-step process to transfer or renounce ownership.\",\"version\":1},\"userdoc\":{\"events\":{\"OwnershipRenounced()\":{\"notice\":\"Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`.\"},\"OwnershipTransferStarted(address,address)\":{\"notice\":\"The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\"},\"RenounceOwnershipStarted()\":{\"notice\":\"Ownership renouncement initiated.\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"`msg.sender` is accepting ownership of contract: `address(this)`.\"},\"renounceOwnership()\":{\"notice\":\"`msg.sender` is renouncing ownership of contract `address(this)`.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership initiated by `newOwner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol\":\"ILSP14Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol\":{\"keccak256\":\"0x05ca1e94dce690e868ec7f1eb8776a016e1117ad2eac3ec38f0cf0df1fbf3dd4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47927c7dada048db78f03b04be4f87d67751cc4c277a70e60cac79edaaf07f69\",\"dweb:/ipfs/QmeqS32QNL78GnbjSPR1YH6bwgtmiR85ceW6h9efeW7FTH\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol":{"LSP14Ownable2Step":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"LSP14CallerNotPendingOwner","type":"error"},{"inputs":[],"name":"LSP14CannotTransferOwnershipToSelf","type":"error"},{"inputs":[],"name":"LSP14MustAcceptOwnershipInSeparateTransaction","type":"error"},{"inputs":[{"internalType":"uint256","name":"renounceOwnershipStart","type":"uint256"},{"internalType":"uint256","name":"renounceOwnershipEnd","type":"uint256"}],"name":"LSP14NotInRenounceOwnershipInterval","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"anonymous":false,"inputs":[],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[],"name":"RenounceOwnershipStarted","type":"event"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY()":"ead3fbdf","RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD()":"01bfba61","acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP14CallerNotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14CannotTransferOwnershipToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14MustAcceptOwnershipInSeparateTransaction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipEnd\",\"type\":\"uint256\"}],\"name\":\"LSP14NotInRenounceOwnershipInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RenounceOwnershipStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42), Yamen Merhi (YamenMerhi), Daniel Afteni (B00ste)\",\"details\":\"This contract is a modified version of the [`OwnableUnset.sol`] implementation, where transferring and renouncing ownership works as a 2-step process. This can be used as a confirmation mechanism to prevent potential mistakes when transferring ownership of the contract, where the control of the contract could be lost forever. (_e.g: providing the wrong address as a parameter to the function, transferring ownership to an EOA for which the user lost its private key, etc..._)\",\"errors\":{\"LSP14CallerNotPendingOwner(address)\":[{\"details\":\"Reverts when the `caller` that is trying to accept ownership of the contract is not the pending owner.\",\"params\":{\"caller\":\"The address that tried to accept ownership.\"}}],\"LSP14CannotTransferOwnershipToSelf()\":[{\"details\":\"Reverts when trying to transfer ownership to the `address(this)`.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"details\":\"Reverts when pending owner accept ownership in the same transaction of transferring ownership.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"details\":\"Reverts when trying to renounce ownership before the initial confirmation delay.\",\"params\":{\"renounceOwnershipEnd\":\"The end timestamp when one can confirm the renouncement of ownership.\",\"renounceOwnershipStart\":\"The start timestamp when one can confirm the renouncement of ownership.\"}}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}]},\"events\":{\"OwnershipRenounced()\":{\"details\":\"Emitted when the ownership of the contract has been renounced.\"},\"OwnershipTransferStarted(address,address)\":{\"details\":\"Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}},\"RenounceOwnershipStarted()\":{\"details\":\"Emitted when starting the {renounceOwnership(..)} 2-step process.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"custom:requirements\":\"This function can only be called by the {pendingOwner()}.\",\"details\":\"Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}. Once this function is called: - The current {owner()} will lose access to the functions restricted to the {owner()} only. - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"custom:info\":\"If no ownership transfer is in progress, the pendingOwner will be `address(0).`.\",\"details\":\"The address that ownership of the contract is transferred to. This address may use {acceptOwnership()} to gain ownership of the contract.\"},\"renounceOwnership()\":{\"custom:danger\":\"Leaves the contract without an owner. Once ownership of the contract has been renounced, any function that is restricted to be called only by the owner will be permanently inaccessible, making these functions not callable anymore and unusable.\",\"details\":\"Renounce ownership of the contract in a 2-step process. 1. The first call will initiate the process of renouncing ownership. 2. The second call is used as a confirmation and will leave the contract without an owner.\"},\"transferOwnership(address)\":{\"custom:requirements\":\"`newOwner` cannot accept ownership of the contract in the same transaction. (For instance, via a callback from its {universalReceiver(...)} function).\",\"details\":\"Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner. If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\",\"params\":{\"newOwner\":\"The address of the new owner.\"}}},\"stateVariables\":{\"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY\":{\"details\":\"The number of block that MUST pass before one is able to confirm renouncing ownership.\",\"return\":\"Number of blocks.\",\"returns\":{\"_0\":\"Number of blocks.\"}},\"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD\":{\"details\":\"The number of blocks during which one can renounce ownership.\",\"return\":\"Number of blocks.\",\"returns\":{\"_0\":\"Number of blocks.\"}},\"_inTransferOwnership\":{\"details\":\"The boolean that indicates whether the contract is in an active ownership transfer phase\"},\"_pendingOwner\":{\"details\":\"see {pendingOwner()}\"},\"_renounceOwnershipStartedAt\":{\"details\":\"The block number saved when initiating the process of renouncing ownerhsip.\"}},\"title\":\"LSP14Ownable2Step\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP14CannotTransferOwnershipToSelf()\":[{\"notice\":\"Cannot transfer ownership to the address of the contract itself.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"notice\":\"Cannot accept ownership in the same transaction with {transferOwnership(...)}.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"notice\":\"Cannot confirm ownership renouncement yet. The ownership renouncement is allowed from: `renounceOwnershipStart` until: `renounceOwnershipEnd`.\"}]},\"events\":{\"OwnershipRenounced()\":{\"notice\":\"Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`.\"},\"OwnershipTransferStarted(address,address)\":{\"notice\":\"The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\"},\"RenounceOwnershipStarted()\":{\"notice\":\"Ownership renouncement initiated.\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"`msg.sender` is accepting ownership of contract: `address(this)`.\"},\"renounceOwnership()\":{\"notice\":\"`msg.sender` is renouncing ownership of contract `address(this)`.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership initiated by `newOwner`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol\":\"LSP14Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol\":{\"keccak256\":\"0x05ca1e94dce690e868ec7f1eb8776a016e1117ad2eac3ec38f0cf0df1fbf3dd4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47927c7dada048db78f03b04be4f87d67751cc4c277a70e60cac79edaaf07f69\",\"dweb:/ipfs/QmeqS32QNL78GnbjSPR1YH6bwgtmiR85ceW6h9efeW7FTH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol\":{\"keccak256\":\"0x456a3b97d311fa515285ca06f3ae6086c760a73b73e95e806f392ac21e231600\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e2ebe4846d92df77de5436c7e73077eb1ddf909c1e41ef3c0bdc13a21dcd310\",\"dweb:/ipfs/QmazkXSWdj1QGXG8ymbRKvhsFvrfGV97jfg9sn99KYajvK\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol\":{\"keccak256\":\"0x91eac2f8e413fcf5c61f2c0494d93de1c5a97404ceb365504ae10f00506b042f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c454097fcc2325540840a5f539bb9f52b53914e512fa969b72ce5b89c4241aa4\",\"dweb:/ipfs/QmceznDNfzCGpnX2bsTxnvqyxRPzQjqHsZSGtRsokbZNWk\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol\":{\"keccak256\":\"0x0dda32e2d2dba5b3d46a1001bcfe02f5d9c9cc8cc1a4f58fcfb9afda8aec6ec4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4b27cf49d9f9c65e902afaece0fd214b8fa1c32f2b3f369f704eb7b121d772c7\",\"dweb:/ipfs/Qmcn4rGo6XsnYmWxvzNp7dM26ZtVvvSTU4HTcAdLd2CKzP\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol":{"ILSP1UniversalReceiverDelegate":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiverDelegate","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiverDelegate(address,uint256,bytes32,bytes)":"a245bbda"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiverDelegate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface allows contracts implementing the LSP1UniversalReceiver function to delegate the reaction logic to another contract or account. By doing so, the main logic doesn't need to reside within the `universalReceiver` function itself, offering modularity and flexibility.\",\"kind\":\"dev\",\"methods\":{\"universalReceiverDelegate(address,uint256,bytes32,bytes)\":{\"details\":\"A delegate function that reacts to calls forwarded from the `universalReceiver(..)` function. This allows for modular handling of the logic based on the `typeId` and `data` provided by the initial caller.\",\"params\":{\"data\":\"The arbitrary data received with the initial call to `universalReceiver`.\",\"sender\":\"The address of the EOA or smart contract that initially called the `universalReceiver` function.\",\"typeId\":\"The hash of a specific standard or a hook.\",\"value\":\"The amount sent by the `sender` to the `universalReceiver` function.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver Delegate standard.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"universalReceiverDelegate(address,uint256,bytes32,bytes)\":{\"notice\":\"Reacted on received notification forwarded from `universalReceiver` with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\":\"ILSP1UniversalReceiverDelegate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\":{\"keccak256\":\"0xaafc91328097796841faacbbe3151d36302282d91e947ce29244b4fdc285c717\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ee5d998e6705e2cfd2b7c188b308c5ad1938ba31925d70af28e2c260b32b30\",\"dweb:/ipfs/QmUBayZquBqjG2wtkZxKfjXRwd4p3ztNmRshAoCeSavjxW\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd9bd036555a3b33e7ab8b8ca6146b006637eec6429a5c320750305e35dedf5364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP12 0xD0 CALLDATASIZE SSTORE GAS EXTCODESIZE CALLER 0xE7 0xAB DUP12 DUP13 0xA6 EQ PUSH12 0x6637EEC6429A5C32075030 0x5E CALLDATALOAD 0xDE 0xDF MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"893:2519:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;893:2519:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd9bd036555a3b33e7ab8b8ca6146b006637eec6429a5c320750305e35dedf5364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP12 0xD0 CALLDATASIZE SSTORE GAS EXTCODESIZE CALLER 0xE7 0xAB DUP12 DUP13 0xA6 EQ PUSH12 0x6637EEC6429A5C32075030 0x5E CALLDATALOAD 0xDE 0xDF MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"893:2519:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve informations related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol":{"ILSP20CallVerifier":{"abi":[{"inputs":[{"internalType":"address","name":"requestor","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"caller","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}],"name":"lsp20VerifyCall","outputs":[{"internalType":"bytes4","name":"returnedStatus","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"callHash","type":"bytes32"},{"internalType":"bytes","name":"callResult","type":"bytes"}],"name":"lsp20VerifyCallResult","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"lsp20VerifyCall(address,address,address,uint256,bytes)":"de928f14","lsp20VerifyCallResult(bytes32,bytes)":"d3fc45d3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requestor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"lsp20VerifyCall\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"returnedStatus\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"callHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"callResult\",\"type\":\"bytes\"}],\"name\":\"lsp20VerifyCallResult\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface to be inherited for contract supporting LSP20-CallVerification\",\"kind\":\"dev\",\"methods\":{\"lsp20VerifyCall(address,address,address,uint256,bytes)\":{\"params\":{\"callData\":\"The calldata sent by the caller to the msg.sender\",\"caller\":\"The address who called the function on the `target` contract.\",\"requestor\":\"The address that requested to make the call to `target`.\",\"target\":\"The address of the contract that implements the `LSP20CallVerification` interface.\",\"value\":\"The value sent by the caller to the function called on the msg.sender\"},\"returns\":{\"returnedStatus\":\"MUST return the first 3 bytes of `lsp20VerifyCall(address,uint256,bytes)` function selector if the call to the function is allowed, concatened with a byte that determines if the lsp20VerifyCallResult function should be called after the original function call. The byte that invoke the lsp20VerifyCallResult function is strictly `0x01`.\"}},\"lsp20VerifyCallResult(bytes32,bytes)\":{\"params\":{\"callHash\":\"The keccak256 hash of the parameters of {lsp20VerifyCall} concatenated\",\"callResult\":\"The value result of the function called on the msg.sender\"},\"returns\":{\"_0\":\"MUST return the lsp20VerifyCallResult function selector if the call to the function is allowed\"}}},\"title\":\"Interface for the LSP20 Call Verification standard, a set of functions intended to perform verifications on behalf of another contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol\":\"ILSP20CallVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol\":{\"keccak256\":\"0xc302150618a783d0912ccf73c86e723822a0c42400c0dafe66cbae0a8bdda939\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6cd7fbb3517319f1f6f3104979512f535da6cb72fc7cb98a7e57e31251dcf005\",\"dweb:/ipfs/QmZaMpDsPnYRLeXTbuGv8iSsGp91zVVKcZ4hGw5XyWxstY\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol":{"LSP20CallVerification":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Module to be inherited used to verify the execution of functions according to a verifier address. Verification can happen before or after execution based on a returnedStatus.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Implementation of a contract calling the verification functions according to LSP20 - Call Verification standard.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol\":\"LSP20CallVerification\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol\":{\"keccak256\":\"0xc302150618a783d0912ccf73c86e723822a0c42400c0dafe66cbae0a8bdda939\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6cd7fbb3517319f1f6f3104979512f535da6cb72fc7cb98a7e57e31251dcf005\",\"dweb:/ipfs/QmZaMpDsPnYRLeXTbuGv8iSsGp91zVVKcZ4hGw5XyWxstY\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol\":{\"keccak256\":\"0xf97a0412c94233fef7a1bc49d2d3b374be0e53faf31e20e8e6f45fca0af54d0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://148f9ba63ea4f641e2ec60aa3ea8e0576642abc116e55f9eeffd4dbb2986a221\",\"dweb:/ipfs/QmRkT4xx18H32j7yS4bNERMMAe3m3oWBgZ9grRJS7Gqpt4\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol\":{\"keccak256\":\"0x0b07d30183b746fd59d33424041fb1e6d3f61af19da4be7778dbcf43a8fe08fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d95aad9cd0762630948d719c199aa7825880deed36687ed57ccd7a6fcf5deac\",\"dweb:/ipfs/QmS9cWMEiCuX7JgjQZgKk35m6b4RUjsPBHVoEfpXVkMhqV\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e5182197399bba35e16143a9f21a221ebfa4b0a024c0a13d384060b429365fd64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E MLOAD DUP3 NOT PUSH20 0x99BBA35E16143A9F21A221EBFA4B0A024C0A13D3 DUP5 MOD SIGNEXTEND TIMESTAMP SWAP4 PUSH6 0xFD64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"482:15762:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:15762:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e5182197399bba35e16143a9f21a221ebfa4b0a024c0a13d384060b429365fd64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E MLOAD DUP3 NOT PUSH20 0x99BBA35E16143A9F21A221EBFA4B0A024C0A13D3 DUP5 MOD SIGNEXTEND TIMESTAMP SWAP4 PUSH6 0xFD64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"482:15762:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/Version.sol":{"Version":{"abi":[{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"VERSION()":"ffa1ad74"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"VERSION\":{\"details\":\"Get the version of the contract.\",\"return\":\"The version of the the contract.\",\"returns\":{\"_0\":\"The version of the the contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/Version.sol\":\"Version\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/Version.sol\":{\"keccak256\":\"0xe485fb88e582ae027a7862104f9a9669fe44611f77e427405781ca8ddd828174\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://74fd27c12de2131ef32e93ab3d73e2a7a19897f72481efadb28838c2b60a61ac\",\"dweb:/ipfs/QmaRicGJvoYcpifydqsdeHS1GhofC4Rp5eeurP9PTPJcNG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a5ffe3918ffd67bc8201cd7c53cdf8cf8012872ab683529e81e227957132c4364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5FFE3918FFD67BC8201CD7 0xC5 EXTCODECOPY 0xDF DUP13 0xF8 ADD 0x28 PUSH19 0xAB683529E81E227957132C4364736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"194:9169:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a5ffe3918ffd67bc8201cd7c53cdf8cf8012872ab683529e81e227957132c4364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5FFE3918FFD67BC8201CD7 0xC5 EXTCODECOPY 0xDF DUP13 0xF8 ADD 0x28 PUSH19 0xAB683529E81E227957132C4364736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"194:9169:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b742e37e0816545dd6115846e3d8b5d9353039e3b6580bf8da0491703800365264736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 TIMESTAMP 0xE3 PUSH31 0x816545DD6115846E3D8B5D9353039E3B6580BF8DA0491703800365264736F PUSH13 0x63430008130033000000000000 ","sourceMap":"494:3457:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;494:3457:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b742e37e0816545dd6115846e3d8b5d9353039e3b6580bf8da0491703800365264736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 TIMESTAMP 0xE3 PUSH31 0x816545DD6115846E3D8B5D9353039E3B6580BF8DA0491703800365264736F PUSH13 0x63430008130033000000000000 ","sourceMap":"494:3457:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:31;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:31:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b997e719bd9b294cba58413a90a5947e7ea094740da91c79267cdfcb9650015264736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SWAP8 0xE7 NOT 0xBD SWAP12 0x29 0x4C 0xBA PC COINBASE GASPRICE SWAP1 0xA5 SWAP5 PUSH31 0x7EA094740DA91C79267CDFCB9650015264736F6C6343000813003300000000 ","sourceMap":"449:4621:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:4621:33;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b997e719bd9b294cba58413a90a5947e7ea094740da91c79267cdfcb9650015264736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SWAP8 0xE7 NOT 0xBD SWAP12 0x29 0x4C 0xBA PC COINBASE GASPRICE SWAP1 0xA5 SWAP5 PUSH31 0x7EA094740DA91C79267CDFCB9650015264736F6C6343000813003300000000 ","sourceMap":"449:4621:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:35;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:35:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:36;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:36:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/UP.sol":{"LSP0ERC725Account":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725X_ContractDeploymentFailed","type":"error"},{"inputs":[],"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersEmptyArray","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC725X_InsufficientBalance","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInDelegateCall","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInStaticCall","type":"error"},{"inputs":[],"name":"ERC725X_NoContractBytecodeProvided","type":"error"},{"inputs":[{"internalType":"uint256","name":"operationTypeProvided","type":"uint256"}],"name":"ERC725X_UnknownOperationType","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"name":"LSP14CallerNotPendingOwner","type":"error"},{"inputs":[],"name":"LSP14CannotTransferOwnershipToSelf","type":"error"},{"inputs":[],"name":"LSP14MustAcceptOwnershipInSeparateTransaction","type":"error"},{"inputs":[{"internalType":"uint256","name":"renounceOwnershipStart","type":"uint256"},{"internalType":"uint256","name":"renounceOwnershipEnd","type":"uint256"}],"name":"LSP14NotInRenounceOwnershipInterval","type":"error"},{"inputs":[{"internalType":"bool","name":"postCall","type":"bool"},{"internalType":"bytes4","name":"returnedStatus","type":"bytes4"}],"name":"LSP20CallVerificationFailed","type":"error"},{"inputs":[{"internalType":"bool","name":"postCall","type":"bool"}],"name":"LSP20CallingVerifierFailed","type":"error"},{"inputs":[{"internalType":"address","name":"logicVerifier","type":"address"}],"name":"LSP20EOACannotVerifyCall","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[],"name":"RenounceOwnershipStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"returnedStatus","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pendingNewOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"receivedData","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"returnedValues","type":"bytes"}],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_6386":{"entryPoint":null,"id":6386,"parameterSlots":1,"returnSlots":0},"@_setOwner_954":{"entryPoint":191,"id":954,"parameterSlots":1,"returnSlots":0},"@owner_869":{"entryPoint":null,"id":869,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:774:39","statements":[{"nodeType":"YulBlock","src":"6:3:39","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:39","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:39"},"nodeType":"YulFunctionCall","src":"143:12:39"},"nodeType":"YulExpressionStatement","src":"143:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:39"},"nodeType":"YulFunctionCall","src":"112:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:39"},"nodeType":"YulFunctionCall","src":"108:32:39"},"nodeType":"YulIf","src":"105:52:39"},{"nodeType":"YulVariableDeclaration","src":"166:29:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:39"},"nodeType":"YulFunctionCall","src":"179:16:39"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:39"},"nodeType":"YulFunctionCall","src":"260:12:39"},"nodeType":"YulExpressionStatement","src":"260:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:39"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:39"},"nodeType":"YulFunctionCall","src":"239:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:39"},"nodeType":"YulFunctionCall","src":"235:19:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:39"},"nodeType":"YulFunctionCall","src":"224:31:39"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:39"},"nodeType":"YulFunctionCall","src":"214:42:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:39"},"nodeType":"YulFunctionCall","src":"207:50:39"},"nodeType":"YulIf","src":"204:70:39"},{"nodeType":"YulAssignment","src":"283:15:39","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:39"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:39","type":""}],"src":"14:290:39"},{"body":{"nodeType":"YulBlock","src":"582:190:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"599:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"610:2:39","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"592:6:39"},"nodeType":"YulFunctionCall","src":"592:21:39"},"nodeType":"YulExpressionStatement","src":"592:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"633:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"644:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"629:3:39"},"nodeType":"YulFunctionCall","src":"629:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"649:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"622:6:39"},"nodeType":"YulFunctionCall","src":"622:29:39"},"nodeType":"YulExpressionStatement","src":"622:29:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"671:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"682:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"667:3:39"},"nodeType":"YulFunctionCall","src":"667:20:39"},{"kind":"number","nodeType":"YulLiteral","src":"689:2:39","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"660:6:39"},"nodeType":"YulFunctionCall","src":"660:32:39"},"nodeType":"YulExpressionStatement","src":"660:32:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"712:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:39"},"nodeType":"YulFunctionCall","src":"708:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"728:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"701:6:39"},"nodeType":"YulFunctionCall","src":"701:29:39"},"nodeType":"YulExpressionStatement","src":"701:29:39"},{"nodeType":"YulAssignment","src":"739:27:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"751:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"762:3:39","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"747:3:39"},"nodeType":"YulFunctionCall","src":"747:19:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"739:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"559:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"573:4:39","type":""}],"src":"309:463:39"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 0)\n        mstore(add(headStart, 0x20), 96)\n        mstore(add(headStart, 96), 0)\n        tail := add(headStart, 128)\n    }\n}","id":39,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052604051620034883803806200348883398101604081905262000026916200012d565b3415620000ad577f9c4705229491d365fb5434052e12a386d6771d976bea61070a8c694e8affea3d60001b34336001600160a01b03167f9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2604051620000a4906040808252600090820181905260606020830181905282015260800190565b60405180910390a45b620000b881620000bf565b506200015f565b6000546001600160a01b038281169116146200012a57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b6000602082840312156200014057600080fd5b81516001600160a01b03811681146200015857600080fd5b9392505050565b613319806200016f6000396000f3fe60806040526004361061010d5760003560e01c806379ba509711610095578063dedff9c611610064578063dedff9c614610380578063e30c3978146103a0578063ead3fbdf146101da578063f2fde38b146103be578063ffa1ad74146103de57610146565b806379ba5097146103135780637f23690c146103285780638da5cb5b1461033b578063979024211461036d57610146565b806344c028fe116100dc57806344c028fe1461028b57806354f6127f146102ab5780636963d438146102cb5780636bb56a14146102eb578063715018a6146102fe57610146565b806301bfba61146101da57806301ffc9a7146102025780631626ba7e14610232578063318584521461026b57610146565b36610146573415610144576101426000805160206132c483398151915260001b60405180602001604052806000815250610410565b505b005b600036606060048210156101c25734156101ad576101ab6000805160206132c483398151915260001b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b506040805160208101909152600081526101cf565b6101cc838361069d565b90505b915050805190602001f35b3480156101e657600080fd5b506101ef60c881565b6040519081526020015b60405180910390f35b34801561020e57600080fd5b5061022261021d366004612850565b61084e565b60405190151581526020016101f9565b34801561023e57600080fd5b5061025261024d366004612930565b6108ee565b6040516001600160e01b031990911681526020016101f9565b61027e610279366004612a95565b610aa0565b6040516101f99190612bec565b61029e610299366004612c4e565b610b88565b6040516101f99190612ca2565b3480156102b757600080fd5b5061029e6102c6366004612cb5565b610c47565b3480156102d757600080fd5b5061027e6102e6366004612cce565b610c52565b61029e6102f9366004612930565b610410565b34801561030a57600080fd5b50610144610dad565b34801561031f57600080fd5b50610144610efa565b610144610336366004612930565b611067565b34801561034757600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101f9565b61014461037b366004612d42565b611126565b34801561038c57600080fd5b5061027e61039b366004612d9b565b6112a3565b3480156103ac57600080fd5b506003546001600160a01b0316610355565b3480156103ca57600080fd5b506101446103d9366004612dcf565b61134d565b3480156103ea57600080fd5b5061029e604051806040016040528060068152602001650302e31342e360d41b81525081565b6060341580159061042f57506000805160206132c48339815191528314155b15610488576104866000805160206132c483398151915260001b6000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b60006104b37f0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b476114f9565b9050606060148251106105645760006104cb83612dea565b60601c90506104e181635122dded60e11b61159b565b1561056257604051635122dded60e11b81526001600160a01b0382169063a245bbda9061051890339034908b908b90600401612e21565b6000604051808303816000875af1158015610537573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261055f9190810190612e4e565b91505b505b600061057d690cfc51aec37c55a4d0b160b01b87611624565b9050600061058a826114f9565b90506060601482511061063b5760006105a283612dea565b60601c90506105b881635122dded60e11b61159b565b1561063957604051635122dded60e11b81526001600160a01b0382169063a245bbda906105ef90339034908e908e90600401612e21565b6000604051808303816000875af115801561060e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106369190810190612e4e565b91505b505b838160405160200161064e929190612ebb565b60405160208183030381529060405295508734336001600160a01b03166000805160206132a48339815191528a8a60405161068a929190612ebb565b60405180910390a4505050505092915050565b60606000806106b76000356001600160e01b031916611670565b91509150346000141580156106ca575080155b15610722576107206000805160206132c483398151915260001b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b6000356001600160e01b03191615801561074357506001600160a01b038216155b15610761576040518060200160405280600081525092505050610848565b6001600160a01b03821661079b5760405163bb370b2b60e01b81526001600160e01b03196000351660048201526024015b60405180910390fd5b600080836001600160a01b0316836107b45760006107b6565b345b888833346040516020016107cd9493929190612ee0565b60408051601f19818403018152908290526107e791612f0b565b60006040518083038185875af1925050503d8060008114610824576040519150601f19603f3d011682016040523d82523d6000602084013e610829565b606091505b5091509150811561083f57935061084892505050565b80518060208301fd5b92915050565b60006001600160e01b03198216630b135d3f60e11b148061087f57506001600160e01b031982166324871b3d60e01b145b8061089a57506001600160e01b03198216631aed5a8560e21b145b806108b557506001600160e01b031982166394be599960e01b145b806108d057506001600160e01b03198216631a0eb6a560e01b145b806108df57506108df82611720565b80610848575061084882611745565b6000806109036000546001600160a01b031690565b90506001600160a01b0381163b15610a2057600080826001600160a01b0316631626ba7e60e01b878760405160240161093d929190612f27565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161097b9190612f0b565b600060405180830381855afa9150503d80600081146109b6576040519150601f19603f3d011682016040523d82523d6000602084013e6109bb565b606091505b509150915060008280156109d0575081516020145b80156109f757508151630b135d3f60e11b906109f59084016020908101908501612f40565b145b905080610a0c576001600160e01b0319610a15565b630b135d3f60e11b5b945050505050610848565b600080610a2d8686611783565b90925090506000816004811115610a4657610a46612f59565b14610a5f57506001600160e01b03199250610848915050565b826001600160a01b0316826001600160a01b031614610a86576001600160e01b0319610a8f565b630b135d3f60e11b5b9350505050610848565b5092915050565b60603415610b07576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f1981840301815290829052610afe91612f6f565b60405180910390a45b6000546001600160a01b031633819003610b2f57610b27868686866117c8565b915050610b80565b6000610b3a82611925565b90506000610b4a888888886117c8565b90508115610b7b57610b7b8382604051602001610b679190612bec565b604051602081830303815290604052611a75565b925050505b949350505050565b60603415610bef576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f1981840301815290829052610be691612f6f565b60405180910390a45b6000546001600160a01b031633819003610c0f57610b2786868686611b92565b6000610c1a82611925565b90506000610c2a88888888611b92565b90508115610b7b57610b7b8382604051602001610b679190612ca2565b6060610848826114f9565b6060816001600160401b03811115610c6c57610c6c61286d565b604051908082528060200260200182016040528015610c9f57816020015b6060815260200190600190039081610c8a5790505b50905060005b82811015610a995760008030868685818110610cc357610cc3612f99565b9050602002810190610cd59190612faf565b604051610ce3929190612ff5565b600060405180830381855af49150503d8060008114610d1e576040519150601f19603f3d011682016040523d82523d6000602084013e610d23565b606091505b509150915081610d8557805115610d3d5780518082602001fd5b60405162461bcd60e51b815260206004820152601960248201527f4c5350303a20626174636843616c6c73207265766572746564000000000000006044820152606401610792565b80848481518110610d9857610d98612f99565b60209081029190910101525050600101610ca5565b6000546001600160a01b031633819003610e50576000546001600160a01b0316610dd5611c9d565b6000546001600160a01b0316610e4c57604080516001600160a01b0384166020820152600091810191909152610e4c907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814906060015b60408051601f198184030181529190526001600160a01b0384169190611d90565b5050565b6000610e5b82611925565b90506000610e716000546001600160a01b031690565b9050610e7b611c9d565b6000546001600160a01b0316610ed557604080516001600160a01b0385166020820152600091810191909152610ed5907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f81490606001610e2b565b8115610ef457610ef48360405180602001604052806000815250611a75565b50505b50565b600354600160a01b900460ff1615610f2557604051635758dd0760e01b815260040160405180910390fd5b600080546003546001600160a01b0391821692911690338214610f7057610f4b82611925565b9050610f5682611e24565b600380546001600160a01b03191690556000600255610f78565b610f78611e92565b604080516001600160a01b038086166020830152841691810191909152610fe0907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814906060015b60408051601f198184030181529190526001600160a01b0386169190611d90565b604080516001600160a01b038086166020830152841691810191909152611048907fceca317f109c43507871523e82dc2a3cc64dfa18f12da0b6db14f6e23f995538906060015b60408051601f198184030181529190526001600160a01b0385169190611d90565b8015610ef457610ef48260405180602001604052806000815250611a75565b34156110cc576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f19818403018152908290526110c391612f6f565b60405180910390a45b6000546001600160a01b0316338190036110ea57610ef48383611edf565b60006110f582611925565b90506111018484611edf565b8015611120576111208260405180602001604052806000815250611a75565b50505050565b341561118b576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f198184030181529082905261118291612f6f565b60405180910390a45b80518251146111ad57604051633bcc897960e01b815260040160405180910390fd5b81516000036111cf576040516397da5f9560e01b815260040160405180910390fd5b6000546001600160a01b0316338190036112335760005b83518110156111205761122b84828151811061120457611204612f99565b602002602001015184838151811061121e5761121e612f99565b6020026020010151611edf565b6001016111e6565b600061123e82611925565b905060005b84518110156112835761127b85828151811061126157611261612f99565b602002602001015185838151811061121e5761121e612f99565b600101611243565b508015611120576111208260405180602001604052806000815250611a75565b606081516001600160401b038111156112be576112be61286d565b6040519080825280602002602001820160405280156112f157816020015b60608152602001906001900390816112dc5790505b50905060005b82518110156113475761132283828151811061131557611315612f99565b60200260200101516114f9565b82828151811061133457611334612f99565b60209081029190910101526001016112f7565b50919050565b6000546001600160a01b031633819003611419576003805460ff60a01b1916600160a01b17905561137d82611f34565b816001600160a01b0316816001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a3604080516001600160a01b038084166020830152841691810191909152611408907fe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac692690606001611027565b6003805460ff60a01b191690555050565b600061142482611925565b6003805460ff60a01b1916600160a01b179055905061144283611f34565b826001600160a01b0316826001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a3604080516001600160a01b0380851660208301528516918101919091526114cd907fe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac692690606001610fbf565b6003805460ff60a01b191690558015610ef457610ef48260405180602001604052806000815250611a75565b600081815260016020526040902080546060919061151690613005565b80601f016020809104026020016040519081016040528092919081815260200182805461154290613005565b801561158f5780601f106115645761010080835404028352916020019161158f565b820191906000526020600020905b81548152906001019060200180831161157257829003601f168201915b50505050509050919050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561160d575060208210155b80156116195750600081115b979650505050505050565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c83015291829101604051602081830303815290604052905080610b8090613039565b60008080611695696773c5a04a6d4300884b60b11b6001600160e01b03198616611624565b905060006116a2826114f9565b90506014815110156116bb575060009485945092505050565b805160150361170857806014815181106116d7576116d7612f99565b01602001516001600160f81b031916600160f81b03611708576116f981612dea565b60601c95600195509350505050565b61171181612dea565b60601c95600095509350505050565b60006001600160e01b0319821663a918fa6b60e01b1480610848575061084882611f84565b6000806117586301ffc9a760e01b611670565b5090506001600160a01b0381166117725750600092915050565b61177c818461159b565b9392505050565b60008082516041036117b95760208301516040840151606085015160001a6117ad87828585611fa9565b945094505050506117c1565b506000905060025b9250929050565b6060835185511415806117e95750825184511415806117e957508151835114155b1561180757604051633ff55f4d60e01b815260040160405180910390fd5b84516000036118295760405163e9ad2b5f60e01b815260040160405180910390fd5b600085516001600160401b038111156118445761184461286d565b60405190808252806020026020018201604052801561187757816020015b60608152602001906001900390816118625790505b50905060005b865181101561191b576118f687828151811061189b5761189b612f99565b60200260200101518783815181106118b5576118b5612f99565b60200260200101518784815181106118cf576118cf612f99565b60200260200101518785815181106118e9576118e9612f99565b6020026020010151611b92565b82828151811061190857611908612f99565b602090810291909101015260010161187d565b5095945050505050565b6000816001600160a01b03163b60000361195d57604051630c39230160e01b81526001600160a01b0383166004820152602401610792565b6040516337a4a3c560e21b81526001600160a01b0383169063de928f1490611994903390309082903490600090369060040161305d565b6020604051808303816000875af19250505080156119cf575060408051601f3d908101601f191682019092526119cc918101906130ba565b60015b611a0e573d8080156119fd576040519150601f19603f3d011682016040523d82523d6000602084013e611a02565b606091505b5061134760008261206d565b6001600160e81b0319811662de928f60e81b14611a5157604051639d6741e360e01b8152600060048201526001600160e01b031982166024820152604401610792565b8060031a60f81b6001600160f81b031916600160f81b14915050919050565b919050565b816001600160a01b031663d3fc45d333303334600036604051602001611aa0969594939291906130d7565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401611ad4929190612f27565b6020604051808303816000875af1925050508015611b0f575060408051601f3d908101601f19168201909252611b0c918101906130ba565b60015b611b4e573d808015611b3d576040519150601f19603f3d011682016040523d82523d6000602084013e611b42565b606091505b50610ef460018261206d565b6001600160e01b0319811663d3fc45d360e01b14610ef457604051639d6741e360e01b8152600160048201526001600160e01b031982166024820152604401610792565b606084611bab57611ba484848461209a565b9050610b80565b60018503611be5576001600160a01b03841615611bdb57604051631820c12560e11b815260040160405180910390fd5b611ba483836121c4565b60028503611c1f576001600160a01b03841615611c1557604051631820c12560e11b815260040160405180910390fd5b611ba483836122c0565b60038503611c50578215611c46576040516339795e3560e11b815260040160405180910390fd5b611ba484836123a5565b60048503611c81578215611c7757604051635ac8313560e01b815260040160405180910390fd5b611ba484836124a2565b604051631d60ecef60e21b815260048101869052602401610792565b6002544390600090611cb19060c89061313d565b90506000611cc060c88361313d565b905080831180611cd05750600254155b15611d18576002839055600380546001600160a01b03191690556040517f81b7f830f1f0084db6497c486cbe6974c86488dcc4e3738eab94ab6d6b1653e790600090a1505050565b81831015611d4357604051630d8404a160e11b81526004810183905260248101829052604401610792565b611d4d6000611e24565b60006002819055600380546001600160a01b03191690556040517fd1f66c3d2bc1993a86be5e3d33709d98f0442381befcedd29f578b9b2506b1ce9190a1505050565b611daa6001600160a01b038416631aed5a8560e21b61159b565b15610ef457604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611ddd9085908590600401612f27565b6000604051808303816000875af1158015611dfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111209190810190612e4e565b6000546001600160a01b03828116911614610ef757600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b6003546001600160a01b03163314611ebf576040516308a3c8a560e31b8152336004820152602401610792565b611ec833611e24565b600380546001600160a01b03191690556000600255565b6000828152600160205260409020611ef7828261319e565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051611f289190612ca2565b60405180910390a25050565b306001600160a01b03821603611f5d57604051631c0a54df60e31b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b03929092169190911790556000600255565b60006001600160e01b031982166318a6a9a560e21b1480610848575061084882612553565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611fe05750600090506003612064565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612034573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661205d57600060019250925050612064565b9150600090505b94509492505050565b80511561207d5780518082602001fd5b604051638c6a8ae360e01b81528215156004820152602401610792565b6060824710156120c6576040516301bf351f60e31b815247600482015260248101849052604401610792565b6120cf8261325d565b6001600160e01b031916846001600160a01b031660007f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e8660405161211691815260200190565b60405180910390a4600080856001600160a01b0316858560405161213a9190612f0b565b60006040518083038185875af1925050503d8060008114612177576040519150601f19603f3d011682016040523d82523d6000602084013e61217c565b606091505b50915091506121ba82826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250612588565b9695505050505050565b6060824710156121f0576040516301bf351f60e31b815247600482015260248101849052604401610792565b81516000036122125760405163b81cd8d960e01b815260040160405180910390fd5b600082516020840185f090506001600160a01b03811661224557604051630b07489b60e01b815260040160405180910390fd5b6000801b816001600160a01b031660017fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c38760405161228691815260200190565b60405180910390a46040516001600160601b0319606083901b16602082015260340160405160208183030381529060405291505092915050565b606081516000036122e45760405163b81cd8d960e01b815260040160405180910390fd5b60006122fd83602085516122f89190613290565b6125a1565b9050600061231a846000602087516123159190613290565b6125ff565b9050600061232986848461270c565b905082816001600160a01b031660027fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c38960405161236991815260200190565b60405180910390a46040516001600160601b0319606083901b166020820152603401604051602081830303815290604052935050505092915050565b60606123b08261325d565b6001600160e01b031916836001600160a01b031660037f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e60006040516123f891815260200190565b60405180910390a4600080846001600160a01b03168460405161241b9190612f0b565b600060405180830381855afa9150503d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b606091505b509150915061249982826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250612588565b95945050505050565b60606124ad8261325d565b6001600160e01b031916836001600160a01b031660047f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e60006040516124f591815260200190565b60405180910390a4600080846001600160a01b0316846040516125189190612f0b565b600060405180830381855af49150503d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b60006001600160e01b03198216631d516b2b60e21b148061084857506301ffc9a760e01b6001600160e01b0319831614610848565b6060831561259757508161177c565b61177c8383612810565b60006125ae82602061313d565b835110156125f65760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610792565b50016020015190565b60608161260d81601f61313d565b101561264c5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610792565b612656828461313d565b8451101561269a5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610792565b6060821580156126b95760405191506000825260208201604052612703565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156126f25780518352602092830192016126da565b5050858452601f01601f1916604052505b50949350505050565b60008347101561275e5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610792565b81516000036127af5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610792565b8282516020840186f590506001600160a01b03811661177c5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610792565b8151156128205781518083602001fd5b8060405162461bcd60e51b81526004016107929190612ca2565b6001600160e01b031981168114610ef757600080fd5b60006020828403121561286257600080fd5b813561177c8161283a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156128ab576128ab61286d565b604052919050565b60006001600160401b038211156128cc576128cc61286d565b50601f01601f191660200190565b600082601f8301126128eb57600080fd5b81356128fe6128f9826128b3565b612883565b81815284602083860101111561291357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561294357600080fd5b8235915060208301356001600160401b0381111561296057600080fd5b61296c858286016128da565b9150509250929050565b60006001600160401b0382111561298f5761298f61286d565b5060051b60200190565b600082601f8301126129aa57600080fd5b813560206129ba6128f983612976565b82815260059290921b840181019181810190868411156129d957600080fd5b8286015b848110156129f457803583529183019183016129dd565b509695505050505050565b80356001600160a01b0381168114611a7057600080fd5b600082601f830112612a2757600080fd5b81356020612a376128f983612976565b82815260059290921b84018101918181019086841115612a5657600080fd5b8286015b848110156129f45780356001600160401b03811115612a795760008081fd5b612a878986838b01016128da565b845250918301918301612a5a565b60008060008060808587031215612aab57600080fd5b84356001600160401b0380821115612ac257600080fd5b612ace88838901612999565b9550602091508187013581811115612ae557600080fd5b8701601f81018913612af657600080fd5b8035612b046128f982612976565b81815260059190911b8201840190848101908b831115612b2357600080fd5b928501925b82841015612b4857612b39846129ff565b82529285019290850190612b28565b97505050506040870135915080821115612b6157600080fd5b612b6d88838901612999565b93506060870135915080821115612b8357600080fd5b50612b9087828801612a16565b91505092959194509250565b60005b83811015612bb7578181015183820152602001612b9f565b50506000910152565b60008151808452612bd8816020860160208601612b9c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c4157603f19888603018452612c2f858351612bc0565b94509285019290850190600101612c13565b5092979650505050505050565b60008060008060808587031215612c6457600080fd5b84359350612c74602086016129ff565b92506040850135915060608501356001600160401b03811115612c9657600080fd5b612b90878288016128da565b60208152600061177c6020830184612bc0565b600060208284031215612cc757600080fd5b5035919050565b60008060208385031215612ce157600080fd5b82356001600160401b0380821115612cf857600080fd5b818501915085601f830112612d0c57600080fd5b813581811115612d1b57600080fd5b8660208260051b8501011115612d3057600080fd5b60209290920196919550909350505050565b60008060408385031215612d5557600080fd5b82356001600160401b0380821115612d6c57600080fd5b612d7886838701612999565b93506020850135915080821115612d8e57600080fd5b5061296c85828601612a16565b600060208284031215612dad57600080fd5b81356001600160401b03811115612dc357600080fd5b610b8084828501612999565b600060208284031215612de157600080fd5b61177c826129ff565b805160208201516001600160601b03198082169291906014831015612e195780818460140360031b1b83161693505b505050919050565b60018060a01b03851681528360208201528260408201526080606082015260006121ba6080830184612bc0565b600060208284031215612e6057600080fd5b81516001600160401b03811115612e7657600080fd5b8201601f81018413612e8757600080fd5b8051612e956128f9826128b3565b818152856020838501011115612eaa57600080fd5b612499826020830160208601612b9c565b604081526000612ece6040830185612bc0565b82810360208401526124998185612bc0565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612f1d818460208701612b9c565b9190910192915050565b828152604060208201526000610b806040830184612bc0565b600060208284031215612f5257600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b604081526000612f826040830184612bc0565b828103602093840152600081529190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612fc657600080fd5b8301803591506001600160401b03821115612fe057600080fd5b6020019150368190038213156117c157600080fd5b8183823760009101908152919050565b600181811c9082168061301957607f821691505b60208210810361134757634e487b7160e01b600052602260045260246000fd5b805160208083015191908110156113475760001960209190910360031b1b16919050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b6000602082840312156130cc57600080fd5b815161177c8161283a565b60006bffffffffffffffffffffffff19808960601b168352808860601b166014840152808760601b1660288401525084603c8301528284605c8401375060009101605c0190815295945050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561084857610848613127565b601f821115610ef457600081815260208120601f850160051c810160208610156131775750805b601f850160051c820191505b8181101561319657828155600101613183565b505050505050565b81516001600160401b038111156131b7576131b761286d565b6131cb816131c58454613005565b84613150565b602080601f83116001811461320057600084156131e85750858301515b600019600386901b1c1916600185901b178555613196565b600085815260208120601f198616915b8281101561322f57888601518255948401946001909101908401613210565b508582101561324d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208201516001600160e01b03198082169291906004831015612e195760049290920360031b82901b161692915050565b818103818111156108485761084861312756fe9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c29c4705229491d365fb5434052e12a386d6771d976bea61070a8c694e8affea3da26469706673582212205aef3ca820f3692934d2b6cb89557c1af07b17bcf51aa369bb790a151ce30de664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x3488 CODESIZE SUB DUP1 PUSH3 0x3488 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x26 SWAP2 PUSH3 0x12D JUMP JUMPDEST CALLVALUE ISZERO PUSH3 0xAD JUMPI PUSH32 0x9C4705229491D365FB5434052E12A386D6771D976BEA61070A8C694E8AFFEA3D PUSH1 0x0 SHL CALLVALUE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9C3BA68EB5742B8E3961AEA0AFC7371A71BF433C8A67A831803B64C064A178C2 PUSH1 0x40 MLOAD PUSH3 0xA4 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH3 0xB8 DUP2 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0x15F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3319 DUP1 PUSH3 0x16F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEDFF9C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xEAD3FBDF EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x3DE JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x36D JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x44C028FE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x44C028FE EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x6BB56A14 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x1BFBA61 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x31858452 EQ PUSH2 0x26B JUMPI PUSH2 0x146 JUMP JUMPDEST CALLDATASIZE PUSH2 0x146 JUMPI CALLVALUE ISZERO PUSH2 0x144 JUMPI PUSH2 0x142 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x410 JUMP JUMPDEST POP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1C2 JUMPI CALLVALUE ISZERO PUSH2 0x1AD JUMPI PUSH2 0x1AB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x1CC DUP4 DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0xDAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x144 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x134D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302E31342E3 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x42F JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 EQ ISZERO JUMPDEST ISZERO PUSH2 0x488 JUMPI PUSH2 0x486 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH32 0xCFC51AEC37C55A4D0B1A65C6255C4BF2FBDF6277F3CC0730C45B828B6DB8B47 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x14 DUP3 MLOAD LT PUSH2 0x564 JUMPI PUSH1 0x0 PUSH2 0x4CB DUP4 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH2 0x4E1 DUP2 PUSH4 0x5122DDED PUSH1 0xE1 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5122DDED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA245BBDA SWAP1 PUSH2 0x518 SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x55F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH10 0xCFC51AEC37C55A4D0B1 PUSH1 0xB0 SHL DUP8 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58A DUP3 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x14 DUP3 MLOAD LT PUSH2 0x63B JUMPI PUSH1 0x0 PUSH2 0x5A2 DUP4 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH2 0x5B8 DUP2 PUSH4 0x5122DDED PUSH1 0xE1 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5122DDED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA245BBDA SWAP1 PUSH2 0x5EF SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x636 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST DUP4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64E SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP DUP8 CALLVALUE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x68A SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x6B7 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1670 JUMP JUMPDEST SWAP2 POP SWAP2 POP CALLVALUE PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x722 JUMPI PUSH2 0x720 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB370B2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x7B4 JUMPI PUSH1 0x0 PUSH2 0x7B6 JUMP JUMPDEST CALLVALUE JUMPDEST DUP9 DUP9 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x7E7 SWAP2 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x829 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x83F JUMPI SWAP4 POP PUSH2 0x848 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB135D3F PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x87F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24871B3D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x89A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1AED5A85 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x8B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x94BE5999 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1A0EB6A5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8DF JUMPI POP PUSH2 0x8DF DUP3 PUSH2 0x1720 JUMP JUMPDEST DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x93D SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x9D0 JUMPI POP DUP2 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0x9F7 JUMPI POP DUP2 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x9F5 SWAP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP6 ADD PUSH2 0x2F40 JUMP JUMPDEST EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xA0C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xA15 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA2D DUP7 DUP7 PUSH2 0x1783 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA46 PUSH2 0x2F59 JUMP JUMPDEST EQ PUSH2 0xA5F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 POP PUSH2 0x848 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA86 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xA8F JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP4 POP POP POP POP PUSH2 0x848 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xAFE SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xB2F JUMPI PUSH2 0xB27 DUP7 DUP7 DUP7 DUP7 PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3A DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP9 DUP9 DUP9 DUP9 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1A75 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xBE6 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xC0F JUMPI PUSH2 0xB27 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1A DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2A DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x848 DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6C PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC8A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xCC3 JUMPI PUSH2 0xCC3 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x2FAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE3 SWAP3 SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD85 JUMPI DUP1 MLOAD ISZERO PUSH2 0xD3D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C5350303A20626174636843616C6C7320726576657274656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD98 JUMPI PUSH2 0xD98 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xE50 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD5 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xE4C SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE71 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7B PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xED5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xED5 SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD PUSH2 0xE2B JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5758DD07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xF70 JUMPI PUSH2 0xF4B DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH2 0xF56 DUP3 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xF78 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFE0 SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1048 SWAP1 PUSH32 0xCECA317F109C43507871523E82DC2A3CC64DFA18F12DA0B6DB14F6E23F995538 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x10C3 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x10EA JUMPI PUSH2 0xEF4 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F5 DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH2 0x1101 DUP5 DUP5 PUSH2 0x1EDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1182 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1233 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x122B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1204 JUMPI PUSH2 0x1204 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x121E JUMPI PUSH2 0x121E PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1283 JUMPI PUSH2 0x127B DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1261 JUMPI PUSH2 0x1261 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x121E JUMPI PUSH2 0x121E PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1243 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1322 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI PUSH2 0x1315 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14F9 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1334 JUMPI PUSH2 0x1334 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x12F7 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1419 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x137D DUP3 PUSH2 0x1F34 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1408 SWAP1 PUSH32 0xE17117C9D2665D1DBEB479ED8058BBEBDE3C50AC50E2E65619F60006CAAC6926 SWAP1 PUSH1 0x60 ADD PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP3 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE SWAP1 POP PUSH2 0x1442 DUP4 PUSH2 0x1F34 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x14CD SWAP1 PUSH32 0xE17117C9D2665D1DBEB479ED8058BBEBDE3C50AC50E2E65619F60006CAAC6926 SWAP1 PUSH1 0x60 ADD PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1516 SWAP1 PUSH2 0x3005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1542 SWAP1 PUSH2 0x3005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x158F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1564 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x158F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1572 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x160D JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1619 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP5 AND PUSH1 0x2C DUP4 ADD MSTORE SWAP2 DUP3 SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0xB80 SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1695 PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A2 DUP3 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD LT ISZERO PUSH2 0x16BB JUMPI POP PUSH1 0x0 SWAP5 DUP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x15 SUB PUSH2 0x1708 JUMPI DUP1 PUSH1 0x14 DUP2 MLOAD DUP2 LT PUSH2 0x16D7 JUMPI PUSH2 0x16D7 PUSH2 0x2F99 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH2 0x1708 JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP6 PUSH1 0x1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1711 DUP2 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP6 PUSH1 0x0 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA918FA6B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1758 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1670 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1772 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 DUP5 PUSH2 0x159B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x17B9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x17AD DUP8 DUP3 DUP6 DUP6 PUSH2 0x1FA9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x17C1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD DUP6 MLOAD EQ ISZERO DUP1 PUSH2 0x17E9 JUMPI POP DUP3 MLOAD DUP5 MLOAD EQ ISZERO DUP1 PUSH2 0x17E9 JUMPI POP DUP2 MLOAD DUP4 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3FF55F4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x0 SUB PUSH2 0x1829 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9AD2B5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1844 PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1877 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1862 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x191B JUMPI PUSH2 0x18F6 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x189B JUMPI PUSH2 0x189B PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B5 JUMPI PUSH2 0x18B5 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18CF JUMPI PUSH2 0x18CF PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18E9 JUMPI PUSH2 0x18E9 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1B92 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1908 JUMPI PUSH2 0x1908 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x187D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH4 0xC392301 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x37A4A3C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDE928F14 SWAP1 PUSH2 0x1994 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP3 SWAP1 CALLVALUE SWAP1 PUSH1 0x0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x305D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19CF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19CC SWAP2 DUP2 ADD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A0E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x19FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x1347 PUSH1 0x0 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND PUSH3 0xDE928F PUSH1 0xE8 SHL EQ PUSH2 0x1A51 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D6741E3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 PUSH1 0x3 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD3FC45D3 CALLER ADDRESS CALLER CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AA0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B4E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0xEF4 PUSH1 0x1 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xD3FC45D3 PUSH1 0xE0 SHL EQ PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D6741E3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0x1BAB JUMPI PUSH2 0x1BA4 DUP5 DUP5 DUP5 PUSH2 0x209A JUMP JUMPDEST SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 DUP6 SUB PUSH2 0x1BE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1820C125 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP4 DUP4 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x2 DUP6 SUB PUSH2 0x1C1F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1820C125 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP4 DUP4 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x3 DUP6 SUB PUSH2 0x1C50 JUMPI DUP3 ISZERO PUSH2 0x1C46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39795E35 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP5 DUP4 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x4 DUP6 SUB PUSH2 0x1C81 JUMPI DUP3 ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AC83135 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP5 DUP4 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D60ECEF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x2 SLOAD NUMBER SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1CB1 SWAP1 PUSH1 0xC8 SWAP1 PUSH2 0x313D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CC0 PUSH1 0xC8 DUP4 PUSH2 0x313D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT DUP1 PUSH2 0x1CD0 JUMPI POP PUSH1 0x2 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1D18 JUMPI PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x81B7F830F1F0084DB6497C486CBE6974C86488DCC4E3738EAB94AB6D6B1653E7 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8404A1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1D4D PUSH1 0x0 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD1F66C3D2BC1993A86BE5E3D33709D98F0442381BEFCEDD29F578B9B2506B1CE SWAP2 SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1DAA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0x1AED5A85 PUSH1 0xE2 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6BB56A14 SWAP1 PUSH2 0x1DDD SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1120 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8A3C8A5 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1EC8 CALLER PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF7 DUP3 DUP3 PUSH2 0x319E JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1F28 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C0A54DF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1FE0 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x205D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x207D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8C6A8AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF351F PUSH1 0xE3 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x20CF DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E DUP7 PUSH1 0x40 MLOAD PUSH2 0x2116 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x213A SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x217C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21BA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH22 0x22A9219B991AAC1D102AB735B737BBB71022B93937B9 PUSH1 0x51 SHL DUP2 MSTORE POP PUSH2 0x2588 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x21F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF351F PUSH1 0xE3 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB81CD8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2245 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07489B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH32 0xA1FB700AAEE2AE4A2FF6F91CE7EBA292F89C2F5488B8EC4C5C5C8150692595C3 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2286 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x22E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB81CD8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP4 PUSH1 0x20 DUP6 MLOAD PUSH2 0x22F8 SWAP2 SWAP1 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x25A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x231A DUP5 PUSH1 0x0 PUSH1 0x20 DUP8 MLOAD PUSH2 0x2315 SWAP2 SWAP1 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2329 DUP7 DUP5 DUP5 PUSH2 0x270C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH32 0xA1FB700AAEE2AE4A2FF6F91CE7EBA292F89C2F5488B8EC4C5C5C8150692595C3 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23B0 DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x23F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x241B SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2499 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH22 0x22A9219B991AAC1D102AB735B737BBB71022B93937B9 PUSH1 0x51 SHL DUP2 MSTORE POP PUSH2 0x2588 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x24AD DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x24F5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2518 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1D516B2B PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x848 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2597 JUMPI POP DUP2 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x177C DUP4 DUP4 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AE DUP3 PUSH1 0x20 PUSH2 0x313D JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x746F427974657333325F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x260D DUP2 PUSH1 0x1F PUSH2 0x313D JUMP JUMPDEST LT ISZERO PUSH2 0x264C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x2656 DUP3 DUP5 PUSH2 0x313D JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x269A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x26B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x26F2 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x26DA JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SELFBALANCE LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x27AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2820 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x177C DUP2 PUSH2 0x283A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28AB JUMPI PUSH2 0x28AB PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x286D JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28FE PUSH2 0x28F9 DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH2 0x2883 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x298F JUMPI PUSH2 0x298F PUSH2 0x286D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x29BA PUSH2 0x28F9 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x29D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x29F4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x29DD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2A37 PUSH2 0x28F9 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x29F4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A79 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2A87 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x28DA JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2AC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ACE DUP9 DUP4 DUP10 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x2AF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2B04 PUSH2 0x28F9 DUP3 PUSH2 0x2976 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x2B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2B48 JUMPI PUSH2 0x2B39 DUP5 PUSH2 0x29FF JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2B28 JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B6D DUP9 DUP4 DUP10 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B90 DUP8 DUP3 DUP9 ADD PUSH2 0x2A16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2BD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C41 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2C2F DUP6 DUP4 MLOAD PUSH2 0x2BC0 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2C13 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2C74 PUSH1 0x20 DUP7 ADD PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B90 DUP8 DUP3 DUP9 ADD PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x177C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2D6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D78 DUP7 DUP4 DUP8 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177C DUP3 PUSH2 0x29FF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0x2E19 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x21BA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x2E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2E95 PUSH2 0x28F9 DUP3 PUSH2 0x28B3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2499 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2ECE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BC0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2499 DUP2 DUP6 PUSH2 0x2BC0 JUMP JUMPDEST DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F1D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2B9C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x0 DUP2 MSTORE SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x177C DUP2 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP10 PUSH1 0x60 SHL AND DUP4 MSTORE DUP1 DUP9 PUSH1 0x60 SHL AND PUSH1 0x14 DUP5 ADD MSTORE DUP1 DUP8 PUSH1 0x60 SHL AND PUSH1 0x28 DUP5 ADD MSTORE POP DUP5 PUSH1 0x3C DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x5C DUP5 ADD CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD PUSH1 0x5C ADD SWAP1 DUP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x848 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3177 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3196 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3183 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31B7 JUMPI PUSH2 0x31B7 PUSH2 0x286D JUMP JUMPDEST PUSH2 0x31CB DUP2 PUSH2 0x31C5 DUP5 SLOAD PUSH2 0x3005 JUMP JUMPDEST DUP5 PUSH2 0x3150 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3200 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x31E8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x322F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3210 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x324D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x2E19 JUMPI PUSH1 0x4 SWAP3 SWAP1 SWAP3 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x848 PUSH2 0x3127 JUMP INVALID SWAP13 EXTCODESIZE 0xA6 DUP15 0xB5 PUSH21 0x2B8E3961AEA0AFC7371A71BF433C8A67A831803B64 0xC0 PUSH5 0xA178C29C47 SDIV 0x22 SWAP5 SWAP2 0xD3 PUSH6 0xFB5434052E12 LOG3 DUP7 0xD6 PUSH24 0x1D976BEA61070A8C694E8AFFEA3DA2646970667358221220 GAS 0xEF EXTCODECOPY 0xA8 KECCAK256 RETURN PUSH10 0x2934D2B6CB89557C1AF0 PUSH28 0x17BCF51AA369BB790A151CE30DE664736F6C63430008130033000000 ","sourceMap":"1373:1014:37:-:0;;;2059:326;;;;;;;;;;;;;;;;;;:::i;:::-;2115:9;:14;2111:221;;447:66:8;2240:27:37;;2213:9;2185:10;-1:-1:-1;;;;;2150:171:37;;;;;;610:2:39;592:21;;;649:1;629:18;;;622:29;;;689:2;682:4;667:20;;660:32;;;708:18;;701:29;762:3;747:19;;309:463;2150:171:37;;;;;;;;2111:221;2342:36;2365:12;2342:22;:36::i;:::-;2059:326;1373:1014;;2133:194:3;782:7;808:6;-1:-1:-1;;;;;2201:19:3;;;808:6;;2201:19;2197:124;;2262:6;;;2241:38;;-1:-1:-1;;;;;2241:38:3;;;;2262:6;;;2241:38;;;2293:6;:17;;-1:-1:-1;;;;;;2293:17:3;-1:-1:-1;;;;;2293:17:3;;;;;2197:124;2133:194;:::o;14:290:39:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:39;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:39:o;309:463::-;1373:1014:37;;;;;;"},"deployedBytecode":{"functionDebugData":{"@RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY_2555":{"entryPoint":null,"id":2555,"parameterSlots":0,"returnSlots":0},"@RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD_2559":{"entryPoint":null,"id":2559,"parameterSlots":0,"returnSlots":0},"@VERSION_4120":{"entryPoint":null,"id":4120,"parameterSlots":0,"returnSlots":0},"@_1260":{"entryPoint":null,"id":1260,"parameterSlots":0,"returnSlots":0},"@_1293":{"entryPoint":null,"id":1293,"parameterSlots":2,"returnSlots":1},"@_acceptOwnership_2768":{"entryPoint":7826,"id":2768,"parameterSlots":0,"returnSlots":0},"@_deployCreate2_587":{"entryPoint":8896,"id":587,"parameterSlots":2,"returnSlots":1},"@_deployCreate_523":{"entryPoint":8644,"id":523,"parameterSlots":2,"returnSlots":1},"@_executeBatch_322":{"entryPoint":6088,"id":322,"parameterSlots":4,"returnSlots":1},"@_executeCall_381":{"entryPoint":8346,"id":381,"parameterSlots":3,"returnSlots":1},"@_executeDelegateCall_455":{"entryPoint":9378,"id":455,"parameterSlots":2,"returnSlots":1},"@_executeStaticCall_418":{"entryPoint":9125,"id":418,"parameterSlots":2,"returnSlots":1},"@_execute_223":{"entryPoint":7058,"id":223,"parameterSlots":4,"returnSlots":1},"@_fallbackLSP17Extendable_2381":{"entryPoint":1693,"id":2381,"parameterSlots":2,"returnSlots":1},"@_getData_781":{"entryPoint":5369,"id":781,"parameterSlots":1,"returnSlots":1},"@_getExtensionAndForwardValue_2454":{"entryPoint":5744,"id":2454,"parameterSlots":1,"returnSlots":2},"@_renounceOwnership_2836":{"entryPoint":7325,"id":2836,"parameterSlots":0,"returnSlots":0},"@_revertWithLSP20DefaultError_3340":{"entryPoint":8301,"id":3340,"parameterSlots":2,"returnSlots":0},"@_revert_4464":{"entryPoint":10256,"id":4464,"parameterSlots":2,"returnSlots":0},"@_setData_801":{"entryPoint":7903,"id":801,"parameterSlots":2,"returnSlots":0},"@_setOwner_954":{"entryPoint":7716,"id":954,"parameterSlots":1,"returnSlots":0},"@_supportsInterfaceInERC165Extension_2929":{"entryPoint":5957,"id":2929,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_2741":{"entryPoint":7988,"id":2741,"parameterSlots":1,"returnSlots":0},"@_verifyCallResult_3320":{"entryPoint":6773,"id":3320,"parameterSlots":2,"returnSlots":0},"@_verifyCall_3259":{"entryPoint":6437,"id":3259,"parameterSlots":1,"returnSlots":1},"@acceptOwnership_2052":{"entryPoint":3834,"id":2052,"parameterSlots":0,"returnSlots":0},"@batchCalls_1363":{"entryPoint":3154,"id":1363,"parameterSlots":2,"returnSlots":1},"@deploy_4511":{"entryPoint":9996,"id":4511,"parameterSlots":3,"returnSlots":1},"@executeBatch_1545":{"entryPoint":2720,"id":1545,"parameterSlots":4,"returnSlots":1},"@execute_1450":{"entryPoint":2952,"id":1450,"parameterSlots":4,"returnSlots":1},"@generateMappingKey_3604":{"entryPoint":5668,"id":3604,"parameterSlots":2,"returnSlots":1},"@getDataBatch_679":{"entryPoint":4771,"id":679,"parameterSlots":1,"returnSlots":1},"@getData_632":{"entryPoint":3143,"id":632,"parameterSlots":1,"returnSlots":1},"@isValidSignature_2290":{"entryPoint":2286,"id":2290,"parameterSlots":2,"returnSlots":1},"@notifyUniversalReceiver_3099":{"entryPoint":7568,"id":3099,"parameterSlots":3,"returnSlots":0},"@owner_869":{"entryPoint":null,"id":869,"parameterSlots":0,"returnSlots":1},"@pendingOwner_2589":{"entryPoint":null,"id":2589,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_2152":{"entryPoint":3501,"id":2152,"parameterSlots":0,"returnSlots":0},"@setDataBatch_1731":{"entryPoint":4390,"id":1731,"parameterSlots":2,"returnSlots":0},"@setData_1610":{"entryPoint":4199,"id":1610,"parameterSlots":2,"returnSlots":0},"@slice_6451":{"entryPoint":9727,"id":6451,"parameterSlots":3,"returnSlots":1},"@supportsERC165InterfaceUnchecked_5358":{"entryPoint":5531,"id":5358,"parameterSlots":2,"returnSlots":1},"@supportsInterface_115":{"entryPoint":9555,"id":115,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2195":{"entryPoint":2126,"id":2195,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2897":{"entryPoint":5920,"id":2897,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5164":{"entryPoint":null,"id":5164,"parameterSlots":1,"returnSlots":1},"@supportsInterface_822":{"entryPoint":8068,"id":822,"parameterSlots":1,"returnSlots":1},"@toBytes32_6685":{"entryPoint":9633,"id":6685,"parameterSlots":2,"returnSlots":1},"@transferOwnership_1975":{"entryPoint":4941,"id":1975,"parameterSlots":1,"returnSlots":0},"@tryRecover_4875":{"entryPoint":6019,"id":4875,"parameterSlots":2,"returnSlots":2},"@tryRecover_5043":{"entryPoint":8105,"id":5043,"parameterSlots":4,"returnSlots":2},"@universalReceiver_1879":{"entryPoint":1040,"id":1879,"parameterSlots":2,"returnSlots":1},"@verifyCallResult_4444":{"entryPoint":9608,"id":4444,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":10751,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes_dyn":{"entryPoint":10774,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":10649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":10458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":11675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":11586,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":11470,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":10901,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":11445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":12096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":10544,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10320,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":11854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11342,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_bytes":{"entryPoint":11200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12503,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes4__to_t_bytes4__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12277,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":12000,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12381,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11809,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes4__to_t_bool_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12071,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11963,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff386dbcb1aa30fe75dc1688ef2484c609e6f34f17710a6791ce87ec883580dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":12207,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":10371,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":10614,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":10419,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12605,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12944,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":12624,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":11754,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":12345,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes4":{"entryPoint":12893,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":12702,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11164,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12293,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12583,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12121,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12185,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10349,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":10298,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25122:39","statements":[{"nodeType":"YulBlock","src":"6:3:39","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:39","statements":[{"nodeType":"YulAssignment","src":"125:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:39"},"nodeType":"YulFunctionCall","src":"133:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:39"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:39"},"nodeType":"YulFunctionCall","src":"160:25:39"},"nodeType":"YulExpressionStatement","src":"160:25:39"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:39","type":""}],"src":"14:177:39"},{"body":{"nodeType":"YulBlock","src":"240:87:39","statements":[{"body":{"nodeType":"YulBlock","src":"305:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"314:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"307:6:39"},"nodeType":"YulFunctionCall","src":"307:12:39"},"nodeType":"YulExpressionStatement","src":"307:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"263:5:39"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"274:5:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"290:10:39","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"281:3:39"},"nodeType":"YulFunctionCall","src":"281:20:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"270:3:39"},"nodeType":"YulFunctionCall","src":"270:32:39"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"260:2:39"},"nodeType":"YulFunctionCall","src":"260:43:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"253:6:39"},"nodeType":"YulFunctionCall","src":"253:51:39"},"nodeType":"YulIf","src":"250:71:39"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"229:5:39","type":""}],"src":"196:131:39"},{"body":{"nodeType":"YulBlock","src":"401:176:39","statements":[{"body":{"nodeType":"YulBlock","src":"447:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"456:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"459:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"449:6:39"},"nodeType":"YulFunctionCall","src":"449:12:39"},"nodeType":"YulExpressionStatement","src":"449:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"422:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"431:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"418:3:39"},"nodeType":"YulFunctionCall","src":"418:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"414:3:39"},"nodeType":"YulFunctionCall","src":"414:32:39"},"nodeType":"YulIf","src":"411:52:39"},{"nodeType":"YulVariableDeclaration","src":"472:36:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"485:12:39"},"nodeType":"YulFunctionCall","src":"485:23:39"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"476:5:39","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"541:5:39"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"517:23:39"},"nodeType":"YulFunctionCall","src":"517:30:39"},"nodeType":"YulExpressionStatement","src":"517:30:39"},{"nodeType":"YulAssignment","src":"556:15:39","value":{"name":"value","nodeType":"YulIdentifier","src":"566:5:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"556:6:39"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"367:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"378:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"390:6:39","type":""}],"src":"332:245:39"},{"body":{"nodeType":"YulBlock","src":"677:92:39","statements":[{"nodeType":"YulAssignment","src":"687:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"699:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"695:3:39"},"nodeType":"YulFunctionCall","src":"695:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"687:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"729:9:39"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"754:6:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"747:6:39"},"nodeType":"YulFunctionCall","src":"747:14:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"740:6:39"},"nodeType":"YulFunctionCall","src":"740:22:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"722:6:39"},"nodeType":"YulFunctionCall","src":"722:41:39"},"nodeType":"YulExpressionStatement","src":"722:41:39"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"646:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"657:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"668:4:39","type":""}],"src":"582:187:39"},{"body":{"nodeType":"YulBlock","src":"806:95:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"823:1:39","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"835:10:39","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"826:3:39"},"nodeType":"YulFunctionCall","src":"826:20:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"816:6:39"},"nodeType":"YulFunctionCall","src":"816:31:39"},"nodeType":"YulExpressionStatement","src":"816:31:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"863:1:39","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"866:4:39","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"856:6:39"},"nodeType":"YulFunctionCall","src":"856:15:39"},"nodeType":"YulExpressionStatement","src":"856:15:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:39"},"nodeType":"YulFunctionCall","src":"880:15:39"},"nodeType":"YulExpressionStatement","src":"880:15:39"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"774:127:39"},{"body":{"nodeType":"YulBlock","src":"951:230:39","statements":[{"nodeType":"YulAssignment","src":"961:19:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"977:2:39","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"971:5:39"},"nodeType":"YulFunctionCall","src":"971:9:39"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"961:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"989:58:39","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1011:6:39"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1027:4:39"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:39"},"nodeType":"YulFunctionCall","src":"1023:13:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1042:2:39","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1038:3:39"},"nodeType":"YulFunctionCall","src":"1038:7:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1019:3:39"},"nodeType":"YulFunctionCall","src":"1019:27:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1007:3:39"},"nodeType":"YulFunctionCall","src":"1007:40:39"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"993:10:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"1122:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1124:16:39"},"nodeType":"YulFunctionCall","src":"1124:18:39"},"nodeType":"YulExpressionStatement","src":"1124:18:39"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1065:10:39"},{"kind":"number","nodeType":"YulLiteral","src":"1077:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1062:2:39"},"nodeType":"YulFunctionCall","src":"1062:34:39"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1101:10:39"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1113:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1098:2:39"},"nodeType":"YulFunctionCall","src":"1098:22:39"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1059:2:39"},"nodeType":"YulFunctionCall","src":"1059:62:39"},"nodeType":"YulIf","src":"1056:88:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1160:2:39","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1164:10:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1153:6:39"},"nodeType":"YulFunctionCall","src":"1153:22:39"},"nodeType":"YulExpressionStatement","src":"1153:22:39"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"931:4:39","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"940:6:39","type":""}],"src":"906:275:39"},{"body":{"nodeType":"YulBlock","src":"1243:129:39","statements":[{"body":{"nodeType":"YulBlock","src":"1287:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1289:16:39"},"nodeType":"YulFunctionCall","src":"1289:18:39"},"nodeType":"YulExpressionStatement","src":"1289:18:39"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1259:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"1267:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1256:2:39"},"nodeType":"YulFunctionCall","src":"1256:30:39"},"nodeType":"YulIf","src":"1253:56:39"},{"nodeType":"YulAssignment","src":"1318:48:39","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1338:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"1346:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1334:3:39"},"nodeType":"YulFunctionCall","src":"1334:15:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1355:2:39","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1351:3:39"},"nodeType":"YulFunctionCall","src":"1351:7:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1330:3:39"},"nodeType":"YulFunctionCall","src":"1330:29:39"},{"kind":"number","nodeType":"YulLiteral","src":"1361:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1326:3:39"},"nodeType":"YulFunctionCall","src":"1326:40:39"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1318:4:39"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1223:6:39","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1234:4:39","type":""}],"src":"1186:186:39"},{"body":{"nodeType":"YulBlock","src":"1429:410:39","statements":[{"body":{"nodeType":"YulBlock","src":"1478:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1487:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1490:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1480:6:39"},"nodeType":"YulFunctionCall","src":"1480:12:39"},"nodeType":"YulExpressionStatement","src":"1480:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1457:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"1465:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1453:3:39"},"nodeType":"YulFunctionCall","src":"1453:17:39"},{"name":"end","nodeType":"YulIdentifier","src":"1472:3:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1449:3:39"},"nodeType":"YulFunctionCall","src":"1449:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:39"},"nodeType":"YulFunctionCall","src":"1442:35:39"},"nodeType":"YulIf","src":"1439:55:39"},{"nodeType":"YulVariableDeclaration","src":"1503:30:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1526:6:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1513:12:39"},"nodeType":"YulFunctionCall","src":"1513:20:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1507:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1542:63:39","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1601:2:39"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"1573:27:39"},"nodeType":"YulFunctionCall","src":"1573:31:39"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1557:15:39"},"nodeType":"YulFunctionCall","src":"1557:48:39"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1546:7:39","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1621:7:39"},{"name":"_1","nodeType":"YulIdentifier","src":"1630:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1614:6:39"},"nodeType":"YulFunctionCall","src":"1614:19:39"},"nodeType":"YulExpressionStatement","src":"1614:19:39"},{"body":{"nodeType":"YulBlock","src":"1681:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1690:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1693:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1683:6:39"},"nodeType":"YulFunctionCall","src":"1683:12:39"},"nodeType":"YulExpressionStatement","src":"1683:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1656:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"1664:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:39"},"nodeType":"YulFunctionCall","src":"1652:15:39"},{"kind":"number","nodeType":"YulLiteral","src":"1669:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:39"},"nodeType":"YulFunctionCall","src":"1648:26:39"},{"name":"end","nodeType":"YulIdentifier","src":"1676:3:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1645:2:39"},"nodeType":"YulFunctionCall","src":"1645:35:39"},"nodeType":"YulIf","src":"1642:55:39"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1723:7:39"},{"kind":"number","nodeType":"YulLiteral","src":"1732:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:39"},"nodeType":"YulFunctionCall","src":"1719:18:39"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1743:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"1751:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:39"},"nodeType":"YulFunctionCall","src":"1739:17:39"},{"name":"_1","nodeType":"YulIdentifier","src":"1758:2:39"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1706:12:39"},"nodeType":"YulFunctionCall","src":"1706:55:39"},"nodeType":"YulExpressionStatement","src":"1706:55:39"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1785:7:39"},{"name":"_1","nodeType":"YulIdentifier","src":"1794:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1781:3:39"},"nodeType":"YulFunctionCall","src":"1781:16:39"},{"kind":"number","nodeType":"YulLiteral","src":"1799:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1777:3:39"},"nodeType":"YulFunctionCall","src":"1777:27:39"},{"kind":"number","nodeType":"YulLiteral","src":"1806:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1770:6:39"},"nodeType":"YulFunctionCall","src":"1770:38:39"},"nodeType":"YulExpressionStatement","src":"1770:38:39"},{"nodeType":"YulAssignment","src":"1817:16:39","value":{"name":"array_1","nodeType":"YulIdentifier","src":"1826:7:39"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1817:5:39"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1403:6:39","type":""},{"name":"end","nodeType":"YulTypedName","src":"1411:3:39","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1419:5:39","type":""}],"src":"1377:462:39"},{"body":{"nodeType":"YulBlock","src":"1940:292:39","statements":[{"body":{"nodeType":"YulBlock","src":"1986:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1995:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1998:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1988:6:39"},"nodeType":"YulFunctionCall","src":"1988:12:39"},"nodeType":"YulExpressionStatement","src":"1988:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:39"},"nodeType":"YulFunctionCall","src":"1957:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:39"},"nodeType":"YulFunctionCall","src":"1953:32:39"},"nodeType":"YulIf","src":"1950:52:39"},{"nodeType":"YulAssignment","src":"2011:33:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2034:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2021:12:39"},"nodeType":"YulFunctionCall","src":"2021:23:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2011:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"2053:46:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2084:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"2095:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2080:3:39"},"nodeType":"YulFunctionCall","src":"2080:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2067:12:39"},"nodeType":"YulFunctionCall","src":"2067:32:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2057:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"2142:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2151:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2154:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2144:6:39"},"nodeType":"YulFunctionCall","src":"2144:12:39"},"nodeType":"YulExpressionStatement","src":"2144:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2114:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"2122:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2111:2:39"},"nodeType":"YulFunctionCall","src":"2111:30:39"},"nodeType":"YulIf","src":"2108:50:39"},{"nodeType":"YulAssignment","src":"2167:59:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2198:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"2209:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:39"},"nodeType":"YulFunctionCall","src":"2194:22:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2218:7:39"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"2177:16:39"},"nodeType":"YulFunctionCall","src":"2177:49:39"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2167:6:39"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1898:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1909:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1921:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1929:6:39","type":""}],"src":"1844:388:39"},{"body":{"nodeType":"YulBlock","src":"2336:103:39","statements":[{"nodeType":"YulAssignment","src":"2346:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"2369:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:39"},"nodeType":"YulFunctionCall","src":"2354:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2346:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2388:9:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2403:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2415:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2420:10:39","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2411:3:39"},"nodeType":"YulFunctionCall","src":"2411:20:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2399:3:39"},"nodeType":"YulFunctionCall","src":"2399:33:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2381:6:39"},"nodeType":"YulFunctionCall","src":"2381:52:39"},"nodeType":"YulExpressionStatement","src":"2381:52:39"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2305:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2316:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2327:4:39","type":""}],"src":"2237:202:39"},{"body":{"nodeType":"YulBlock","src":"2513:114:39","statements":[{"body":{"nodeType":"YulBlock","src":"2557:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2559:16:39"},"nodeType":"YulFunctionCall","src":"2559:18:39"},"nodeType":"YulExpressionStatement","src":"2559:18:39"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2529:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"2537:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2526:2:39"},"nodeType":"YulFunctionCall","src":"2526:30:39"},"nodeType":"YulIf","src":"2523:56:39"},{"nodeType":"YulAssignment","src":"2588:33:39","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2604:1:39","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2607:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2600:3:39"},"nodeType":"YulFunctionCall","src":"2600:14:39"},{"kind":"number","nodeType":"YulLiteral","src":"2616:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2596:3:39"},"nodeType":"YulFunctionCall","src":"2596:25:39"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2588:4:39"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2493:6:39","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2504:4:39","type":""}],"src":"2444:183:39"},{"body":{"nodeType":"YulBlock","src":"2696:598:39","statements":[{"body":{"nodeType":"YulBlock","src":"2745:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2754:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2757:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2747:6:39"},"nodeType":"YulFunctionCall","src":"2747:12:39"},"nodeType":"YulExpressionStatement","src":"2747:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2724:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"2732:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2720:3:39"},"nodeType":"YulFunctionCall","src":"2720:17:39"},{"name":"end","nodeType":"YulIdentifier","src":"2739:3:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2716:3:39"},"nodeType":"YulFunctionCall","src":"2716:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2709:6:39"},"nodeType":"YulFunctionCall","src":"2709:35:39"},"nodeType":"YulIf","src":"2706:55:39"},{"nodeType":"YulVariableDeclaration","src":"2770:30:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2793:6:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2780:12:39"},"nodeType":"YulFunctionCall","src":"2780:20:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2774:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2809:14:39","value":{"kind":"number","nodeType":"YulLiteral","src":"2819:4:39","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2813:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2832:71:39","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2899:2:39"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2859:39:39"},"nodeType":"YulFunctionCall","src":"2859:43:39"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2843:15:39"},"nodeType":"YulFunctionCall","src":"2843:60:39"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2836:3:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2912:16:39","value":{"name":"dst","nodeType":"YulIdentifier","src":"2925:3:39"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2916:5:39","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2944:3:39"},{"name":"_1","nodeType":"YulIdentifier","src":"2949:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2937:6:39"},"nodeType":"YulFunctionCall","src":"2937:15:39"},"nodeType":"YulExpressionStatement","src":"2937:15:39"},{"nodeType":"YulAssignment","src":"2961:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2972:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"2977:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:39"},"nodeType":"YulFunctionCall","src":"2968:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2961:3:39"}]},{"nodeType":"YulVariableDeclaration","src":"2989:46:39","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3011:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:39","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3026:2:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3019:3:39"},"nodeType":"YulFunctionCall","src":"3019:10:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3007:3:39"},"nodeType":"YulFunctionCall","src":"3007:23:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3032:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:39"},"nodeType":"YulFunctionCall","src":"3003:32:39"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2993:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"3063:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3072:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3075:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3065:6:39"},"nodeType":"YulFunctionCall","src":"3065:12:39"},"nodeType":"YulExpressionStatement","src":"3065:12:39"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3050:6:39"},{"name":"end","nodeType":"YulIdentifier","src":"3058:3:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:39"},"nodeType":"YulFunctionCall","src":"3047:15:39"},"nodeType":"YulIf","src":"3044:35:39"},{"nodeType":"YulVariableDeclaration","src":"3088:26:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3103:6:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3111:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3099:3:39"},"nodeType":"YulFunctionCall","src":"3099:15:39"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3092:3:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"3179:86:39","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3200:3:39"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3218:3:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3205:12:39"},"nodeType":"YulFunctionCall","src":"3205:17:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3193:6:39"},"nodeType":"YulFunctionCall","src":"3193:30:39"},"nodeType":"YulExpressionStatement","src":"3193:30:39"},{"nodeType":"YulAssignment","src":"3236:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3247:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3252:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3243:3:39"},"nodeType":"YulFunctionCall","src":"3243:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3236:3:39"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3134:3:39"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3139:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3131:2:39"},"nodeType":"YulFunctionCall","src":"3131:15:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3147:23:39","statements":[{"nodeType":"YulAssignment","src":"3149:19:39","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3160:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3165:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3156:3:39"},"nodeType":"YulFunctionCall","src":"3156:12:39"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3149:3:39"}]}]},"pre":{"nodeType":"YulBlock","src":"3127:3:39","statements":[]},"src":"3123:142:39"},{"nodeType":"YulAssignment","src":"3274:14:39","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3283:5:39"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3274:5:39"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2670:6:39","type":""},{"name":"end","nodeType":"YulTypedName","src":"2678:3:39","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2686:5:39","type":""}],"src":"2632:662:39"},{"body":{"nodeType":"YulBlock","src":"3348:124:39","statements":[{"nodeType":"YulAssignment","src":"3358:29:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3380:6:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3367:12:39"},"nodeType":"YulFunctionCall","src":"3367:20:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3358:5:39"}]},{"body":{"nodeType":"YulBlock","src":"3450:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3459:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3462:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3452:6:39"},"nodeType":"YulFunctionCall","src":"3452:12:39"},"nodeType":"YulExpressionStatement","src":"3452:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3409:5:39"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3420:5:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3435:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3440:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3431:3:39"},"nodeType":"YulFunctionCall","src":"3431:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"3444:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3427:3:39"},"nodeType":"YulFunctionCall","src":"3427:19:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3416:3:39"},"nodeType":"YulFunctionCall","src":"3416:31:39"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3406:2:39"},"nodeType":"YulFunctionCall","src":"3406:42:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3399:6:39"},"nodeType":"YulFunctionCall","src":"3399:50:39"},"nodeType":"YulIf","src":"3396:70:39"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3327:6:39","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3338:5:39","type":""}],"src":"3299:173:39"},{"body":{"nodeType":"YulBlock","src":"3539:824:39","statements":[{"body":{"nodeType":"YulBlock","src":"3588:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3597:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3600:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3590:6:39"},"nodeType":"YulFunctionCall","src":"3590:12:39"},"nodeType":"YulExpressionStatement","src":"3590:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3567:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"3575:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:39"},"nodeType":"YulFunctionCall","src":"3563:17:39"},{"name":"end","nodeType":"YulIdentifier","src":"3582:3:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3559:3:39"},"nodeType":"YulFunctionCall","src":"3559:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3552:6:39"},"nodeType":"YulFunctionCall","src":"3552:35:39"},"nodeType":"YulIf","src":"3549:55:39"},{"nodeType":"YulVariableDeclaration","src":"3613:30:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3636:6:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3623:12:39"},"nodeType":"YulFunctionCall","src":"3623:20:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3617:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3652:14:39","value":{"kind":"number","nodeType":"YulLiteral","src":"3662:4:39","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3656:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3675:71:39","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3742:2:39"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"3702:39:39"},"nodeType":"YulFunctionCall","src":"3702:43:39"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3686:15:39"},"nodeType":"YulFunctionCall","src":"3686:60:39"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3679:3:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3755:16:39","value":{"name":"dst","nodeType":"YulIdentifier","src":"3768:3:39"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3759:5:39","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3787:3:39"},{"name":"_1","nodeType":"YulIdentifier","src":"3792:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3780:6:39"},"nodeType":"YulFunctionCall","src":"3780:15:39"},"nodeType":"YulExpressionStatement","src":"3780:15:39"},{"nodeType":"YulAssignment","src":"3804:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3815:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3820:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:39"},"nodeType":"YulFunctionCall","src":"3811:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3804:3:39"}]},{"nodeType":"YulVariableDeclaration","src":"3832:46:39","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3854:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:1:39","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3869:2:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3862:3:39"},"nodeType":"YulFunctionCall","src":"3862:10:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3850:3:39"},"nodeType":"YulFunctionCall","src":"3850:23:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3875:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3846:3:39"},"nodeType":"YulFunctionCall","src":"3846:32:39"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3836:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"3906:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3915:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3918:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3908:6:39"},"nodeType":"YulFunctionCall","src":"3908:12:39"},"nodeType":"YulExpressionStatement","src":"3908:12:39"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3893:6:39"},{"name":"end","nodeType":"YulIdentifier","src":"3901:3:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3890:2:39"},"nodeType":"YulFunctionCall","src":"3890:15:39"},"nodeType":"YulIf","src":"3887:35:39"},{"nodeType":"YulVariableDeclaration","src":"3931:26:39","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3946:6:39"},{"name":"_2","nodeType":"YulIdentifier","src":"3954:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:39"},"nodeType":"YulFunctionCall","src":"3942:15:39"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3935:3:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"4022:312:39","statements":[{"nodeType":"YulVariableDeclaration","src":"4036:36:39","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4068:3:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4055:12:39"},"nodeType":"YulFunctionCall","src":"4055:17:39"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"4040:11:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"4136:74:39","statements":[{"nodeType":"YulVariableDeclaration","src":"4154:11:39","value":{"kind":"number","nodeType":"YulLiteral","src":"4164:1:39","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4158:2:39","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4189:2:39"},{"name":"_3","nodeType":"YulIdentifier","src":"4193:2:39"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4182:6:39"},"nodeType":"YulFunctionCall","src":"4182:14:39"},"nodeType":"YulExpressionStatement","src":"4182:14:39"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"4091:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"4104:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4088:2:39"},"nodeType":"YulFunctionCall","src":"4088:35:39"},"nodeType":"YulIf","src":"4085:125:39"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4230:3:39"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4260:6:39"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"4268:11:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:39"},"nodeType":"YulFunctionCall","src":"4256:24:39"},{"name":"_2","nodeType":"YulIdentifier","src":"4282:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4252:3:39"},"nodeType":"YulFunctionCall","src":"4252:33:39"},{"name":"end","nodeType":"YulIdentifier","src":"4287:3:39"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4235:16:39"},"nodeType":"YulFunctionCall","src":"4235:56:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:39"},"nodeType":"YulFunctionCall","src":"4223:69:39"},"nodeType":"YulExpressionStatement","src":"4223:69:39"},{"nodeType":"YulAssignment","src":"4305:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4316:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"4321:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4312:3:39"},"nodeType":"YulFunctionCall","src":"4312:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4305:3:39"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3977:3:39"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3982:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3974:2:39"},"nodeType":"YulFunctionCall","src":"3974:15:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3990:23:39","statements":[{"nodeType":"YulAssignment","src":"3992:19:39","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4003:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"4008:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:39"},"nodeType":"YulFunctionCall","src":"3999:12:39"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3992:3:39"}]}]},"pre":{"nodeType":"YulBlock","src":"3970:3:39","statements":[]},"src":"3966:368:39"},{"nodeType":"YulAssignment","src":"4343:14:39","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4352:5:39"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4343:5:39"}]}]},"name":"abi_decode_array_bytes_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3513:6:39","type":""},{"name":"end","nodeType":"YulTypedName","src":"3521:3:39","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3529:5:39","type":""}],"src":"3477:886:39"},{"body":{"nodeType":"YulBlock","src":"4598:1374:39","statements":[{"body":{"nodeType":"YulBlock","src":"4645:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4654:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4657:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4647:6:39"},"nodeType":"YulFunctionCall","src":"4647:12:39"},"nodeType":"YulExpressionStatement","src":"4647:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:39"},"nodeType":"YulFunctionCall","src":"4615:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"4640:3:39","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:39"},"nodeType":"YulFunctionCall","src":"4611:33:39"},"nodeType":"YulIf","src":"4608:53:39"},{"nodeType":"YulVariableDeclaration","src":"4670:37:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4697:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4684:12:39"},"nodeType":"YulFunctionCall","src":"4684:23:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4674:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4716:28:39","value":{"kind":"number","nodeType":"YulLiteral","src":"4726:18:39","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4720:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"4771:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4780:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4783:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4773:6:39"},"nodeType":"YulFunctionCall","src":"4773:12:39"},"nodeType":"YulExpressionStatement","src":"4773:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4759:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"4767:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4756:2:39"},"nodeType":"YulFunctionCall","src":"4756:14:39"},"nodeType":"YulIf","src":"4753:34:39"},{"nodeType":"YulAssignment","src":"4796:71:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:39"},"nodeType":"YulFunctionCall","src":"4835:22:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:39"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4806:28:39"},"nodeType":"YulFunctionCall","src":"4806:61:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4796:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"4876:12:39","value":{"kind":"number","nodeType":"YulLiteral","src":"4886:2:39","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4880:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4897:48:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:39"},{"name":"_2","nodeType":"YulIdentifier","src":"4941:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:39"},"nodeType":"YulFunctionCall","src":"4926:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4913:12:39"},"nodeType":"YulFunctionCall","src":"4913:32:39"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4901:8:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"4974:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4983:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4986:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4976:6:39"},"nodeType":"YulFunctionCall","src":"4976:12:39"},"nodeType":"YulExpressionStatement","src":"4976:12:39"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4960:8:39"},{"name":"_1","nodeType":"YulIdentifier","src":"4970:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4957:2:39"},"nodeType":"YulFunctionCall","src":"4957:16:39"},"nodeType":"YulIf","src":"4954:36:39"},{"nodeType":"YulVariableDeclaration","src":"4999:34:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5013:9:39"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5024:8:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5009:3:39"},"nodeType":"YulFunctionCall","src":"5009:24:39"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5003:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"5081:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5090:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5093:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5083:6:39"},"nodeType":"YulFunctionCall","src":"5083:12:39"},"nodeType":"YulExpressionStatement","src":"5083:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5060:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"5064:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5056:3:39"},"nodeType":"YulFunctionCall","src":"5056:13:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5071:7:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5052:3:39"},"nodeType":"YulFunctionCall","src":"5052:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5045:6:39"},"nodeType":"YulFunctionCall","src":"5045:35:39"},"nodeType":"YulIf","src":"5042:55:39"},{"nodeType":"YulVariableDeclaration","src":"5106:26:39","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5129:2:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5116:12:39"},"nodeType":"YulFunctionCall","src":"5116:16:39"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5110:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5141:71:39","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"5208:2:39"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5168:39:39"},"nodeType":"YulFunctionCall","src":"5168:43:39"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5152:15:39"},"nodeType":"YulFunctionCall","src":"5152:60:39"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5145:3:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5221:16:39","value":{"name":"dst","nodeType":"YulIdentifier","src":"5234:3:39"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5225:5:39","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5253:3:39"},{"name":"_4","nodeType":"YulIdentifier","src":"5258:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5246:6:39"},"nodeType":"YulFunctionCall","src":"5246:15:39"},"nodeType":"YulExpressionStatement","src":"5246:15:39"},{"nodeType":"YulAssignment","src":"5270:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5281:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"5286:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:39"},"nodeType":"YulFunctionCall","src":"5277:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5270:3:39"}]},{"nodeType":"YulVariableDeclaration","src":"5298:42:39","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5320:2:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5328:1:39","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"5331:2:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5324:3:39"},"nodeType":"YulFunctionCall","src":"5324:10:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5316:3:39"},"nodeType":"YulFunctionCall","src":"5316:19:39"},{"name":"_2","nodeType":"YulIdentifier","src":"5337:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5312:3:39"},"nodeType":"YulFunctionCall","src":"5312:28:39"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5302:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"5372:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5381:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5384:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5374:6:39"},"nodeType":"YulFunctionCall","src":"5374:12:39"},"nodeType":"YulExpressionStatement","src":"5374:12:39"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5355:6:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5363:7:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5352:2:39"},"nodeType":"YulFunctionCall","src":"5352:19:39"},"nodeType":"YulIf","src":"5349:39:39"},{"nodeType":"YulVariableDeclaration","src":"5397:22:39","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5412:2:39"},{"name":"_2","nodeType":"YulIdentifier","src":"5416:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:39"},"nodeType":"YulFunctionCall","src":"5408:11:39"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5401:3:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"5484:92:39","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5505:3:39"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5529:3:39"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5510:18:39"},"nodeType":"YulFunctionCall","src":"5510:23:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5498:6:39"},"nodeType":"YulFunctionCall","src":"5498:36:39"},"nodeType":"YulExpressionStatement","src":"5498:36:39"},{"nodeType":"YulAssignment","src":"5547:19:39","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5558:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"5563:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5554:3:39"},"nodeType":"YulFunctionCall","src":"5554:12:39"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5547:3:39"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5439:3:39"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5444:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5436:2:39"},"nodeType":"YulFunctionCall","src":"5436:15:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5452:23:39","statements":[{"nodeType":"YulAssignment","src":"5454:19:39","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5465:3:39"},{"name":"_2","nodeType":"YulIdentifier","src":"5470:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5461:3:39"},"nodeType":"YulFunctionCall","src":"5461:12:39"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5454:3:39"}]}]},"pre":{"nodeType":"YulBlock","src":"5432:3:39","statements":[]},"src":"5428:148:39"},{"nodeType":"YulAssignment","src":"5585:15:39","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5595:5:39"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5585:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"5609:48:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5642:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"5653:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5638:3:39"},"nodeType":"YulFunctionCall","src":"5638:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5625:12:39"},"nodeType":"YulFunctionCall","src":"5625:32:39"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5613:8:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"5686:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5695:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5698:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5688:6:39"},"nodeType":"YulFunctionCall","src":"5688:12:39"},"nodeType":"YulExpressionStatement","src":"5688:12:39"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5672:8:39"},{"name":"_1","nodeType":"YulIdentifier","src":"5682:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5669:2:39"},"nodeType":"YulFunctionCall","src":"5669:16:39"},"nodeType":"YulIf","src":"5666:36:39"},{"nodeType":"YulAssignment","src":"5711:73:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:39"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5765:8:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:39"},"nodeType":"YulFunctionCall","src":"5750:24:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5776:7:39"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5721:28:39"},"nodeType":"YulFunctionCall","src":"5721:63:39"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5711:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"5793:48:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5826:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"5837:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5822:3:39"},"nodeType":"YulFunctionCall","src":"5822:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5809:12:39"},"nodeType":"YulFunctionCall","src":"5809:32:39"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"5797:8:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"5870:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5879:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5882:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5872:6:39"},"nodeType":"YulFunctionCall","src":"5872:12:39"},"nodeType":"YulExpressionStatement","src":"5872:12:39"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"5856:8:39"},{"name":"_1","nodeType":"YulIdentifier","src":"5866:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5853:2:39"},"nodeType":"YulFunctionCall","src":"5853:16:39"},"nodeType":"YulIf","src":"5850:36:39"},{"nodeType":"YulAssignment","src":"5895:71:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5936:9:39"},{"name":"offset_3","nodeType":"YulIdentifier","src":"5947:8:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5932:3:39"},"nodeType":"YulFunctionCall","src":"5932:24:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5958:7:39"}],"functionName":{"name":"abi_decode_array_bytes_dyn","nodeType":"YulIdentifier","src":"5905:26:39"},"nodeType":"YulFunctionCall","src":"5905:61:39"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5895:6:39"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4540:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4551:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4563:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4571:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4579:6:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4587:6:39","type":""}],"src":"4368:1604:39"},{"body":{"nodeType":"YulBlock","src":"6043:184:39","statements":[{"nodeType":"YulVariableDeclaration","src":"6053:10:39","value":{"kind":"number","nodeType":"YulLiteral","src":"6062:1:39","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6057:1:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"6122:63:39","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6147:3:39"},{"name":"i","nodeType":"YulIdentifier","src":"6152:1:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6143:3:39"},"nodeType":"YulFunctionCall","src":"6143:11:39"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6166:3:39"},{"name":"i","nodeType":"YulIdentifier","src":"6171:1:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6162:3:39"},"nodeType":"YulFunctionCall","src":"6162:11:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6156:5:39"},"nodeType":"YulFunctionCall","src":"6156:18:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6136:6:39"},"nodeType":"YulFunctionCall","src":"6136:39:39"},"nodeType":"YulExpressionStatement","src":"6136:39:39"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6083:1:39"},{"name":"length","nodeType":"YulIdentifier","src":"6086:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6080:2:39"},"nodeType":"YulFunctionCall","src":"6080:13:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6094:19:39","statements":[{"nodeType":"YulAssignment","src":"6096:15:39","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6105:1:39"},{"kind":"number","nodeType":"YulLiteral","src":"6108:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:39"},"nodeType":"YulFunctionCall","src":"6101:10:39"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6096:1:39"}]}]},"pre":{"nodeType":"YulBlock","src":"6076:3:39","statements":[]},"src":"6072:113:39"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6205:3:39"},{"name":"length","nodeType":"YulIdentifier","src":"6210:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6201:3:39"},"nodeType":"YulFunctionCall","src":"6201:16:39"},{"kind":"number","nodeType":"YulLiteral","src":"6219:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6194:6:39"},"nodeType":"YulFunctionCall","src":"6194:27:39"},"nodeType":"YulExpressionStatement","src":"6194:27:39"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6021:3:39","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6026:3:39","type":""},{"name":"length","nodeType":"YulTypedName","src":"6031:6:39","type":""}],"src":"5977:250:39"},{"body":{"nodeType":"YulBlock","src":"6281:221:39","statements":[{"nodeType":"YulVariableDeclaration","src":"6291:26:39","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6311:5:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6305:5:39"},"nodeType":"YulFunctionCall","src":"6305:12:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6295:6:39","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6333:3:39"},{"name":"length","nodeType":"YulIdentifier","src":"6338:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6326:6:39"},"nodeType":"YulFunctionCall","src":"6326:19:39"},"nodeType":"YulExpressionStatement","src":"6326:19:39"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6393:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"6400:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6389:3:39"},"nodeType":"YulFunctionCall","src":"6389:16:39"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6411:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:39"},"nodeType":"YulFunctionCall","src":"6407:14:39"},{"name":"length","nodeType":"YulIdentifier","src":"6423:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6354:34:39"},"nodeType":"YulFunctionCall","src":"6354:76:39"},"nodeType":"YulExpressionStatement","src":"6354:76:39"},{"nodeType":"YulAssignment","src":"6439:57:39","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6454:3:39"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6467:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"6475:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6463:3:39"},"nodeType":"YulFunctionCall","src":"6463:15:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6484:2:39","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6480:3:39"},"nodeType":"YulFunctionCall","src":"6480:7:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6459:3:39"},"nodeType":"YulFunctionCall","src":"6459:29:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6450:3:39"},"nodeType":"YulFunctionCall","src":"6450:39:39"},{"kind":"number","nodeType":"YulLiteral","src":"6491:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6446:3:39"},"nodeType":"YulFunctionCall","src":"6446:50:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6439:3:39"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6258:5:39","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6265:3:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6273:3:39","type":""}],"src":"6232:270:39"},{"body":{"nodeType":"YulBlock","src":"6676:631:39","statements":[{"nodeType":"YulVariableDeclaration","src":"6686:12:39","value":{"kind":"number","nodeType":"YulLiteral","src":"6696:2:39","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6690:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6707:32:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6725:9:39"},{"name":"_1","nodeType":"YulIdentifier","src":"6736:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6721:3:39"},"nodeType":"YulFunctionCall","src":"6721:18:39"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6711:6:39","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6755:9:39"},{"name":"_1","nodeType":"YulIdentifier","src":"6766:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:39"},"nodeType":"YulFunctionCall","src":"6748:21:39"},"nodeType":"YulExpressionStatement","src":"6748:21:39"},{"nodeType":"YulVariableDeclaration","src":"6778:17:39","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6789:6:39"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6782:3:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6804:27:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6824:6:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6818:5:39"},"nodeType":"YulFunctionCall","src":"6818:13:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6808:6:39","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6847:6:39"},{"name":"length","nodeType":"YulIdentifier","src":"6855:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6840:6:39"},"nodeType":"YulFunctionCall","src":"6840:22:39"},"nodeType":"YulExpressionStatement","src":"6840:22:39"},{"nodeType":"YulAssignment","src":"6871:25:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6882:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"6893:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6878:3:39"},"nodeType":"YulFunctionCall","src":"6878:18:39"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6871:3:39"}]},{"nodeType":"YulVariableDeclaration","src":"6905:53:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6927:9:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6942:1:39","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6945:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6938:3:39"},"nodeType":"YulFunctionCall","src":"6938:14:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6923:3:39"},"nodeType":"YulFunctionCall","src":"6923:30:39"},{"kind":"number","nodeType":"YulLiteral","src":"6955:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:39"},"nodeType":"YulFunctionCall","src":"6919:39:39"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"6909:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6967:29:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6985:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"6993:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6981:3:39"},"nodeType":"YulFunctionCall","src":"6981:15:39"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6971:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7005:10:39","value":{"kind":"number","nodeType":"YulLiteral","src":"7014:1:39","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7009:1:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"7073:205:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7094:3:39"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7107:6:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"7115:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7103:3:39"},"nodeType":"YulFunctionCall","src":"7103:22:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7131:2:39","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7127:3:39"},"nodeType":"YulFunctionCall","src":"7127:7:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7099:3:39"},"nodeType":"YulFunctionCall","src":"7099:36:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7087:6:39"},"nodeType":"YulFunctionCall","src":"7087:49:39"},"nodeType":"YulExpressionStatement","src":"7087:49:39"},{"nodeType":"YulAssignment","src":"7149:49:39","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7182:6:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7176:5:39"},"nodeType":"YulFunctionCall","src":"7176:13:39"},{"name":"tail_2","nodeType":"YulIdentifier","src":"7191:6:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7159:16:39"},"nodeType":"YulFunctionCall","src":"7159:39:39"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7149:6:39"}]},{"nodeType":"YulAssignment","src":"7211:25:39","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7225:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"7233:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7221:3:39"},"nodeType":"YulFunctionCall","src":"7221:15:39"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7211:6:39"}]},{"nodeType":"YulAssignment","src":"7249:19:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7260:3:39"},{"name":"_1","nodeType":"YulIdentifier","src":"7265:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7256:3:39"},"nodeType":"YulFunctionCall","src":"7256:12:39"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7249:3:39"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7035:1:39"},{"name":"length","nodeType":"YulIdentifier","src":"7038:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7032:2:39"},"nodeType":"YulFunctionCall","src":"7032:13:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7046:18:39","statements":[{"nodeType":"YulAssignment","src":"7048:14:39","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7057:1:39"},{"kind":"number","nodeType":"YulLiteral","src":"7060:1:39","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:39"},"nodeType":"YulFunctionCall","src":"7053:9:39"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7048:1:39"}]}]},"pre":{"nodeType":"YulBlock","src":"7028:3:39","statements":[]},"src":"7024:254:39"},{"nodeType":"YulAssignment","src":"7287:14:39","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"7295:6:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7287:4:39"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6645:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6656:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6667:4:39","type":""}],"src":"6507:800:39"},{"body":{"nodeType":"YulBlock","src":"7442:401:39","statements":[{"body":{"nodeType":"YulBlock","src":"7489:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7498:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7501:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7491:6:39"},"nodeType":"YulFunctionCall","src":"7491:12:39"},"nodeType":"YulExpressionStatement","src":"7491:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7463:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"7472:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7459:3:39"},"nodeType":"YulFunctionCall","src":"7459:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"7484:3:39","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7455:3:39"},"nodeType":"YulFunctionCall","src":"7455:33:39"},"nodeType":"YulIf","src":"7452:53:39"},{"nodeType":"YulAssignment","src":"7514:33:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7537:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7524:12:39"},"nodeType":"YulFunctionCall","src":"7524:23:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7514:6:39"}]},{"nodeType":"YulAssignment","src":"7556:48:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7589:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"7600:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7585:3:39"},"nodeType":"YulFunctionCall","src":"7585:18:39"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7566:18:39"},"nodeType":"YulFunctionCall","src":"7566:38:39"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7556:6:39"}]},{"nodeType":"YulAssignment","src":"7613:42:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7640:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"7651:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7636:3:39"},"nodeType":"YulFunctionCall","src":"7636:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7623:12:39"},"nodeType":"YulFunctionCall","src":"7623:32:39"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7613:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"7664:46:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7695:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"7706:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7691:3:39"},"nodeType":"YulFunctionCall","src":"7691:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7678:12:39"},"nodeType":"YulFunctionCall","src":"7678:32:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7668:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"7753:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7762:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7765:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7755:6:39"},"nodeType":"YulFunctionCall","src":"7755:12:39"},"nodeType":"YulExpressionStatement","src":"7755:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7725:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"7733:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7722:2:39"},"nodeType":"YulFunctionCall","src":"7722:30:39"},"nodeType":"YulIf","src":"7719:50:39"},{"nodeType":"YulAssignment","src":"7778:59:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7809:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"7820:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7805:3:39"},"nodeType":"YulFunctionCall","src":"7805:22:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7829:7:39"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7788:16:39"},"nodeType":"YulFunctionCall","src":"7788:49:39"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7778:6:39"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7384:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7395:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7407:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7415:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7423:6:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7431:6:39","type":""}],"src":"7312:531:39"},{"body":{"nodeType":"YulBlock","src":"7967:98:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"7995:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7977:6:39"},"nodeType":"YulFunctionCall","src":"7977:21:39"},"nodeType":"YulExpressionStatement","src":"7977:21:39"},{"nodeType":"YulAssignment","src":"8007:52:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8032:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8044:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"8055:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8040:3:39"},"nodeType":"YulFunctionCall","src":"8040:18:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"8015:16:39"},"nodeType":"YulFunctionCall","src":"8015:44:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8007:4:39"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7936:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7947:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7958:4:39","type":""}],"src":"7848:217:39"},{"body":{"nodeType":"YulBlock","src":"8140:110:39","statements":[{"body":{"nodeType":"YulBlock","src":"8186:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8195:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8198:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8188:6:39"},"nodeType":"YulFunctionCall","src":"8188:12:39"},"nodeType":"YulExpressionStatement","src":"8188:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8161:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"8170:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8157:3:39"},"nodeType":"YulFunctionCall","src":"8157:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"8182:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8153:3:39"},"nodeType":"YulFunctionCall","src":"8153:32:39"},"nodeType":"YulIf","src":"8150:52:39"},{"nodeType":"YulAssignment","src":"8211:33:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8234:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8221:12:39"},"nodeType":"YulFunctionCall","src":"8221:23:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8211:6:39"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8106:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8117:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8129:6:39","type":""}],"src":"8070:180:39"},{"body":{"nodeType":"YulBlock","src":"8371:510:39","statements":[{"body":{"nodeType":"YulBlock","src":"8417:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8426:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8429:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8419:6:39"},"nodeType":"YulFunctionCall","src":"8419:12:39"},"nodeType":"YulExpressionStatement","src":"8419:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8392:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8388:3:39"},"nodeType":"YulFunctionCall","src":"8388:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"8413:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8384:3:39"},"nodeType":"YulFunctionCall","src":"8384:32:39"},"nodeType":"YulIf","src":"8381:52:39"},{"nodeType":"YulVariableDeclaration","src":"8442:37:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8456:12:39"},"nodeType":"YulFunctionCall","src":"8456:23:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8446:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8488:28:39","value":{"kind":"number","nodeType":"YulLiteral","src":"8498:18:39","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8492:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"8543:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8552:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8555:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8545:6:39"},"nodeType":"YulFunctionCall","src":"8545:12:39"},"nodeType":"YulExpressionStatement","src":"8545:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8531:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"8539:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8528:2:39"},"nodeType":"YulFunctionCall","src":"8528:14:39"},"nodeType":"YulIf","src":"8525:34:39"},{"nodeType":"YulVariableDeclaration","src":"8568:32:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8582:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"8593:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8578:3:39"},"nodeType":"YulFunctionCall","src":"8578:22:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8572:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"8648:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8657:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8660:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8650:6:39"},"nodeType":"YulFunctionCall","src":"8650:12:39"},"nodeType":"YulExpressionStatement","src":"8650:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8627:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"8631:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8623:3:39"},"nodeType":"YulFunctionCall","src":"8623:13:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8638:7:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8619:3:39"},"nodeType":"YulFunctionCall","src":"8619:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8612:6:39"},"nodeType":"YulFunctionCall","src":"8612:35:39"},"nodeType":"YulIf","src":"8609:55:39"},{"nodeType":"YulVariableDeclaration","src":"8673:30:39","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8700:2:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8687:12:39"},"nodeType":"YulFunctionCall","src":"8687:16:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8677:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"8730:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8739:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8742:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8732:6:39"},"nodeType":"YulFunctionCall","src":"8732:12:39"},"nodeType":"YulExpressionStatement","src":"8732:12:39"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8718:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"8726:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8715:2:39"},"nodeType":"YulFunctionCall","src":"8715:14:39"},"nodeType":"YulIf","src":"8712:34:39"},{"body":{"nodeType":"YulBlock","src":"8804:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8813:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8816:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8806:6:39"},"nodeType":"YulFunctionCall","src":"8806:12:39"},"nodeType":"YulExpressionStatement","src":"8806:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8769:2:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8777:1:39","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"8780:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8773:3:39"},"nodeType":"YulFunctionCall","src":"8773:14:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8765:3:39"},"nodeType":"YulFunctionCall","src":"8765:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8761:3:39"},"nodeType":"YulFunctionCall","src":"8761:32:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8795:7:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8758:2:39"},"nodeType":"YulFunctionCall","src":"8758:45:39"},"nodeType":"YulIf","src":"8755:65:39"},{"nodeType":"YulAssignment","src":"8829:21:39","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8843:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"8847:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:39"},"nodeType":"YulFunctionCall","src":"8839:11:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8829:6:39"}]},{"nodeType":"YulAssignment","src":"8859:16:39","value":{"name":"length","nodeType":"YulIdentifier","src":"8869:6:39"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8859:6:39"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8329:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8340:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8352:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8360:6:39","type":""}],"src":"8255:626:39"},{"body":{"nodeType":"YulBlock","src":"8987:102:39","statements":[{"nodeType":"YulAssignment","src":"8997:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9009:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"9020:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9005:3:39"},"nodeType":"YulFunctionCall","src":"9005:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8997:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9039:9:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9054:6:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9070:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9075:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9066:3:39"},"nodeType":"YulFunctionCall","src":"9066:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"9079:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9062:3:39"},"nodeType":"YulFunctionCall","src":"9062:19:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9050:3:39"},"nodeType":"YulFunctionCall","src":"9050:32:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9032:6:39"},"nodeType":"YulFunctionCall","src":"9032:51:39"},"nodeType":"YulExpressionStatement","src":"9032:51:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8956:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8967:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8978:4:39","type":""}],"src":"8886:203:39"},{"body":{"nodeType":"YulBlock","src":"9240:456:39","statements":[{"body":{"nodeType":"YulBlock","src":"9286:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9295:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9298:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9288:6:39"},"nodeType":"YulFunctionCall","src":"9288:12:39"},"nodeType":"YulExpressionStatement","src":"9288:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9261:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"9270:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9257:3:39"},"nodeType":"YulFunctionCall","src":"9257:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"9282:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9253:3:39"},"nodeType":"YulFunctionCall","src":"9253:32:39"},"nodeType":"YulIf","src":"9250:52:39"},{"nodeType":"YulVariableDeclaration","src":"9311:37:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9338:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9325:12:39"},"nodeType":"YulFunctionCall","src":"9325:23:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9315:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9357:28:39","value":{"kind":"number","nodeType":"YulLiteral","src":"9367:18:39","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9361:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"9412:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9421:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9424:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9414:6:39"},"nodeType":"YulFunctionCall","src":"9414:12:39"},"nodeType":"YulExpressionStatement","src":"9414:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9400:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"9408:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9397:2:39"},"nodeType":"YulFunctionCall","src":"9397:14:39"},"nodeType":"YulIf","src":"9394:34:39"},{"nodeType":"YulAssignment","src":"9437:71:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9480:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"9491:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9476:3:39"},"nodeType":"YulFunctionCall","src":"9476:22:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9500:7:39"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"9447:28:39"},"nodeType":"YulFunctionCall","src":"9447:61:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9437:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"9517:48:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9550:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"9561:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:39"},"nodeType":"YulFunctionCall","src":"9546:18:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9533:12:39"},"nodeType":"YulFunctionCall","src":"9533:32:39"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9521:8:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"9594:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9603:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9606:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9596:6:39"},"nodeType":"YulFunctionCall","src":"9596:12:39"},"nodeType":"YulExpressionStatement","src":"9596:12:39"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9580:8:39"},{"name":"_1","nodeType":"YulIdentifier","src":"9590:2:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9577:2:39"},"nodeType":"YulFunctionCall","src":"9577:16:39"},"nodeType":"YulIf","src":"9574:36:39"},{"nodeType":"YulAssignment","src":"9619:71:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9660:9:39"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9671:8:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9656:3:39"},"nodeType":"YulFunctionCall","src":"9656:24:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9682:7:39"}],"functionName":{"name":"abi_decode_array_bytes_dyn","nodeType":"YulIdentifier","src":"9629:26:39"},"nodeType":"YulFunctionCall","src":"9629:61:39"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9619:6:39"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9198:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9209:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9221:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9229:6:39","type":""}],"src":"9094:602:39"},{"body":{"nodeType":"YulBlock","src":"9796:253:39","statements":[{"body":{"nodeType":"YulBlock","src":"9842:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9851:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9854:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9844:6:39"},"nodeType":"YulFunctionCall","src":"9844:12:39"},"nodeType":"YulExpressionStatement","src":"9844:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9817:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9813:3:39"},"nodeType":"YulFunctionCall","src":"9813:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"9838:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9809:3:39"},"nodeType":"YulFunctionCall","src":"9809:32:39"},"nodeType":"YulIf","src":"9806:52:39"},{"nodeType":"YulVariableDeclaration","src":"9867:37:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9894:9:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9881:12:39"},"nodeType":"YulFunctionCall","src":"9881:23:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9871:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"9947:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9956:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9959:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9949:6:39"},"nodeType":"YulFunctionCall","src":"9949:12:39"},"nodeType":"YulExpressionStatement","src":"9949:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9919:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"9927:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9916:2:39"},"nodeType":"YulFunctionCall","src":"9916:30:39"},"nodeType":"YulIf","src":"9913:50:39"},{"nodeType":"YulAssignment","src":"9972:71:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10015:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"10026:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10011:3:39"},"nodeType":"YulFunctionCall","src":"10011:22:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10035:7:39"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"9982:28:39"},"nodeType":"YulFunctionCall","src":"9982:61:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9972:6:39"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9762:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9773:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9785:6:39","type":""}],"src":"9701:348:39"},{"body":{"nodeType":"YulBlock","src":"10124:116:39","statements":[{"body":{"nodeType":"YulBlock","src":"10170:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10179:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10182:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10172:6:39"},"nodeType":"YulFunctionCall","src":"10172:12:39"},"nodeType":"YulExpressionStatement","src":"10172:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10145:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"10154:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10141:3:39"},"nodeType":"YulFunctionCall","src":"10141:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"10166:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10137:3:39"},"nodeType":"YulFunctionCall","src":"10137:32:39"},"nodeType":"YulIf","src":"10134:52:39"},{"nodeType":"YulAssignment","src":"10195:39:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10224:9:39"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10205:18:39"},"nodeType":"YulFunctionCall","src":"10205:29:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10195:6:39"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10090:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10101:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10113:6:39","type":""}],"src":"10054:186:39"},{"body":{"nodeType":"YulBlock","src":"10366:98:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10383:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"10394:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10376:6:39"},"nodeType":"YulFunctionCall","src":"10376:21:39"},"nodeType":"YulExpressionStatement","src":"10376:21:39"},{"nodeType":"YulAssignment","src":"10406:52:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10431:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10443:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"10454:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10439:3:39"},"nodeType":"YulFunctionCall","src":"10439:18:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"10414:16:39"},"nodeType":"YulFunctionCall","src":"10414:44:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10406:4:39"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10335:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10346:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10357:4:39","type":""}],"src":"10245:219:39"},{"body":{"nodeType":"YulBlock","src":"10563:281:39","statements":[{"nodeType":"YulVariableDeclaration","src":"10573:26:39","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10593:5:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10587:5:39"},"nodeType":"YulFunctionCall","src":"10587:12:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10577:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10608:33:39","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10628:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"10635:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10624:3:39"},"nodeType":"YulFunctionCall","src":"10624:16:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10618:5:39"},"nodeType":"YulFunctionCall","src":"10618:23:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10612:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10650:41:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10664:26:39","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10660:3:39"},"nodeType":"YulFunctionCall","src":"10660:31:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"10654:2:39","type":""}]},{"nodeType":"YulAssignment","src":"10700:20:39","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10713:2:39"},{"name":"_2","nodeType":"YulIdentifier","src":"10717:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10709:3:39"},"nodeType":"YulFunctionCall","src":"10709:11:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10700:5:39"}]},{"body":{"nodeType":"YulBlock","src":"10755:83:39","statements":[{"nodeType":"YulAssignment","src":"10769:59:39","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10786:2:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10798:1:39","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10805:2:39","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"10809:6:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10801:3:39"},"nodeType":"YulFunctionCall","src":"10801:15:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10794:3:39"},"nodeType":"YulFunctionCall","src":"10794:23:39"},{"name":"_2","nodeType":"YulIdentifier","src":"10819:2:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10790:3:39"},"nodeType":"YulFunctionCall","src":"10790:32:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10782:3:39"},"nodeType":"YulFunctionCall","src":"10782:41:39"},{"name":"_2","nodeType":"YulIdentifier","src":"10825:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10778:3:39"},"nodeType":"YulFunctionCall","src":"10778:50:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10769:5:39"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10735:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"10743:2:39","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10732:2:39"},"nodeType":"YulFunctionCall","src":"10732:14:39"},"nodeType":"YulIf","src":"10729:109:39"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10543:5:39","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10553:5:39","type":""}],"src":"10469:375:39"},{"body":{"nodeType":"YulBlock","src":"11052:255:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11069:9:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11084:6:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11100:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11105:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11096:3:39"},"nodeType":"YulFunctionCall","src":"11096:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"11109:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11092:3:39"},"nodeType":"YulFunctionCall","src":"11092:19:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11080:3:39"},"nodeType":"YulFunctionCall","src":"11080:32:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11062:6:39"},"nodeType":"YulFunctionCall","src":"11062:51:39"},"nodeType":"YulExpressionStatement","src":"11062:51:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11133:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"11144:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11129:3:39"},"nodeType":"YulFunctionCall","src":"11129:18:39"},{"name":"value1","nodeType":"YulIdentifier","src":"11149:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11122:6:39"},"nodeType":"YulFunctionCall","src":"11122:34:39"},"nodeType":"YulExpressionStatement","src":"11122:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11176:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11172:3:39"},"nodeType":"YulFunctionCall","src":"11172:18:39"},{"name":"value2","nodeType":"YulIdentifier","src":"11192:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11165:6:39"},"nodeType":"YulFunctionCall","src":"11165:34:39"},"nodeType":"YulExpressionStatement","src":"11165:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11219:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11215:3:39"},"nodeType":"YulFunctionCall","src":"11215:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"11235:3:39","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11208:6:39"},"nodeType":"YulFunctionCall","src":"11208:31:39"},"nodeType":"YulExpressionStatement","src":"11208:31:39"},{"nodeType":"YulAssignment","src":"11248:53:39","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11273:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11285:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"11296:3:39","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11281:3:39"},"nodeType":"YulFunctionCall","src":"11281:19:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"11256:16:39"},"nodeType":"YulFunctionCall","src":"11256:45:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11248:4:39"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10997:9:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11008:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11016:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11024:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11032:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11043:4:39","type":""}],"src":"10849:458:39"},{"body":{"nodeType":"YulBlock","src":"11402:557:39","statements":[{"body":{"nodeType":"YulBlock","src":"11448:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11457:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11460:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11450:6:39"},"nodeType":"YulFunctionCall","src":"11450:12:39"},"nodeType":"YulExpressionStatement","src":"11450:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11423:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"11432:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11419:3:39"},"nodeType":"YulFunctionCall","src":"11419:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"11444:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11415:3:39"},"nodeType":"YulFunctionCall","src":"11415:32:39"},"nodeType":"YulIf","src":"11412:52:39"},{"nodeType":"YulVariableDeclaration","src":"11473:30:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11493:9:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11487:5:39"},"nodeType":"YulFunctionCall","src":"11487:16:39"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11477:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"11546:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11555:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11558:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11548:6:39"},"nodeType":"YulFunctionCall","src":"11548:12:39"},"nodeType":"YulExpressionStatement","src":"11548:12:39"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11518:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"11526:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11515:2:39"},"nodeType":"YulFunctionCall","src":"11515:30:39"},"nodeType":"YulIf","src":"11512:50:39"},{"nodeType":"YulVariableDeclaration","src":"11571:32:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11585:9:39"},{"name":"offset","nodeType":"YulIdentifier","src":"11596:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11581:3:39"},"nodeType":"YulFunctionCall","src":"11581:22:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11575:2:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"11651:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11660:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11663:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11653:6:39"},"nodeType":"YulFunctionCall","src":"11653:12:39"},"nodeType":"YulExpressionStatement","src":"11653:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11630:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"11634:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:39"},"nodeType":"YulFunctionCall","src":"11626:13:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11641:7:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11622:3:39"},"nodeType":"YulFunctionCall","src":"11622:27:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11615:6:39"},"nodeType":"YulFunctionCall","src":"11615:35:39"},"nodeType":"YulIf","src":"11612:55:39"},{"nodeType":"YulVariableDeclaration","src":"11676:19:39","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11692:2:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11686:5:39"},"nodeType":"YulFunctionCall","src":"11686:9:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11680:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11704:61:39","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11761:2:39"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"11733:27:39"},"nodeType":"YulFunctionCall","src":"11733:31:39"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11717:15:39"},"nodeType":"YulFunctionCall","src":"11717:48:39"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"11708:5:39","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11781:5:39"},{"name":"_2","nodeType":"YulIdentifier","src":"11788:2:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11774:6:39"},"nodeType":"YulFunctionCall","src":"11774:17:39"},"nodeType":"YulExpressionStatement","src":"11774:17:39"},{"body":{"nodeType":"YulBlock","src":"11837:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11846:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11849:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11839:6:39"},"nodeType":"YulFunctionCall","src":"11839:12:39"},"nodeType":"YulExpressionStatement","src":"11839:12:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11814:2:39"},{"name":"_2","nodeType":"YulIdentifier","src":"11818:2:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11810:3:39"},"nodeType":"YulFunctionCall","src":"11810:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"11823:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11806:3:39"},"nodeType":"YulFunctionCall","src":"11806:20:39"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11828:7:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11803:2:39"},"nodeType":"YulFunctionCall","src":"11803:33:39"},"nodeType":"YulIf","src":"11800:53:39"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11901:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"11905:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11897:3:39"},"nodeType":"YulFunctionCall","src":"11897:11:39"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11914:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"11921:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11910:3:39"},"nodeType":"YulFunctionCall","src":"11910:14:39"},{"name":"_2","nodeType":"YulIdentifier","src":"11926:2:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11862:34:39"},"nodeType":"YulFunctionCall","src":"11862:67:39"},"nodeType":"YulExpressionStatement","src":"11862:67:39"},{"nodeType":"YulAssignment","src":"11938:15:39","value":{"name":"array","nodeType":"YulIdentifier","src":"11948:5:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11938:6:39"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11368:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11379:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11391:6:39","type":""}],"src":"11312:647:39"},{"body":{"nodeType":"YulBlock","src":"12129:212:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12146:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"12157:2:39","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12139:6:39"},"nodeType":"YulFunctionCall","src":"12139:21:39"},"nodeType":"YulExpressionStatement","src":"12139:21:39"},{"nodeType":"YulVariableDeclaration","src":"12169:58:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12200:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12212:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"12223:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12208:3:39"},"nodeType":"YulFunctionCall","src":"12208:18:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12183:16:39"},"nodeType":"YulFunctionCall","src":"12183:44:39"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12173:6:39","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12247:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"12258:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12243:3:39"},"nodeType":"YulFunctionCall","src":"12243:18:39"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12267:6:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"12275:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12263:3:39"},"nodeType":"YulFunctionCall","src":"12263:22:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12236:6:39"},"nodeType":"YulFunctionCall","src":"12236:50:39"},"nodeType":"YulExpressionStatement","src":"12236:50:39"},{"nodeType":"YulAssignment","src":"12295:40:39","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12320:6:39"},{"name":"tail_1","nodeType":"YulIdentifier","src":"12328:6:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12303:16:39"},"nodeType":"YulFunctionCall","src":"12303:32:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12295:4:39"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12090:9:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12101:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12109:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12120:4:39","type":""}],"src":"11964:377:39"},{"body":{"nodeType":"YulBlock","src":"12549:221:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12572:3:39"},{"name":"value0","nodeType":"YulIdentifier","src":"12577:6:39"},{"name":"value1","nodeType":"YulIdentifier","src":"12585:6:39"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12559:12:39"},"nodeType":"YulFunctionCall","src":"12559:33:39"},"nodeType":"YulExpressionStatement","src":"12559:33:39"},{"nodeType":"YulVariableDeclaration","src":"12601:26:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12615:3:39"},{"name":"value1","nodeType":"YulIdentifier","src":"12620:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12611:3:39"},"nodeType":"YulFunctionCall","src":"12611:16:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12605:2:39","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12643:2:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12655:2:39","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"12659:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12651:3:39"},"nodeType":"YulFunctionCall","src":"12651:15:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12672:26:39","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12668:3:39"},"nodeType":"YulFunctionCall","src":"12668:31:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12647:3:39"},"nodeType":"YulFunctionCall","src":"12647:53:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12636:6:39"},"nodeType":"YulFunctionCall","src":"12636:65:39"},"nodeType":"YulExpressionStatement","src":"12636:65:39"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12721:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"12725:2:39","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12717:3:39"},"nodeType":"YulFunctionCall","src":"12717:11:39"},{"name":"value3","nodeType":"YulIdentifier","src":"12730:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12710:6:39"},"nodeType":"YulFunctionCall","src":"12710:27:39"},"nodeType":"YulExpressionStatement","src":"12710:27:39"},{"nodeType":"YulAssignment","src":"12746:18:39","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12757:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"12761:2:39","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12753:3:39"},"nodeType":"YulFunctionCall","src":"12753:11:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12746:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12501:3:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12506:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12514:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12522:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12530:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12541:3:39","type":""}],"src":"12346:424:39"},{"body":{"nodeType":"YulBlock","src":"12912:150:39","statements":[{"nodeType":"YulVariableDeclaration","src":"12922:27:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12942:6:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12936:5:39"},"nodeType":"YulFunctionCall","src":"12936:13:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12926:6:39","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12997:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"13005:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12993:3:39"},"nodeType":"YulFunctionCall","src":"12993:17:39"},{"name":"pos","nodeType":"YulIdentifier","src":"13012:3:39"},{"name":"length","nodeType":"YulIdentifier","src":"13017:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12958:34:39"},"nodeType":"YulFunctionCall","src":"12958:66:39"},"nodeType":"YulExpressionStatement","src":"12958:66:39"},{"nodeType":"YulAssignment","src":"13033:23:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13044:3:39"},{"name":"length","nodeType":"YulIdentifier","src":"13049:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13040:3:39"},"nodeType":"YulFunctionCall","src":"13040:16:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13033:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12888:3:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12893:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12904:3:39","type":""}],"src":"12775:287:39"},{"body":{"nodeType":"YulBlock","src":"13214:141:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13231:9:39"},{"name":"value0","nodeType":"YulIdentifier","src":"13242:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13224:6:39"},"nodeType":"YulFunctionCall","src":"13224:25:39"},"nodeType":"YulExpressionStatement","src":"13224:25:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13269:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"13280:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13265:3:39"},"nodeType":"YulFunctionCall","src":"13265:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"13285:2:39","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13258:6:39"},"nodeType":"YulFunctionCall","src":"13258:30:39"},"nodeType":"YulExpressionStatement","src":"13258:30:39"},{"nodeType":"YulAssignment","src":"13297:52:39","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13322:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13334:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"13345:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13330:3:39"},"nodeType":"YulFunctionCall","src":"13330:18:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"13305:16:39"},"nodeType":"YulFunctionCall","src":"13305:44:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13297:4:39"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13175:9:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13186:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13194:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13205:4:39","type":""}],"src":"13067:288:39"},{"body":{"nodeType":"YulBlock","src":"13441:103:39","statements":[{"body":{"nodeType":"YulBlock","src":"13487:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13496:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13499:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13489:6:39"},"nodeType":"YulFunctionCall","src":"13489:12:39"},"nodeType":"YulExpressionStatement","src":"13489:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13462:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"13471:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13458:3:39"},"nodeType":"YulFunctionCall","src":"13458:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"13483:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13454:3:39"},"nodeType":"YulFunctionCall","src":"13454:32:39"},"nodeType":"YulIf","src":"13451:52:39"},{"nodeType":"YulAssignment","src":"13512:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13528:9:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13522:5:39"},"nodeType":"YulFunctionCall","src":"13522:16:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13512:6:39"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13407:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13418:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13430:6:39","type":""}],"src":"13360:184:39"},{"body":{"nodeType":"YulBlock","src":"13581:95:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13598:1:39","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13605:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13610:10:39","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13601:3:39"},"nodeType":"YulFunctionCall","src":"13601:20:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13591:6:39"},"nodeType":"YulFunctionCall","src":"13591:31:39"},"nodeType":"YulExpressionStatement","src":"13591:31:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13638:1:39","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13641:4:39","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13631:6:39"},"nodeType":"YulFunctionCall","src":"13631:15:39"},"nodeType":"YulExpressionStatement","src":"13631:15:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13662:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13665:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13655:6:39"},"nodeType":"YulFunctionCall","src":"13655:15:39"},"nodeType":"YulExpressionStatement","src":"13655:15:39"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"13549:127:39"},{"body":{"nodeType":"YulBlock","src":"13798:89:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13815:3:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13824:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13836:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13841:10:39","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13832:3:39"},"nodeType":"YulFunctionCall","src":"13832:20:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13820:3:39"},"nodeType":"YulFunctionCall","src":"13820:33:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13808:6:39"},"nodeType":"YulFunctionCall","src":"13808:46:39"},"nodeType":"YulExpressionStatement","src":"13808:46:39"},{"nodeType":"YulAssignment","src":"13863:18:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13874:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"13879:1:39","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13870:3:39"},"nodeType":"YulFunctionCall","src":"13870:11:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13863:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes4__to_t_bytes4__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13774:3:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13779:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13790:3:39","type":""}],"src":"13681:206:39"},{"body":{"nodeType":"YulBlock","src":"14111:221:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14128:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"14139:2:39","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14121:6:39"},"nodeType":"YulFunctionCall","src":"14121:21:39"},"nodeType":"YulExpressionStatement","src":"14121:21:39"},{"nodeType":"YulVariableDeclaration","src":"14151:58:39","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14182:6:39"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14194:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"14205:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14190:3:39"},"nodeType":"YulFunctionCall","src":"14190:18:39"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"14165:16:39"},"nodeType":"YulFunctionCall","src":"14165:44:39"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"14155:6:39","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14229:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"14240:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14225:3:39"},"nodeType":"YulFunctionCall","src":"14225:18:39"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14249:6:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"14257:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14245:3:39"},"nodeType":"YulFunctionCall","src":"14245:22:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14218:6:39"},"nodeType":"YulFunctionCall","src":"14218:50:39"},"nodeType":"YulExpressionStatement","src":"14218:50:39"},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14284:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"14292:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14277:6:39"},"nodeType":"YulFunctionCall","src":"14277:17:39"},"nodeType":"YulExpressionStatement","src":"14277:17:39"},{"nodeType":"YulAssignment","src":"14303:23:39","value":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14315:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"14323:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14311:3:39"},"nodeType":"YulFunctionCall","src":"14311:15:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14303:4:39"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14080:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14091:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14102:4:39","type":""}],"src":"13892:440:39"},{"body":{"nodeType":"YulBlock","src":"14369:95:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14386:1:39","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14393:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14398:10:39","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14389:3:39"},"nodeType":"YulFunctionCall","src":"14389:20:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14379:6:39"},"nodeType":"YulFunctionCall","src":"14379:31:39"},"nodeType":"YulExpressionStatement","src":"14379:31:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14426:1:39","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14429:4:39","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14419:6:39"},"nodeType":"YulFunctionCall","src":"14419:15:39"},"nodeType":"YulExpressionStatement","src":"14419:15:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14450:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14453:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14443:6:39"},"nodeType":"YulFunctionCall","src":"14443:15:39"},"nodeType":"YulExpressionStatement","src":"14443:15:39"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14337:127:39"},{"body":{"nodeType":"YulBlock","src":"14563:427:39","statements":[{"nodeType":"YulVariableDeclaration","src":"14573:51:39","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"14612:11:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14599:12:39"},"nodeType":"YulFunctionCall","src":"14599:25:39"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"14577:18:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"14713:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14722:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14725:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14715:6:39"},"nodeType":"YulFunctionCall","src":"14715:12:39"},"nodeType":"YulExpressionStatement","src":"14715:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14647:18:39"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14675:12:39"},"nodeType":"YulFunctionCall","src":"14675:14:39"},{"name":"base_ref","nodeType":"YulIdentifier","src":"14691:8:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14671:3:39"},"nodeType":"YulFunctionCall","src":"14671:29:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14706:2:39","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14702:3:39"},"nodeType":"YulFunctionCall","src":"14702:7:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14667:3:39"},"nodeType":"YulFunctionCall","src":"14667:43:39"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14643:3:39"},"nodeType":"YulFunctionCall","src":"14643:68:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14636:6:39"},"nodeType":"YulFunctionCall","src":"14636:76:39"},"nodeType":"YulIf","src":"14633:96:39"},{"nodeType":"YulVariableDeclaration","src":"14738:47:39","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"14756:8:39"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"14766:18:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14752:3:39"},"nodeType":"YulFunctionCall","src":"14752:33:39"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"14742:6:39","type":""}]},{"nodeType":"YulAssignment","src":"14794:30:39","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"14817:6:39"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14804:12:39"},"nodeType":"YulFunctionCall","src":"14804:20:39"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14794:6:39"}]},{"body":{"nodeType":"YulBlock","src":"14867:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14876:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14879:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14869:6:39"},"nodeType":"YulFunctionCall","src":"14869:12:39"},"nodeType":"YulExpressionStatement","src":"14869:12:39"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14839:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"14847:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14836:2:39"},"nodeType":"YulFunctionCall","src":"14836:30:39"},"nodeType":"YulIf","src":"14833:50:39"},{"nodeType":"YulAssignment","src":"14892:25:39","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"14904:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"14912:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14900:3:39"},"nodeType":"YulFunctionCall","src":"14900:17:39"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"14892:4:39"}]},{"body":{"nodeType":"YulBlock","src":"14968:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14977:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14980:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14970:6:39"},"nodeType":"YulFunctionCall","src":"14970:12:39"},"nodeType":"YulExpressionStatement","src":"14970:12:39"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"14933:4:39"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"14943:12:39"},"nodeType":"YulFunctionCall","src":"14943:14:39"},{"name":"length","nodeType":"YulIdentifier","src":"14959:6:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14939:3:39"},"nodeType":"YulFunctionCall","src":"14939:27:39"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"14929:3:39"},"nodeType":"YulFunctionCall","src":"14929:38:39"},"nodeType":"YulIf","src":"14926:58:39"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"14520:8:39","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"14530:11:39","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"14546:4:39","type":""},{"name":"length","nodeType":"YulTypedName","src":"14552:6:39","type":""}],"src":"14469:521:39"},{"body":{"nodeType":"YulBlock","src":"15142:124:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15165:3:39"},{"name":"value0","nodeType":"YulIdentifier","src":"15170:6:39"},{"name":"value1","nodeType":"YulIdentifier","src":"15178:6:39"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15152:12:39"},"nodeType":"YulFunctionCall","src":"15152:33:39"},"nodeType":"YulExpressionStatement","src":"15152:33:39"},{"nodeType":"YulVariableDeclaration","src":"15194:26:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15208:3:39"},{"name":"value1","nodeType":"YulIdentifier","src":"15213:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15204:3:39"},"nodeType":"YulFunctionCall","src":"15204:16:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15198:2:39","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15236:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"15240:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:39"},"nodeType":"YulFunctionCall","src":"15229:13:39"},"nodeType":"YulExpressionStatement","src":"15229:13:39"},{"nodeType":"YulAssignment","src":"15251:9:39","value":{"name":"_1","nodeType":"YulIdentifier","src":"15258:2:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15251:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15110:3:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15115:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15123:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15134:3:39","type":""}],"src":"14995:271:39"},{"body":{"nodeType":"YulBlock","src":"15445:175:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15462:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15473:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15455:6:39"},"nodeType":"YulFunctionCall","src":"15455:21:39"},"nodeType":"YulExpressionStatement","src":"15455:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15496:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15507:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15492:3:39"},"nodeType":"YulFunctionCall","src":"15492:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"15512:2:39","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15485:6:39"},"nodeType":"YulFunctionCall","src":"15485:30:39"},"nodeType":"YulExpressionStatement","src":"15485:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15535:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15546:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15531:3:39"},"nodeType":"YulFunctionCall","src":"15531:18:39"},{"hexValue":"4c5350303a20626174636843616c6c73207265766572746564","kind":"string","nodeType":"YulLiteral","src":"15551:27:39","type":"","value":"LSP0: batchCalls reverted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15524:6:39"},"nodeType":"YulFunctionCall","src":"15524:55:39"},"nodeType":"YulExpressionStatement","src":"15524:55:39"},{"nodeType":"YulAssignment","src":"15588:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15600:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15611:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15596:3:39"},"nodeType":"YulFunctionCall","src":"15596:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15588:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff386dbcb1aa30fe75dc1688ef2484c609e6f34f17710a6791ce87ec883580dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15422:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15436:4:39","type":""}],"src":"15271:349:39"},{"body":{"nodeType":"YulBlock","src":"15754:175:39","statements":[{"nodeType":"YulAssignment","src":"15764:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15776:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15787:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15772:3:39"},"nodeType":"YulFunctionCall","src":"15772:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15764:4:39"}]},{"nodeType":"YulVariableDeclaration","src":"15799:29:39","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15817:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15822:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15813:3:39"},"nodeType":"YulFunctionCall","src":"15813:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"15826:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15809:3:39"},"nodeType":"YulFunctionCall","src":"15809:19:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15803:2:39","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15844:9:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15859:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"15867:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15855:3:39"},"nodeType":"YulFunctionCall","src":"15855:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15837:6:39"},"nodeType":"YulFunctionCall","src":"15837:34:39"},"nodeType":"YulExpressionStatement","src":"15837:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15891:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"15902:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15887:3:39"},"nodeType":"YulFunctionCall","src":"15887:18:39"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15911:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"15919:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15907:3:39"},"nodeType":"YulFunctionCall","src":"15907:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15880:6:39"},"nodeType":"YulFunctionCall","src":"15880:43:39"},"nodeType":"YulExpressionStatement","src":"15880:43:39"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15715:9:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15726:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15734:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15745:4:39","type":""}],"src":"15625:304:39"},{"body":{"nodeType":"YulBlock","src":"15989:325:39","statements":[{"nodeType":"YulAssignment","src":"15999:22:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16013:1:39","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"16016:4:39"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16009:3:39"},"nodeType":"YulFunctionCall","src":"16009:12:39"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15999:6:39"}]},{"nodeType":"YulVariableDeclaration","src":"16030:38:39","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16060:4:39"},{"kind":"number","nodeType":"YulLiteral","src":"16066:1:39","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16056:3:39"},"nodeType":"YulFunctionCall","src":"16056:12:39"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16034:18:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"16107:31:39","statements":[{"nodeType":"YulAssignment","src":"16109:27:39","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16123:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"16131:4:39","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16119:3:39"},"nodeType":"YulFunctionCall","src":"16119:17:39"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16109:6:39"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16087:18:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16080:6:39"},"nodeType":"YulFunctionCall","src":"16080:26:39"},"nodeType":"YulIf","src":"16077:61:39"},{"body":{"nodeType":"YulBlock","src":"16197:111:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16218:1:39","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16225:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16230:10:39","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16221:3:39"},"nodeType":"YulFunctionCall","src":"16221:20:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16211:6:39"},"nodeType":"YulFunctionCall","src":"16211:31:39"},"nodeType":"YulExpressionStatement","src":"16211:31:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16262:1:39","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16265:4:39","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16255:6:39"},"nodeType":"YulFunctionCall","src":"16255:15:39"},"nodeType":"YulExpressionStatement","src":"16255:15:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16290:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16293:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16283:6:39"},"nodeType":"YulFunctionCall","src":"16283:15:39"},"nodeType":"YulExpressionStatement","src":"16283:15:39"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16153:18:39"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16176:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"16184:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16173:2:39"},"nodeType":"YulFunctionCall","src":"16173:14:39"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16150:2:39"},"nodeType":"YulFunctionCall","src":"16150:38:39"},"nodeType":"YulIf","src":"16147:161:39"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15969:4:39","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15978:6:39","type":""}],"src":"15934:380:39"},{"body":{"nodeType":"YulBlock","src":"16492:236:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16509:3:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16518:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16530:3:39","type":"","value":"176"},{"kind":"number","nodeType":"YulLiteral","src":"16535:22:39","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16526:3:39"},"nodeType":"YulFunctionCall","src":"16526:32:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16514:3:39"},"nodeType":"YulFunctionCall","src":"16514:45:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16502:6:39"},"nodeType":"YulFunctionCall","src":"16502:58:39"},"nodeType":"YulExpressionStatement","src":"16502:58:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16580:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"16585:2:39","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16576:3:39"},"nodeType":"YulFunctionCall","src":"16576:12:39"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16594:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16606:3:39","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"16611:5:39","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16602:3:39"},"nodeType":"YulFunctionCall","src":"16602:15:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16590:3:39"},"nodeType":"YulFunctionCall","src":"16590:28:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16569:6:39"},"nodeType":"YulFunctionCall","src":"16569:50:39"},"nodeType":"YulExpressionStatement","src":"16569:50:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16639:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"16644:2:39","type":"","value":"12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16635:3:39"},"nodeType":"YulFunctionCall","src":"16635:12:39"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16653:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16665:26:39","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16661:3:39"},"nodeType":"YulFunctionCall","src":"16661:31:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16649:3:39"},"nodeType":"YulFunctionCall","src":"16649:44:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16628:6:39"},"nodeType":"YulFunctionCall","src":"16628:66:39"},"nodeType":"YulExpressionStatement","src":"16628:66:39"},{"nodeType":"YulAssignment","src":"16703:19:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16714:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"16719:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16710:3:39"},"nodeType":"YulFunctionCall","src":"16710:12:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16703:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16452:3:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16457:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16465:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16473:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16484:3:39","type":""}],"src":"16319:409:39"},{"body":{"nodeType":"YulBlock","src":"16827:203:39","statements":[{"nodeType":"YulVariableDeclaration","src":"16837:26:39","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16857:5:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16851:5:39"},"nodeType":"YulFunctionCall","src":"16851:12:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16841:6:39","type":""}]},{"nodeType":"YulAssignment","src":"16872:32:39","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16891:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"16898:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16887:3:39"},"nodeType":"YulFunctionCall","src":"16887:16:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16881:5:39"},"nodeType":"YulFunctionCall","src":"16881:23:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16872:5:39"}]},{"body":{"nodeType":"YulBlock","src":"16941:83:39","statements":[{"nodeType":"YulAssignment","src":"16955:59:39","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16968:5:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16983:1:39","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16990:4:39","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"16996:6:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16986:3:39"},"nodeType":"YulFunctionCall","src":"16986:17:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16979:3:39"},"nodeType":"YulFunctionCall","src":"16979:25:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17010:1:39","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17006:3:39"},"nodeType":"YulFunctionCall","src":"17006:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16975:3:39"},"nodeType":"YulFunctionCall","src":"16975:38:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16964:3:39"},"nodeType":"YulFunctionCall","src":"16964:50:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16955:5:39"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16919:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"16927:4:39","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16916:2:39"},"nodeType":"YulFunctionCall","src":"16916:16:39"},"nodeType":"YulIf","src":"16913:111:39"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"16807:5:39","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16817:5:39","type":""}],"src":"16733:297:39"},{"body":{"nodeType":"YulBlock","src":"17276:502:39","statements":[{"nodeType":"YulVariableDeclaration","src":"17286:29:39","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17304:3:39","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17309:1:39","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17300:3:39"},"nodeType":"YulFunctionCall","src":"17300:11:39"},{"kind":"number","nodeType":"YulLiteral","src":"17313:1:39","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17296:3:39"},"nodeType":"YulFunctionCall","src":"17296:19:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17290:2:39","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17331:9:39"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17346:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"17354:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17342:3:39"},"nodeType":"YulFunctionCall","src":"17342:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17324:6:39"},"nodeType":"YulFunctionCall","src":"17324:34:39"},"nodeType":"YulExpressionStatement","src":"17324:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17378:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17389:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17374:3:39"},"nodeType":"YulFunctionCall","src":"17374:18:39"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17398:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"17406:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17394:3:39"},"nodeType":"YulFunctionCall","src":"17394:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17367:6:39"},"nodeType":"YulFunctionCall","src":"17367:43:39"},"nodeType":"YulExpressionStatement","src":"17367:43:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17430:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17441:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17426:3:39"},"nodeType":"YulFunctionCall","src":"17426:18:39"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17450:6:39"},{"name":"_1","nodeType":"YulIdentifier","src":"17458:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17446:3:39"},"nodeType":"YulFunctionCall","src":"17446:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17419:6:39"},"nodeType":"YulFunctionCall","src":"17419:43:39"},"nodeType":"YulExpressionStatement","src":"17419:43:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17482:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17493:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17478:3:39"},"nodeType":"YulFunctionCall","src":"17478:18:39"},{"name":"value3","nodeType":"YulIdentifier","src":"17498:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17471:6:39"},"nodeType":"YulFunctionCall","src":"17471:34:39"},"nodeType":"YulExpressionStatement","src":"17471:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17525:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17536:3:39","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17521:3:39"},"nodeType":"YulFunctionCall","src":"17521:19:39"},{"kind":"number","nodeType":"YulLiteral","src":"17542:3:39","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17514:6:39"},"nodeType":"YulFunctionCall","src":"17514:32:39"},"nodeType":"YulExpressionStatement","src":"17514:32:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17566:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17577:3:39","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17562:3:39"},"nodeType":"YulFunctionCall","src":"17562:19:39"},{"name":"value5","nodeType":"YulIdentifier","src":"17583:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17555:6:39"},"nodeType":"YulFunctionCall","src":"17555:35:39"},"nodeType":"YulExpressionStatement","src":"17555:35:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17616:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"17627:3:39","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17612:3:39"},"nodeType":"YulFunctionCall","src":"17612:19:39"},{"name":"value4","nodeType":"YulIdentifier","src":"17633:6:39"},{"name":"value5","nodeType":"YulIdentifier","src":"17641:6:39"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17599:12:39"},"nodeType":"YulFunctionCall","src":"17599:49:39"},"nodeType":"YulExpressionStatement","src":"17599:49:39"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17672:9:39"},{"name":"value5","nodeType":"YulIdentifier","src":"17683:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17668:3:39"},"nodeType":"YulFunctionCall","src":"17668:22:39"},{"kind":"number","nodeType":"YulLiteral","src":"17692:3:39","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17664:3:39"},"nodeType":"YulFunctionCall","src":"17664:32:39"},{"kind":"number","nodeType":"YulLiteral","src":"17698:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17657:6:39"},"nodeType":"YulFunctionCall","src":"17657:43:39"},"nodeType":"YulExpressionStatement","src":"17657:43:39"},{"nodeType":"YulAssignment","src":"17709:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17725:9:39"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"17744:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"17752:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17740:3:39"},"nodeType":"YulFunctionCall","src":"17740:15:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17761:2:39","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17757:3:39"},"nodeType":"YulFunctionCall","src":"17757:7:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17736:3:39"},"nodeType":"YulFunctionCall","src":"17736:29:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17721:3:39"},"nodeType":"YulFunctionCall","src":"17721:45:39"},{"kind":"number","nodeType":"YulLiteral","src":"17768:3:39","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17717:3:39"},"nodeType":"YulFunctionCall","src":"17717:55:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17709:4:39"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17205:9:39","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17216:6:39","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17224:6:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17232:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17240:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17248:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17256:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17267:4:39","type":""}],"src":"17035:743:39"},{"body":{"nodeType":"YulBlock","src":"17863:169:39","statements":[{"body":{"nodeType":"YulBlock","src":"17909:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17918:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17921:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17911:6:39"},"nodeType":"YulFunctionCall","src":"17911:12:39"},"nodeType":"YulExpressionStatement","src":"17911:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17884:7:39"},{"name":"headStart","nodeType":"YulIdentifier","src":"17893:9:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17880:3:39"},"nodeType":"YulFunctionCall","src":"17880:23:39"},{"kind":"number","nodeType":"YulLiteral","src":"17905:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17876:3:39"},"nodeType":"YulFunctionCall","src":"17876:32:39"},"nodeType":"YulIf","src":"17873:52:39"},{"nodeType":"YulVariableDeclaration","src":"17934:29:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17953:9:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17947:5:39"},"nodeType":"YulFunctionCall","src":"17947:16:39"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17938:5:39","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17996:5:39"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"17972:23:39"},"nodeType":"YulFunctionCall","src":"17972:30:39"},"nodeType":"YulExpressionStatement","src":"17972:30:39"},{"nodeType":"YulAssignment","src":"18011:15:39","value":{"name":"value","nodeType":"YulIdentifier","src":"18021:5:39"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18011:6:39"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17829:9:39","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17840:7:39","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17852:6:39","type":""}],"src":"17783:249:39"},{"body":{"nodeType":"YulBlock","src":"18158:162:39","statements":[{"nodeType":"YulAssignment","src":"18168:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18180:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"18191:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18176:3:39"},"nodeType":"YulFunctionCall","src":"18176:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18168:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18210:9:39"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18235:6:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18228:6:39"},"nodeType":"YulFunctionCall","src":"18228:14:39"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18221:6:39"},"nodeType":"YulFunctionCall","src":"18221:22:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18203:6:39"},"nodeType":"YulFunctionCall","src":"18203:41:39"},"nodeType":"YulExpressionStatement","src":"18203:41:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18264:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"18275:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18260:3:39"},"nodeType":"YulFunctionCall","src":"18260:18:39"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18284:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18296:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"18301:10:39","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18292:3:39"},"nodeType":"YulFunctionCall","src":"18292:20:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18280:3:39"},"nodeType":"YulFunctionCall","src":"18280:33:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18253:6:39"},"nodeType":"YulFunctionCall","src":"18253:61:39"},"nodeType":"YulExpressionStatement","src":"18253:61:39"}]},"name":"abi_encode_tuple_t_bool_t_bytes4__to_t_bool_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18119:9:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18130:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18138:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18149:4:39","type":""}],"src":"18037:283:39"},{"body":{"nodeType":"YulBlock","src":"18584:385:39","statements":[{"nodeType":"YulVariableDeclaration","src":"18594:41:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18608:26:39","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18604:3:39"},"nodeType":"YulFunctionCall","src":"18604:31:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18598:2:39","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18651:3:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18664:2:39","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"18668:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18660:3:39"},"nodeType":"YulFunctionCall","src":"18660:15:39"},{"name":"_1","nodeType":"YulIdentifier","src":"18677:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18656:3:39"},"nodeType":"YulFunctionCall","src":"18656:24:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18644:6:39"},"nodeType":"YulFunctionCall","src":"18644:37:39"},"nodeType":"YulExpressionStatement","src":"18644:37:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18701:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"18706:2:39","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18697:3:39"},"nodeType":"YulFunctionCall","src":"18697:12:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18719:2:39","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"18723:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18715:3:39"},"nodeType":"YulFunctionCall","src":"18715:15:39"},{"name":"_1","nodeType":"YulIdentifier","src":"18732:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18711:3:39"},"nodeType":"YulFunctionCall","src":"18711:24:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18690:6:39"},"nodeType":"YulFunctionCall","src":"18690:46:39"},"nodeType":"YulExpressionStatement","src":"18690:46:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18756:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"18761:2:39","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18752:3:39"},"nodeType":"YulFunctionCall","src":"18752:12:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18774:2:39","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"18778:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18770:3:39"},"nodeType":"YulFunctionCall","src":"18770:15:39"},{"name":"_1","nodeType":"YulIdentifier","src":"18787:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18766:3:39"},"nodeType":"YulFunctionCall","src":"18766:24:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18745:6:39"},"nodeType":"YulFunctionCall","src":"18745:46:39"},"nodeType":"YulExpressionStatement","src":"18745:46:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18811:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"18816:2:39","type":"","value":"60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18807:3:39"},"nodeType":"YulFunctionCall","src":"18807:12:39"},{"name":"value3","nodeType":"YulIdentifier","src":"18821:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18800:6:39"},"nodeType":"YulFunctionCall","src":"18800:28:39"},"nodeType":"YulExpressionStatement","src":"18800:28:39"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18854:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"18859:2:39","type":"","value":"92"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18850:3:39"},"nodeType":"YulFunctionCall","src":"18850:12:39"},{"name":"value4","nodeType":"YulIdentifier","src":"18864:6:39"},{"name":"value5","nodeType":"YulIdentifier","src":"18872:6:39"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18837:12:39"},"nodeType":"YulFunctionCall","src":"18837:42:39"},"nodeType":"YulExpressionStatement","src":"18837:42:39"},{"nodeType":"YulVariableDeclaration","src":"18888:35:39","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18906:3:39"},{"name":"value5","nodeType":"YulIdentifier","src":"18911:6:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18902:3:39"},"nodeType":"YulFunctionCall","src":"18902:16:39"},{"kind":"number","nodeType":"YulLiteral","src":"18920:2:39","type":"","value":"92"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18898:3:39"},"nodeType":"YulFunctionCall","src":"18898:25:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18892:2:39","type":""}]},{"expression":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"18939:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"18943:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18932:6:39"},"nodeType":"YulFunctionCall","src":"18932:13:39"},"nodeType":"YulExpressionStatement","src":"18932:13:39"},{"nodeType":"YulAssignment","src":"18954:9:39","value":{"name":"_2","nodeType":"YulIdentifier","src":"18961:2:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18954:3:39"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18520:3:39","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18525:6:39","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18533:6:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18541:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18549:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18557:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18565:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18576:3:39","type":""}],"src":"18325:644:39"},{"body":{"nodeType":"YulBlock","src":"19006:95:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19023:1:39","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19030:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19035:10:39","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19026:3:39"},"nodeType":"YulFunctionCall","src":"19026:20:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19016:6:39"},"nodeType":"YulFunctionCall","src":"19016:31:39"},"nodeType":"YulExpressionStatement","src":"19016:31:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19063:1:39","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19066:4:39","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19056:6:39"},"nodeType":"YulFunctionCall","src":"19056:15:39"},"nodeType":"YulExpressionStatement","src":"19056:15:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19087:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19090:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19080:6:39"},"nodeType":"YulFunctionCall","src":"19080:15:39"},"nodeType":"YulExpressionStatement","src":"19080:15:39"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18974:127:39"},{"body":{"nodeType":"YulBlock","src":"19154:77:39","statements":[{"nodeType":"YulAssignment","src":"19164:16:39","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19175:1:39"},{"name":"y","nodeType":"YulIdentifier","src":"19178:1:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19171:3:39"},"nodeType":"YulFunctionCall","src":"19171:9:39"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19164:3:39"}]},{"body":{"nodeType":"YulBlock","src":"19203:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19205:16:39"},"nodeType":"YulFunctionCall","src":"19205:18:39"},"nodeType":"YulExpressionStatement","src":"19205:18:39"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19195:1:39"},{"name":"sum","nodeType":"YulIdentifier","src":"19198:3:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19192:2:39"},"nodeType":"YulFunctionCall","src":"19192:10:39"},"nodeType":"YulIf","src":"19189:36:39"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19137:1:39","type":""},{"name":"y","nodeType":"YulTypedName","src":"19140:1:39","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19146:3:39","type":""}],"src":"19106:125:39"},{"body":{"nodeType":"YulBlock","src":"19365:119:39","statements":[{"nodeType":"YulAssignment","src":"19375:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19387:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"19398:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19383:3:39"},"nodeType":"YulFunctionCall","src":"19383:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19375:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19417:9:39"},{"name":"value0","nodeType":"YulIdentifier","src":"19428:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19410:6:39"},"nodeType":"YulFunctionCall","src":"19410:25:39"},"nodeType":"YulExpressionStatement","src":"19410:25:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19455:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"19466:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19451:3:39"},"nodeType":"YulFunctionCall","src":"19451:18:39"},{"name":"value1","nodeType":"YulIdentifier","src":"19471:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19444:6:39"},"nodeType":"YulFunctionCall","src":"19444:34:39"},"nodeType":"YulExpressionStatement","src":"19444:34:39"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19326:9:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19337:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19345:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19356:4:39","type":""}],"src":"19236:248:39"},{"body":{"nodeType":"YulBlock","src":"19544:65:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19561:1:39","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19564:3:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19554:6:39"},"nodeType":"YulFunctionCall","src":"19554:14:39"},"nodeType":"YulExpressionStatement","src":"19554:14:39"},{"nodeType":"YulAssignment","src":"19577:26:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19595:1:39","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19598:4:39","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19585:9:39"},"nodeType":"YulFunctionCall","src":"19585:18:39"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19577:4:39"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19527:3:39","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"19535:4:39","type":""}],"src":"19489:120:39"},{"body":{"nodeType":"YulBlock","src":"19694:464:39","statements":[{"body":{"nodeType":"YulBlock","src":"19727:425:39","statements":[{"nodeType":"YulVariableDeclaration","src":"19741:11:39","value":{"kind":"number","nodeType":"YulLiteral","src":"19751:1:39","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19745:2:39","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19772:2:39"},{"name":"array","nodeType":"YulIdentifier","src":"19776:5:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19765:6:39"},"nodeType":"YulFunctionCall","src":"19765:17:39"},"nodeType":"YulExpressionStatement","src":"19765:17:39"},{"nodeType":"YulVariableDeclaration","src":"19795:31:39","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19817:2:39"},{"kind":"number","nodeType":"YulLiteral","src":"19821:4:39","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19807:9:39"},"nodeType":"YulFunctionCall","src":"19807:19:39"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"19799:4:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19839:57:39","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19862:4:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19872:1:39","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19879:10:39"},{"kind":"number","nodeType":"YulLiteral","src":"19891:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19875:3:39"},"nodeType":"YulFunctionCall","src":"19875:19:39"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19868:3:39"},"nodeType":"YulFunctionCall","src":"19868:27:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19858:3:39"},"nodeType":"YulFunctionCall","src":"19858:38:39"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19843:11:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"19933:23:39","statements":[{"nodeType":"YulAssignment","src":"19935:19:39","value":{"name":"data","nodeType":"YulIdentifier","src":"19950:4:39"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19935:11:39"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19915:10:39"},{"kind":"number","nodeType":"YulLiteral","src":"19927:4:39","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19912:2:39"},"nodeType":"YulFunctionCall","src":"19912:20:39"},"nodeType":"YulIf","src":"19909:47:39"},{"nodeType":"YulVariableDeclaration","src":"19969:41:39","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19983:4:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19993:1:39","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20000:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"20005:2:39","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19996:3:39"},"nodeType":"YulFunctionCall","src":"19996:12:39"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19989:3:39"},"nodeType":"YulFunctionCall","src":"19989:20:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19979:3:39"},"nodeType":"YulFunctionCall","src":"19979:31:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19973:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20023:24:39","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"20036:11:39"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"20027:5:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"20121:21:39","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20130:5:39"},{"name":"_1","nodeType":"YulIdentifier","src":"20137:2:39"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20123:6:39"},"nodeType":"YulFunctionCall","src":"20123:17:39"},"nodeType":"YulExpressionStatement","src":"20123:17:39"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20071:5:39"},{"name":"_2","nodeType":"YulIdentifier","src":"20078:2:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20068:2:39"},"nodeType":"YulFunctionCall","src":"20068:13:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20082:26:39","statements":[{"nodeType":"YulAssignment","src":"20084:22:39","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20097:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"20104:1:39","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20093:3:39"},"nodeType":"YulFunctionCall","src":"20093:13:39"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"20084:5:39"}]}]},"pre":{"nodeType":"YulBlock","src":"20064:3:39","statements":[]},"src":"20060:82:39"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19710:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"19715:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19707:2:39"},"nodeType":"YulFunctionCall","src":"19707:11:39"},"nodeType":"YulIf","src":"19704:448:39"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"19666:5:39","type":""},{"name":"len","nodeType":"YulTypedName","src":"19673:3:39","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"19678:10:39","type":""}],"src":"19614:544:39"},{"body":{"nodeType":"YulBlock","src":"20248:81:39","statements":[{"nodeType":"YulAssignment","src":"20258:65:39","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20273:4:39"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20291:1:39","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"20294:3:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20287:3:39"},"nodeType":"YulFunctionCall","src":"20287:11:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20304:1:39","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20300:3:39"},"nodeType":"YulFunctionCall","src":"20300:6:39"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20283:3:39"},"nodeType":"YulFunctionCall","src":"20283:24:39"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20279:3:39"},"nodeType":"YulFunctionCall","src":"20279:29:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20269:3:39"},"nodeType":"YulFunctionCall","src":"20269:40:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20315:1:39","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"20318:3:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20311:3:39"},"nodeType":"YulFunctionCall","src":"20311:11:39"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20266:2:39"},"nodeType":"YulFunctionCall","src":"20266:57:39"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"20258:4:39"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20225:4:39","type":""},{"name":"len","nodeType":"YulTypedName","src":"20231:3:39","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"20239:4:39","type":""}],"src":"20163:166:39"},{"body":{"nodeType":"YulBlock","src":"20428:1254:39","statements":[{"nodeType":"YulVariableDeclaration","src":"20438:24:39","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20458:3:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20452:5:39"},"nodeType":"YulFunctionCall","src":"20452:10:39"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"20442:6:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"20505:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20507:16:39"},"nodeType":"YulFunctionCall","src":"20507:18:39"},"nodeType":"YulExpressionStatement","src":"20507:18:39"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20477:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"20485:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20474:2:39"},"nodeType":"YulFunctionCall","src":"20474:30:39"},"nodeType":"YulIf","src":"20471:56:39"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20579:4:39"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20617:4:39"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20611:5:39"},"nodeType":"YulFunctionCall","src":"20611:11:39"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20585:25:39"},"nodeType":"YulFunctionCall","src":"20585:38:39"},{"name":"newLen","nodeType":"YulIdentifier","src":"20625:6:39"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"20536:42:39"},"nodeType":"YulFunctionCall","src":"20536:96:39"},"nodeType":"YulExpressionStatement","src":"20536:96:39"},{"nodeType":"YulVariableDeclaration","src":"20641:18:39","value":{"kind":"number","nodeType":"YulLiteral","src":"20658:1:39","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"20645:9:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20668:23:39","value":{"kind":"number","nodeType":"YulLiteral","src":"20687:4:39","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"20672:11:39","type":""}]},{"nodeType":"YulAssignment","src":"20700:24:39","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20713:11:39"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20700:9:39"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20770:655:39","statements":[{"nodeType":"YulVariableDeclaration","src":"20784:35:39","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20803:6:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20815:2:39","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20811:3:39"},"nodeType":"YulFunctionCall","src":"20811:7:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20799:3:39"},"nodeType":"YulFunctionCall","src":"20799:20:39"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"20788:7:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20832:48:39","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20875:4:39"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"20846:28:39"},"nodeType":"YulFunctionCall","src":"20846:34:39"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"20836:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20893:10:39","value":{"kind":"number","nodeType":"YulLiteral","src":"20902:1:39","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20897:1:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"20980:172:39","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21005:6:39"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21023:3:39"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21028:9:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21019:3:39"},"nodeType":"YulFunctionCall","src":"21019:19:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21013:5:39"},"nodeType":"YulFunctionCall","src":"21013:26:39"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20998:6:39"},"nodeType":"YulFunctionCall","src":"20998:42:39"},"nodeType":"YulExpressionStatement","src":"20998:42:39"},{"nodeType":"YulAssignment","src":"21057:24:39","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21071:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"21079:1:39","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21067:3:39"},"nodeType":"YulFunctionCall","src":"21067:14:39"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21057:6:39"}]},{"nodeType":"YulAssignment","src":"21098:40:39","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21115:9:39"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"21126:11:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21111:3:39"},"nodeType":"YulFunctionCall","src":"21111:27:39"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21098:9:39"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20927:1:39"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20930:7:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20924:2:39"},"nodeType":"YulFunctionCall","src":"20924:14:39"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20939:28:39","statements":[{"nodeType":"YulAssignment","src":"20941:24:39","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20950:1:39"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20953:11:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20946:3:39"},"nodeType":"YulFunctionCall","src":"20946:19:39"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20941:1:39"}]}]},"pre":{"nodeType":"YulBlock","src":"20920:3:39","statements":[]},"src":"20916:236:39"},{"body":{"nodeType":"YulBlock","src":"21200:166:39","statements":[{"nodeType":"YulVariableDeclaration","src":"21218:43:39","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21245:3:39"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21250:9:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21241:3:39"},"nodeType":"YulFunctionCall","src":"21241:19:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21235:5:39"},"nodeType":"YulFunctionCall","src":"21235:26:39"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"21222:9:39","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21285:6:39"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"21297:9:39"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21324:1:39","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"21327:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21320:3:39"},"nodeType":"YulFunctionCall","src":"21320:14:39"},{"kind":"number","nodeType":"YulLiteral","src":"21336:3:39","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21316:3:39"},"nodeType":"YulFunctionCall","src":"21316:24:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21346:1:39","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21342:3:39"},"nodeType":"YulFunctionCall","src":"21342:6:39"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21312:3:39"},"nodeType":"YulFunctionCall","src":"21312:37:39"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21308:3:39"},"nodeType":"YulFunctionCall","src":"21308:42:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21293:3:39"},"nodeType":"YulFunctionCall","src":"21293:58:39"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21278:6:39"},"nodeType":"YulFunctionCall","src":"21278:74:39"},"nodeType":"YulExpressionStatement","src":"21278:74:39"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"21171:7:39"},{"name":"newLen","nodeType":"YulIdentifier","src":"21180:6:39"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21168:2:39"},"nodeType":"YulFunctionCall","src":"21168:19:39"},"nodeType":"YulIf","src":"21165:201:39"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21386:4:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21400:1:39","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"21403:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21396:3:39"},"nodeType":"YulFunctionCall","src":"21396:14:39"},{"kind":"number","nodeType":"YulLiteral","src":"21412:1:39","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21392:3:39"},"nodeType":"YulFunctionCall","src":"21392:22:39"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21379:6:39"},"nodeType":"YulFunctionCall","src":"21379:36:39"},"nodeType":"YulExpressionStatement","src":"21379:36:39"}]},"nodeType":"YulCase","src":"20763:662:39","value":{"kind":"number","nodeType":"YulLiteral","src":"20768:1:39","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"21442:234:39","statements":[{"nodeType":"YulVariableDeclaration","src":"21456:14:39","value":{"kind":"number","nodeType":"YulLiteral","src":"21469:1:39","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21460:5:39","type":""}]},{"body":{"nodeType":"YulBlock","src":"21505:67:39","statements":[{"nodeType":"YulAssignment","src":"21523:35:39","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21542:3:39"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21547:9:39"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21538:3:39"},"nodeType":"YulFunctionCall","src":"21538:19:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21532:5:39"},"nodeType":"YulFunctionCall","src":"21532:26:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21523:5:39"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"21486:6:39"},"nodeType":"YulIf","src":"21483:89:39"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21592:4:39"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21651:5:39"},{"name":"newLen","nodeType":"YulIdentifier","src":"21658:6:39"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"21598:52:39"},"nodeType":"YulFunctionCall","src":"21598:67:39"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21585:6:39"},"nodeType":"YulFunctionCall","src":"21585:81:39"},"nodeType":"YulExpressionStatement","src":"21585:81:39"}]},"nodeType":"YulCase","src":"21434:242:39","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20743:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"20751:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20740:2:39"},"nodeType":"YulFunctionCall","src":"20740:14:39"},"nodeType":"YulSwitch","src":"20733:943:39"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20413:4:39","type":""},{"name":"src","nodeType":"YulTypedName","src":"20419:3:39","type":""}],"src":"20334:1348:39"},{"body":{"nodeType":"YulBlock","src":"21868:217:39","statements":[{"nodeType":"YulAssignment","src":"21878:27:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21890:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"21901:3:39","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21886:3:39"},"nodeType":"YulFunctionCall","src":"21886:19:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21878:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21921:9:39"},{"name":"value0","nodeType":"YulIdentifier","src":"21932:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21914:6:39"},"nodeType":"YulFunctionCall","src":"21914:25:39"},"nodeType":"YulExpressionStatement","src":"21914:25:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21959:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"21970:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:39"},"nodeType":"YulFunctionCall","src":"21955:18:39"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21979:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"21987:4:39","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21975:3:39"},"nodeType":"YulFunctionCall","src":"21975:17:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21948:6:39"},"nodeType":"YulFunctionCall","src":"21948:45:39"},"nodeType":"YulExpressionStatement","src":"21948:45:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22013:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"22024:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22009:3:39"},"nodeType":"YulFunctionCall","src":"22009:18:39"},{"name":"value2","nodeType":"YulIdentifier","src":"22029:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22002:6:39"},"nodeType":"YulFunctionCall","src":"22002:34:39"},"nodeType":"YulExpressionStatement","src":"22002:34:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22056:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"22067:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22052:3:39"},"nodeType":"YulFunctionCall","src":"22052:18:39"},{"name":"value3","nodeType":"YulIdentifier","src":"22072:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22045:6:39"},"nodeType":"YulFunctionCall","src":"22045:34:39"},"nodeType":"YulExpressionStatement","src":"22045:34:39"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21813:9:39","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21824:6:39","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21832:6:39","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21840:6:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21848:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21859:4:39","type":""}],"src":"21687:398:39"},{"body":{"nodeType":"YulBlock","src":"22183:268:39","statements":[{"nodeType":"YulVariableDeclaration","src":"22193:26:39","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"22213:5:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22207:5:39"},"nodeType":"YulFunctionCall","src":"22207:12:39"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22197:6:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22228:33:39","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"22248:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"22255:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:39"},"nodeType":"YulFunctionCall","src":"22244:16:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22238:5:39"},"nodeType":"YulFunctionCall","src":"22238:23:39"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22232:2:39","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22270:30:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22284:3:39","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22289:10:39","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22280:3:39"},"nodeType":"YulFunctionCall","src":"22280:20:39"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"22274:2:39","type":""}]},{"nodeType":"YulAssignment","src":"22309:20:39","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22322:2:39"},{"name":"_2","nodeType":"YulIdentifier","src":"22326:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22318:3:39"},"nodeType":"YulFunctionCall","src":"22318:11:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22309:5:39"}]},{"body":{"nodeType":"YulBlock","src":"22363:82:39","statements":[{"nodeType":"YulAssignment","src":"22377:58:39","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22394:2:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22406:1:39","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22413:1:39","type":"","value":"4"},{"name":"length","nodeType":"YulIdentifier","src":"22416:6:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22409:3:39"},"nodeType":"YulFunctionCall","src":"22409:14:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22402:3:39"},"nodeType":"YulFunctionCall","src":"22402:22:39"},{"name":"_2","nodeType":"YulIdentifier","src":"22426:2:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22398:3:39"},"nodeType":"YulFunctionCall","src":"22398:31:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22390:3:39"},"nodeType":"YulFunctionCall","src":"22390:40:39"},{"name":"_2","nodeType":"YulIdentifier","src":"22432:2:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22386:3:39"},"nodeType":"YulFunctionCall","src":"22386:49:39"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22377:5:39"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22344:6:39"},{"kind":"number","nodeType":"YulLiteral","src":"22352:1:39","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22341:2:39"},"nodeType":"YulFunctionCall","src":"22341:13:39"},"nodeType":"YulIf","src":"22338:107:39"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"22163:5:39","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22173:5:39","type":""}],"src":"22090:361:39"},{"body":{"nodeType":"YulBlock","src":"22575:110:39","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22592:3:39"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22605:2:39","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"22609:6:39"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22601:3:39"},"nodeType":"YulFunctionCall","src":"22601:15:39"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22622:26:39","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22618:3:39"},"nodeType":"YulFunctionCall","src":"22618:31:39"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22597:3:39"},"nodeType":"YulFunctionCall","src":"22597:53:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22585:6:39"},"nodeType":"YulFunctionCall","src":"22585:66:39"},"nodeType":"YulExpressionStatement","src":"22585:66:39"},{"nodeType":"YulAssignment","src":"22660:19:39","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22671:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"22676:2:39","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22667:3:39"},"nodeType":"YulFunctionCall","src":"22667:12:39"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22660:3:39"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22551:3:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22556:6:39","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22567:3:39","type":""}],"src":"22456:229:39"},{"body":{"nodeType":"YulBlock","src":"22739:79:39","statements":[{"nodeType":"YulAssignment","src":"22749:17:39","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22761:1:39"},{"name":"y","nodeType":"YulIdentifier","src":"22764:1:39"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22757:3:39"},"nodeType":"YulFunctionCall","src":"22757:9:39"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22749:4:39"}]},{"body":{"nodeType":"YulBlock","src":"22790:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22792:16:39"},"nodeType":"YulFunctionCall","src":"22792:18:39"},"nodeType":"YulExpressionStatement","src":"22792:18:39"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22781:4:39"},{"name":"x","nodeType":"YulIdentifier","src":"22787:1:39"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22778:2:39"},"nodeType":"YulFunctionCall","src":"22778:11:39"},"nodeType":"YulIf","src":"22775:37:39"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22721:1:39","type":""},{"name":"y","nodeType":"YulTypedName","src":"22724:1:39","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22730:4:39","type":""}],"src":"22690:128:39"},{"body":{"nodeType":"YulBlock","src":"22932:76:39","statements":[{"nodeType":"YulAssignment","src":"22942:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22954:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"22965:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22950:3:39"},"nodeType":"YulFunctionCall","src":"22950:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22942:4:39"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22984:9:39"},{"name":"value0","nodeType":"YulIdentifier","src":"22995:6:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22977:6:39"},"nodeType":"YulFunctionCall","src":"22977:25:39"},"nodeType":"YulExpressionStatement","src":"22977:25:39"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22901:9:39","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22912:6:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22923:4:39","type":""}],"src":"22823:185:39"},{"body":{"nodeType":"YulBlock","src":"23187:171:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23204:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23215:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23197:6:39"},"nodeType":"YulFunctionCall","src":"23197:21:39"},"nodeType":"YulExpressionStatement","src":"23197:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23238:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23249:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23234:3:39"},"nodeType":"YulFunctionCall","src":"23234:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"23254:2:39","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23227:6:39"},"nodeType":"YulFunctionCall","src":"23227:30:39"},"nodeType":"YulExpressionStatement","src":"23227:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23277:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23288:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23273:3:39"},"nodeType":"YulFunctionCall","src":"23273:18:39"},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"23293:23:39","type":"","value":"toBytes32_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23266:6:39"},"nodeType":"YulFunctionCall","src":"23266:51:39"},"nodeType":"YulExpressionStatement","src":"23266:51:39"},{"nodeType":"YulAssignment","src":"23326:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23338:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23349:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23334:3:39"},"nodeType":"YulFunctionCall","src":"23334:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23326:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23164:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23178:4:39","type":""}],"src":"23013:345:39"},{"body":{"nodeType":"YulBlock","src":"23537:164:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23554:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23565:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23547:6:39"},"nodeType":"YulFunctionCall","src":"23547:21:39"},"nodeType":"YulExpressionStatement","src":"23547:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23588:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23599:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23584:3:39"},"nodeType":"YulFunctionCall","src":"23584:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"23604:2:39","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23577:6:39"},"nodeType":"YulFunctionCall","src":"23577:30:39"},"nodeType":"YulExpressionStatement","src":"23577:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23627:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23638:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23623:3:39"},"nodeType":"YulFunctionCall","src":"23623:18:39"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"23643:16:39","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23616:6:39"},"nodeType":"YulFunctionCall","src":"23616:44:39"},"nodeType":"YulExpressionStatement","src":"23616:44:39"},{"nodeType":"YulAssignment","src":"23669:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23681:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23692:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23677:3:39"},"nodeType":"YulFunctionCall","src":"23677:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23669:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23514:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23528:4:39","type":""}],"src":"23363:338:39"},{"body":{"nodeType":"YulBlock","src":"23880:167:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23897:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23908:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23890:6:39"},"nodeType":"YulFunctionCall","src":"23890:21:39"},"nodeType":"YulExpressionStatement","src":"23890:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23931:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23942:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23927:3:39"},"nodeType":"YulFunctionCall","src":"23927:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"23947:2:39","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23920:6:39"},"nodeType":"YulFunctionCall","src":"23920:30:39"},"nodeType":"YulExpressionStatement","src":"23920:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23970:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"23981:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23966:3:39"},"nodeType":"YulFunctionCall","src":"23966:18:39"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"23986:19:39","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23959:6:39"},"nodeType":"YulFunctionCall","src":"23959:47:39"},"nodeType":"YulExpressionStatement","src":"23959:47:39"},{"nodeType":"YulAssignment","src":"24015:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24027:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24038:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24023:3:39"},"nodeType":"YulFunctionCall","src":"24023:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24015:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23857:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23871:4:39","type":""}],"src":"23706:341:39"},{"body":{"nodeType":"YulBlock","src":"24226:179:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24243:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24254:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24236:6:39"},"nodeType":"YulFunctionCall","src":"24236:21:39"},"nodeType":"YulExpressionStatement","src":"24236:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24277:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24288:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24273:3:39"},"nodeType":"YulFunctionCall","src":"24273:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"24293:2:39","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24266:6:39"},"nodeType":"YulFunctionCall","src":"24266:30:39"},"nodeType":"YulExpressionStatement","src":"24266:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24316:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24327:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24312:3:39"},"nodeType":"YulFunctionCall","src":"24312:18:39"},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"24332:31:39","type":"","value":"Create2: insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24305:6:39"},"nodeType":"YulFunctionCall","src":"24305:59:39"},"nodeType":"YulExpressionStatement","src":"24305:59:39"},{"nodeType":"YulAssignment","src":"24373:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24385:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24396:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24381:3:39"},"nodeType":"YulFunctionCall","src":"24381:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24373:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24203:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24217:4:39","type":""}],"src":"24052:353:39"},{"body":{"nodeType":"YulBlock","src":"24584:182:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24601:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24612:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24594:6:39"},"nodeType":"YulFunctionCall","src":"24594:21:39"},"nodeType":"YulExpressionStatement","src":"24594:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24635:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24646:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24631:3:39"},"nodeType":"YulFunctionCall","src":"24631:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"24651:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24624:6:39"},"nodeType":"YulFunctionCall","src":"24624:30:39"},"nodeType":"YulExpressionStatement","src":"24624:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24674:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24685:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24670:3:39"},"nodeType":"YulFunctionCall","src":"24670:18:39"},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"24690:34:39","type":"","value":"Create2: bytecode length is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24663:6:39"},"nodeType":"YulFunctionCall","src":"24663:62:39"},"nodeType":"YulExpressionStatement","src":"24663:62:39"},{"nodeType":"YulAssignment","src":"24734:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24746:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24757:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24742:3:39"},"nodeType":"YulFunctionCall","src":"24742:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24734:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24561:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24575:4:39","type":""}],"src":"24410:356:39"},{"body":{"nodeType":"YulBlock","src":"24945:175:39","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24962:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"24973:2:39","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24955:6:39"},"nodeType":"YulFunctionCall","src":"24955:21:39"},"nodeType":"YulExpressionStatement","src":"24955:21:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24996:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"25007:2:39","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24992:3:39"},"nodeType":"YulFunctionCall","src":"24992:18:39"},{"kind":"number","nodeType":"YulLiteral","src":"25012:2:39","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24985:6:39"},"nodeType":"YulFunctionCall","src":"24985:30:39"},"nodeType":"YulExpressionStatement","src":"24985:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25035:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"25046:2:39","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25031:3:39"},"nodeType":"YulFunctionCall","src":"25031:18:39"},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","kind":"string","nodeType":"YulLiteral","src":"25051:27:39","type":"","value":"Create2: Failed on deploy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25024:6:39"},"nodeType":"YulFunctionCall","src":"25024:55:39"},"nodeType":"YulExpressionStatement","src":"25024:55:39"},{"nodeType":"YulAssignment","src":"25088:26:39","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25100:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"25111:2:39","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25096:3:39"},"nodeType":"YulFunctionCall","src":"25096:18:39"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25088:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24922:9:39","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24936:4:39","type":""}],"src":"24771:349:39"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_bytes_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_bytes(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_array_bytes_dyn(add(headStart, offset_3), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_bytes_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value1, tail_1)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(_1, 20), value3)\n        end := add(_1, 52)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes4__to_t_bytes4__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(value0, shl(224, 0xffffffff)))\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        mstore(tail_1, 0)\n        tail := add(tail_1, 32)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_ff386dbcb1aa30fe75dc1688ef2484c609e6f34f17710a6791ce87ec883580dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"LSP0: batchCalls reverted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(176, 0xffffffffffffffffffff)))\n        mstore(add(pos, 10), and(value1, shl(240, 65535)))\n        mstore(add(pos, 12), and(value2, not(0xffffffffffffffffffffffff)))\n        end := add(pos, 32)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), value5)\n        calldatacopy(add(headStart, 192), value4, value5)\n        mstore(add(add(headStart, value5), 192), 0)\n        tail := add(add(headStart, and(add(value5, 31), not(31))), 192)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_bytes4__to_t_bool_t_bytes4__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        mstore(add(pos, 60), value3)\n        calldatacopy(add(pos, 92), value4, value5)\n        let _2 := add(add(pos, value5), 92)\n        mstore(_2, 0)\n        end := _2\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes4(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := shl(224, 0xffffffff)\n        value := and(_1, _2)\n        if lt(length, 4)\n        {\n            value := and(and(_1, shl(shl(3, sub(4, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toBytes32_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Create2: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Create2: bytecode length is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Create2: Failed on deploy\")\n        tail := add(headStart, 96)\n    }\n}","id":39,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061010d5760003560e01c806379ba509711610095578063dedff9c611610064578063dedff9c614610380578063e30c3978146103a0578063ead3fbdf146101da578063f2fde38b146103be578063ffa1ad74146103de57610146565b806379ba5097146103135780637f23690c146103285780638da5cb5b1461033b578063979024211461036d57610146565b806344c028fe116100dc57806344c028fe1461028b57806354f6127f146102ab5780636963d438146102cb5780636bb56a14146102eb578063715018a6146102fe57610146565b806301bfba61146101da57806301ffc9a7146102025780631626ba7e14610232578063318584521461026b57610146565b36610146573415610144576101426000805160206132c483398151915260001b60405180602001604052806000815250610410565b505b005b600036606060048210156101c25734156101ad576101ab6000805160206132c483398151915260001b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b506040805160208101909152600081526101cf565b6101cc838361069d565b90505b915050805190602001f35b3480156101e657600080fd5b506101ef60c881565b6040519081526020015b60405180910390f35b34801561020e57600080fd5b5061022261021d366004612850565b61084e565b60405190151581526020016101f9565b34801561023e57600080fd5b5061025261024d366004612930565b6108ee565b6040516001600160e01b031990911681526020016101f9565b61027e610279366004612a95565b610aa0565b6040516101f99190612bec565b61029e610299366004612c4e565b610b88565b6040516101f99190612ca2565b3480156102b757600080fd5b5061029e6102c6366004612cb5565b610c47565b3480156102d757600080fd5b5061027e6102e6366004612cce565b610c52565b61029e6102f9366004612930565b610410565b34801561030a57600080fd5b50610144610dad565b34801561031f57600080fd5b50610144610efa565b610144610336366004612930565b611067565b34801561034757600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101f9565b61014461037b366004612d42565b611126565b34801561038c57600080fd5b5061027e61039b366004612d9b565b6112a3565b3480156103ac57600080fd5b506003546001600160a01b0316610355565b3480156103ca57600080fd5b506101446103d9366004612dcf565b61134d565b3480156103ea57600080fd5b5061029e604051806040016040528060068152602001650302e31342e360d41b81525081565b6060341580159061042f57506000805160206132c48339815191528314155b15610488576104866000805160206132c483398151915260001b6000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b60006104b37f0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b476114f9565b9050606060148251106105645760006104cb83612dea565b60601c90506104e181635122dded60e11b61159b565b1561056257604051635122dded60e11b81526001600160a01b0382169063a245bbda9061051890339034908b908b90600401612e21565b6000604051808303816000875af1158015610537573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261055f9190810190612e4e565b91505b505b600061057d690cfc51aec37c55a4d0b160b01b87611624565b9050600061058a826114f9565b90506060601482511061063b5760006105a283612dea565b60601c90506105b881635122dded60e11b61159b565b1561063957604051635122dded60e11b81526001600160a01b0382169063a245bbda906105ef90339034908e908e90600401612e21565b6000604051808303816000875af115801561060e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106369190810190612e4e565b91505b505b838160405160200161064e929190612ebb565b60405160208183030381529060405295508734336001600160a01b03166000805160206132a48339815191528a8a60405161068a929190612ebb565b60405180910390a4505050505092915050565b60606000806106b76000356001600160e01b031916611670565b91509150346000141580156106ca575080155b15610722576107206000805160206132c483398151915260001b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041092505050565b505b6000356001600160e01b03191615801561074357506001600160a01b038216155b15610761576040518060200160405280600081525092505050610848565b6001600160a01b03821661079b5760405163bb370b2b60e01b81526001600160e01b03196000351660048201526024015b60405180910390fd5b600080836001600160a01b0316836107b45760006107b6565b345b888833346040516020016107cd9493929190612ee0565b60408051601f19818403018152908290526107e791612f0b565b60006040518083038185875af1925050503d8060008114610824576040519150601f19603f3d011682016040523d82523d6000602084013e610829565b606091505b5091509150811561083f57935061084892505050565b80518060208301fd5b92915050565b60006001600160e01b03198216630b135d3f60e11b148061087f57506001600160e01b031982166324871b3d60e01b145b8061089a57506001600160e01b03198216631aed5a8560e21b145b806108b557506001600160e01b031982166394be599960e01b145b806108d057506001600160e01b03198216631a0eb6a560e01b145b806108df57506108df82611720565b80610848575061084882611745565b6000806109036000546001600160a01b031690565b90506001600160a01b0381163b15610a2057600080826001600160a01b0316631626ba7e60e01b878760405160240161093d929190612f27565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161097b9190612f0b565b600060405180830381855afa9150503d80600081146109b6576040519150601f19603f3d011682016040523d82523d6000602084013e6109bb565b606091505b509150915060008280156109d0575081516020145b80156109f757508151630b135d3f60e11b906109f59084016020908101908501612f40565b145b905080610a0c576001600160e01b0319610a15565b630b135d3f60e11b5b945050505050610848565b600080610a2d8686611783565b90925090506000816004811115610a4657610a46612f59565b14610a5f57506001600160e01b03199250610848915050565b826001600160a01b0316826001600160a01b031614610a86576001600160e01b0319610a8f565b630b135d3f60e11b5b9350505050610848565b5092915050565b60603415610b07576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f1981840301815290829052610afe91612f6f565b60405180910390a45b6000546001600160a01b031633819003610b2f57610b27868686866117c8565b915050610b80565b6000610b3a82611925565b90506000610b4a888888886117c8565b90508115610b7b57610b7b8382604051602001610b679190612bec565b604051602081830303815290604052611a75565b925050505b949350505050565b60603415610bef576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f1981840301815290829052610be691612f6f565b60405180910390a45b6000546001600160a01b031633819003610c0f57610b2786868686611b92565b6000610c1a82611925565b90506000610c2a88888888611b92565b90508115610b7b57610b7b8382604051602001610b679190612ca2565b6060610848826114f9565b6060816001600160401b03811115610c6c57610c6c61286d565b604051908082528060200260200182016040528015610c9f57816020015b6060815260200190600190039081610c8a5790505b50905060005b82811015610a995760008030868685818110610cc357610cc3612f99565b9050602002810190610cd59190612faf565b604051610ce3929190612ff5565b600060405180830381855af49150503d8060008114610d1e576040519150601f19603f3d011682016040523d82523d6000602084013e610d23565b606091505b509150915081610d8557805115610d3d5780518082602001fd5b60405162461bcd60e51b815260206004820152601960248201527f4c5350303a20626174636843616c6c73207265766572746564000000000000006044820152606401610792565b80848481518110610d9857610d98612f99565b60209081029190910101525050600101610ca5565b6000546001600160a01b031633819003610e50576000546001600160a01b0316610dd5611c9d565b6000546001600160a01b0316610e4c57604080516001600160a01b0384166020820152600091810191909152610e4c907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814906060015b60408051601f198184030181529190526001600160a01b0384169190611d90565b5050565b6000610e5b82611925565b90506000610e716000546001600160a01b031690565b9050610e7b611c9d565b6000546001600160a01b0316610ed557604080516001600160a01b0385166020820152600091810191909152610ed5907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f81490606001610e2b565b8115610ef457610ef48360405180602001604052806000815250611a75565b50505b50565b600354600160a01b900460ff1615610f2557604051635758dd0760e01b815260040160405180910390fd5b600080546003546001600160a01b0391821692911690338214610f7057610f4b82611925565b9050610f5682611e24565b600380546001600160a01b03191690556000600255610f78565b610f78611e92565b604080516001600160a01b038086166020830152841691810191909152610fe0907fa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814906060015b60408051601f198184030181529190526001600160a01b0386169190611d90565b604080516001600160a01b038086166020830152841691810191909152611048907fceca317f109c43507871523e82dc2a3cc64dfa18f12da0b6db14f6e23f995538906060015b60408051601f198184030181529190526001600160a01b0385169190611d90565b8015610ef457610ef48260405180602001604052806000815250611a75565b34156110cc576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f19818403018152908290526110c391612f6f565b60405180910390a45b6000546001600160a01b0316338190036110ea57610ef48383611edf565b60006110f582611925565b90506111018484611edf565b8015611120576111208260405180602001604052806000815250611a75565b50505050565b341561118b576040516001600160e01b03196000351660208201526000805160206132c483398151915290349033906000805160206132a48339815191529060240160408051601f198184030181529082905261118291612f6f565b60405180910390a45b80518251146111ad57604051633bcc897960e01b815260040160405180910390fd5b81516000036111cf576040516397da5f9560e01b815260040160405180910390fd5b6000546001600160a01b0316338190036112335760005b83518110156111205761122b84828151811061120457611204612f99565b602002602001015184838151811061121e5761121e612f99565b6020026020010151611edf565b6001016111e6565b600061123e82611925565b905060005b84518110156112835761127b85828151811061126157611261612f99565b602002602001015185838151811061121e5761121e612f99565b600101611243565b508015611120576111208260405180602001604052806000815250611a75565b606081516001600160401b038111156112be576112be61286d565b6040519080825280602002602001820160405280156112f157816020015b60608152602001906001900390816112dc5790505b50905060005b82518110156113475761132283828151811061131557611315612f99565b60200260200101516114f9565b82828151811061133457611334612f99565b60209081029190910101526001016112f7565b50919050565b6000546001600160a01b031633819003611419576003805460ff60a01b1916600160a01b17905561137d82611f34565b816001600160a01b0316816001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a3604080516001600160a01b038084166020830152841691810191909152611408907fe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac692690606001611027565b6003805460ff60a01b191690555050565b600061142482611925565b6003805460ff60a01b1916600160a01b179055905061144283611f34565b826001600160a01b0316826001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a3604080516001600160a01b0380851660208301528516918101919091526114cd907fe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac692690606001610fbf565b6003805460ff60a01b191690558015610ef457610ef48260405180602001604052806000815250611a75565b600081815260016020526040902080546060919061151690613005565b80601f016020809104026020016040519081016040528092919081815260200182805461154290613005565b801561158f5780601f106115645761010080835404028352916020019161158f565b820191906000526020600020905b81548152906001019060200180831161157257829003601f168201915b50505050509050919050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561160d575060208210155b80156116195750600081115b979650505050505050565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c83015291829101604051602081830303815290604052905080610b8090613039565b60008080611695696773c5a04a6d4300884b60b11b6001600160e01b03198616611624565b905060006116a2826114f9565b90506014815110156116bb575060009485945092505050565b805160150361170857806014815181106116d7576116d7612f99565b01602001516001600160f81b031916600160f81b03611708576116f981612dea565b60601c95600195509350505050565b61171181612dea565b60601c95600095509350505050565b60006001600160e01b0319821663a918fa6b60e01b1480610848575061084882611f84565b6000806117586301ffc9a760e01b611670565b5090506001600160a01b0381166117725750600092915050565b61177c818461159b565b9392505050565b60008082516041036117b95760208301516040840151606085015160001a6117ad87828585611fa9565b945094505050506117c1565b506000905060025b9250929050565b6060835185511415806117e95750825184511415806117e957508151835114155b1561180757604051633ff55f4d60e01b815260040160405180910390fd5b84516000036118295760405163e9ad2b5f60e01b815260040160405180910390fd5b600085516001600160401b038111156118445761184461286d565b60405190808252806020026020018201604052801561187757816020015b60608152602001906001900390816118625790505b50905060005b865181101561191b576118f687828151811061189b5761189b612f99565b60200260200101518783815181106118b5576118b5612f99565b60200260200101518784815181106118cf576118cf612f99565b60200260200101518785815181106118e9576118e9612f99565b6020026020010151611b92565b82828151811061190857611908612f99565b602090810291909101015260010161187d565b5095945050505050565b6000816001600160a01b03163b60000361195d57604051630c39230160e01b81526001600160a01b0383166004820152602401610792565b6040516337a4a3c560e21b81526001600160a01b0383169063de928f1490611994903390309082903490600090369060040161305d565b6020604051808303816000875af19250505080156119cf575060408051601f3d908101601f191682019092526119cc918101906130ba565b60015b611a0e573d8080156119fd576040519150601f19603f3d011682016040523d82523d6000602084013e611a02565b606091505b5061134760008261206d565b6001600160e81b0319811662de928f60e81b14611a5157604051639d6741e360e01b8152600060048201526001600160e01b031982166024820152604401610792565b8060031a60f81b6001600160f81b031916600160f81b14915050919050565b919050565b816001600160a01b031663d3fc45d333303334600036604051602001611aa0969594939291906130d7565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401611ad4929190612f27565b6020604051808303816000875af1925050508015611b0f575060408051601f3d908101601f19168201909252611b0c918101906130ba565b60015b611b4e573d808015611b3d576040519150601f19603f3d011682016040523d82523d6000602084013e611b42565b606091505b50610ef460018261206d565b6001600160e01b0319811663d3fc45d360e01b14610ef457604051639d6741e360e01b8152600160048201526001600160e01b031982166024820152604401610792565b606084611bab57611ba484848461209a565b9050610b80565b60018503611be5576001600160a01b03841615611bdb57604051631820c12560e11b815260040160405180910390fd5b611ba483836121c4565b60028503611c1f576001600160a01b03841615611c1557604051631820c12560e11b815260040160405180910390fd5b611ba483836122c0565b60038503611c50578215611c46576040516339795e3560e11b815260040160405180910390fd5b611ba484836123a5565b60048503611c81578215611c7757604051635ac8313560e01b815260040160405180910390fd5b611ba484836124a2565b604051631d60ecef60e21b815260048101869052602401610792565b6002544390600090611cb19060c89061313d565b90506000611cc060c88361313d565b905080831180611cd05750600254155b15611d18576002839055600380546001600160a01b03191690556040517f81b7f830f1f0084db6497c486cbe6974c86488dcc4e3738eab94ab6d6b1653e790600090a1505050565b81831015611d4357604051630d8404a160e11b81526004810183905260248101829052604401610792565b611d4d6000611e24565b60006002819055600380546001600160a01b03191690556040517fd1f66c3d2bc1993a86be5e3d33709d98f0442381befcedd29f578b9b2506b1ce9190a1505050565b611daa6001600160a01b038416631aed5a8560e21b61159b565b15610ef457604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611ddd9085908590600401612f27565b6000604051808303816000875af1158015611dfc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111209190810190612e4e565b6000546001600160a01b03828116911614610ef757600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b6003546001600160a01b03163314611ebf576040516308a3c8a560e31b8152336004820152602401610792565b611ec833611e24565b600380546001600160a01b03191690556000600255565b6000828152600160205260409020611ef7828261319e565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051611f289190612ca2565b60405180910390a25050565b306001600160a01b03821603611f5d57604051631c0a54df60e31b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b03929092169190911790556000600255565b60006001600160e01b031982166318a6a9a560e21b1480610848575061084882612553565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611fe05750600090506003612064565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612034573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661205d57600060019250925050612064565b9150600090505b94509492505050565b80511561207d5780518082602001fd5b604051638c6a8ae360e01b81528215156004820152602401610792565b6060824710156120c6576040516301bf351f60e31b815247600482015260248101849052604401610792565b6120cf8261325d565b6001600160e01b031916846001600160a01b031660007f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e8660405161211691815260200190565b60405180910390a4600080856001600160a01b0316858560405161213a9190612f0b565b60006040518083038185875af1925050503d8060008114612177576040519150601f19603f3d011682016040523d82523d6000602084013e61217c565b606091505b50915091506121ba82826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250612588565b9695505050505050565b6060824710156121f0576040516301bf351f60e31b815247600482015260248101849052604401610792565b81516000036122125760405163b81cd8d960e01b815260040160405180910390fd5b600082516020840185f090506001600160a01b03811661224557604051630b07489b60e01b815260040160405180910390fd5b6000801b816001600160a01b031660017fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c38760405161228691815260200190565b60405180910390a46040516001600160601b0319606083901b16602082015260340160405160208183030381529060405291505092915050565b606081516000036122e45760405163b81cd8d960e01b815260040160405180910390fd5b60006122fd83602085516122f89190613290565b6125a1565b9050600061231a846000602087516123159190613290565b6125ff565b9050600061232986848461270c565b905082816001600160a01b031660027fa1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c38960405161236991815260200190565b60405180910390a46040516001600160601b0319606083901b166020820152603401604051602081830303815290604052935050505092915050565b60606123b08261325d565b6001600160e01b031916836001600160a01b031660037f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e60006040516123f891815260200190565b60405180910390a4600080846001600160a01b03168460405161241b9190612f0b565b600060405180830381855afa9150503d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b606091505b509150915061249982826040518060400160405280601681526020017522a9219b991aac1d102ab735b737bbb71022b93937b960511b815250612588565b95945050505050565b60606124ad8261325d565b6001600160e01b031916836001600160a01b031660047f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e60006040516124f591815260200190565b60405180910390a4600080846001600160a01b0316846040516125189190612f0b565b600060405180830381855af49150503d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b60006001600160e01b03198216631d516b2b60e21b148061084857506301ffc9a760e01b6001600160e01b0319831614610848565b6060831561259757508161177c565b61177c8383612810565b60006125ae82602061313d565b835110156125f65760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610792565b50016020015190565b60608161260d81601f61313d565b101561264c5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610792565b612656828461313d565b8451101561269a5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610792565b6060821580156126b95760405191506000825260208201604052612703565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156126f25780518352602092830192016126da565b5050858452601f01601f1916604052505b50949350505050565b60008347101561275e5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610792565b81516000036127af5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610792565b8282516020840186f590506001600160a01b03811661177c5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610792565b8151156128205781518083602001fd5b8060405162461bcd60e51b81526004016107929190612ca2565b6001600160e01b031981168114610ef757600080fd5b60006020828403121561286257600080fd5b813561177c8161283a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156128ab576128ab61286d565b604052919050565b60006001600160401b038211156128cc576128cc61286d565b50601f01601f191660200190565b600082601f8301126128eb57600080fd5b81356128fe6128f9826128b3565b612883565b81815284602083860101111561291357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561294357600080fd5b8235915060208301356001600160401b0381111561296057600080fd5b61296c858286016128da565b9150509250929050565b60006001600160401b0382111561298f5761298f61286d565b5060051b60200190565b600082601f8301126129aa57600080fd5b813560206129ba6128f983612976565b82815260059290921b840181019181810190868411156129d957600080fd5b8286015b848110156129f457803583529183019183016129dd565b509695505050505050565b80356001600160a01b0381168114611a7057600080fd5b600082601f830112612a2757600080fd5b81356020612a376128f983612976565b82815260059290921b84018101918181019086841115612a5657600080fd5b8286015b848110156129f45780356001600160401b03811115612a795760008081fd5b612a878986838b01016128da565b845250918301918301612a5a565b60008060008060808587031215612aab57600080fd5b84356001600160401b0380821115612ac257600080fd5b612ace88838901612999565b9550602091508187013581811115612ae557600080fd5b8701601f81018913612af657600080fd5b8035612b046128f982612976565b81815260059190911b8201840190848101908b831115612b2357600080fd5b928501925b82841015612b4857612b39846129ff565b82529285019290850190612b28565b97505050506040870135915080821115612b6157600080fd5b612b6d88838901612999565b93506060870135915080821115612b8357600080fd5b50612b9087828801612a16565b91505092959194509250565b60005b83811015612bb7578181015183820152602001612b9f565b50506000910152565b60008151808452612bd8816020860160208601612b9c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c4157603f19888603018452612c2f858351612bc0565b94509285019290850190600101612c13565b5092979650505050505050565b60008060008060808587031215612c6457600080fd5b84359350612c74602086016129ff565b92506040850135915060608501356001600160401b03811115612c9657600080fd5b612b90878288016128da565b60208152600061177c6020830184612bc0565b600060208284031215612cc757600080fd5b5035919050565b60008060208385031215612ce157600080fd5b82356001600160401b0380821115612cf857600080fd5b818501915085601f830112612d0c57600080fd5b813581811115612d1b57600080fd5b8660208260051b8501011115612d3057600080fd5b60209290920196919550909350505050565b60008060408385031215612d5557600080fd5b82356001600160401b0380821115612d6c57600080fd5b612d7886838701612999565b93506020850135915080821115612d8e57600080fd5b5061296c85828601612a16565b600060208284031215612dad57600080fd5b81356001600160401b03811115612dc357600080fd5b610b8084828501612999565b600060208284031215612de157600080fd5b61177c826129ff565b805160208201516001600160601b03198082169291906014831015612e195780818460140360031b1b83161693505b505050919050565b60018060a01b03851681528360208201528260408201526080606082015260006121ba6080830184612bc0565b600060208284031215612e6057600080fd5b81516001600160401b03811115612e7657600080fd5b8201601f81018413612e8757600080fd5b8051612e956128f9826128b3565b818152856020838501011115612eaa57600080fd5b612499826020830160208601612b9c565b604081526000612ece6040830185612bc0565b82810360208401526124998185612bc0565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612f1d818460208701612b9c565b9190910192915050565b828152604060208201526000610b806040830184612bc0565b600060208284031215612f5257600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b604081526000612f826040830184612bc0565b828103602093840152600081529190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612fc657600080fd5b8301803591506001600160401b03821115612fe057600080fd5b6020019150368190038213156117c157600080fd5b8183823760009101908152919050565b600181811c9082168061301957607f821691505b60208210810361134757634e487b7160e01b600052602260045260246000fd5b805160208083015191908110156113475760001960209190910360031b1b16919050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b6000602082840312156130cc57600080fd5b815161177c8161283a565b60006bffffffffffffffffffffffff19808960601b168352808860601b166014840152808760601b1660288401525084603c8301528284605c8401375060009101605c0190815295945050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561084857610848613127565b601f821115610ef457600081815260208120601f850160051c810160208610156131775750805b601f850160051c820191505b8181101561319657828155600101613183565b505050505050565b81516001600160401b038111156131b7576131b761286d565b6131cb816131c58454613005565b84613150565b602080601f83116001811461320057600084156131e85750858301515b600019600386901b1c1916600185901b178555613196565b600085815260208120601f198616915b8281101561322f57888601518255948401946001909101908401613210565b508582101561324d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208201516001600160e01b03198082169291906004831015612e195760049290920360031b82901b161692915050565b818103818111156108485761084861312756fe9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c29c4705229491d365fb5434052e12a386d6771d976bea61070a8c694e8affea3da26469706673582212205aef3ca820f3692934d2b6cb89557c1af07b17bcf51aa369bb790a151ce30de664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEDFF9C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xEAD3FBDF EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x3DE JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x36D JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x44C028FE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x44C028FE EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x6BB56A14 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI PUSH2 0x146 JUMP JUMPDEST DUP1 PUSH4 0x1BFBA61 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x31858452 EQ PUSH2 0x26B JUMPI PUSH2 0x146 JUMP JUMPDEST CALLDATASIZE PUSH2 0x146 JUMPI CALLVALUE ISZERO PUSH2 0x144 JUMPI PUSH2 0x142 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x410 JUMP JUMPDEST POP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1C2 JUMPI CALLVALUE ISZERO PUSH2 0x1AD JUMPI PUSH2 0x1AB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x1CC DUP4 DUP4 PUSH2 0x69D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x2850 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0xC52 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0xDAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x144 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x2930 JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x134D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302E31342E3 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x42F JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 EQ ISZERO JUMPDEST ISZERO PUSH2 0x488 JUMPI PUSH2 0x486 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH32 0xCFC51AEC37C55A4D0B1A65C6255C4BF2FBDF6277F3CC0730C45B828B6DB8B47 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x14 DUP3 MLOAD LT PUSH2 0x564 JUMPI PUSH1 0x0 PUSH2 0x4CB DUP4 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH2 0x4E1 DUP2 PUSH4 0x5122DDED PUSH1 0xE1 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5122DDED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA245BBDA SWAP1 PUSH2 0x518 SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x55F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x57D PUSH10 0xCFC51AEC37C55A4D0B1 PUSH1 0xB0 SHL DUP8 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58A DUP3 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x14 DUP3 MLOAD LT PUSH2 0x63B JUMPI PUSH1 0x0 PUSH2 0x5A2 DUP4 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP PUSH2 0x5B8 DUP2 PUSH4 0x5122DDED PUSH1 0xE1 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5122DDED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA245BBDA SWAP1 PUSH2 0x5EF SWAP1 CALLER SWAP1 CALLVALUE SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x636 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST DUP4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64E SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP DUP8 CALLVALUE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x68A SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x6B7 PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1670 JUMP JUMPDEST SWAP2 POP SWAP2 POP CALLVALUE PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x722 JUMPI PUSH2 0x720 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x410 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB370B2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x7B4 JUMPI PUSH1 0x0 PUSH2 0x7B6 JUMP JUMPDEST CALLVALUE JUMPDEST DUP9 DUP9 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x7E7 SWAP2 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x829 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x83F JUMPI SWAP4 POP PUSH2 0x848 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB135D3F PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x87F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24871B3D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x89A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1AED5A85 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x8B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x94BE5999 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1A0EB6A5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8DF JUMPI POP PUSH2 0x8DF DUP3 PUSH2 0x1720 JUMP JUMPDEST DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x93D SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x9D0 JUMPI POP DUP2 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0x9F7 JUMPI POP DUP2 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x9F5 SWAP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP6 ADD PUSH2 0x2F40 JUMP JUMPDEST EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xA0C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xA15 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA2D DUP7 DUP7 PUSH2 0x1783 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA46 PUSH2 0x2F59 JUMP JUMPDEST EQ PUSH2 0xA5F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 POP PUSH2 0x848 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA86 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xA8F JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP4 POP POP POP POP PUSH2 0x848 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xAFE SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xB2F JUMPI PUSH2 0xB27 DUP7 DUP7 DUP7 DUP7 PUSH2 0x17C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3A DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP9 DUP9 DUP9 DUP9 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1A75 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 CALLVALUE ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xBE6 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xC0F JUMPI PUSH2 0xB27 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1A DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2A DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B92 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x848 DUP3 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6C PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC8A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xCC3 JUMPI PUSH2 0xCC3 PUSH2 0x2F99 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x2FAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE3 SWAP3 SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD85 JUMPI DUP1 MLOAD ISZERO PUSH2 0xD3D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C5350303A20626174636843616C6C7320726576657274656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD98 JUMPI PUSH2 0xD98 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xE50 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDD5 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xE4C SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE71 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7B PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xED5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xED5 SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD PUSH2 0xE2B JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5758DD07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 CALLER DUP3 EQ PUSH2 0xF70 JUMPI PUSH2 0xF4B DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH2 0xF56 DUP3 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xF78 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFE0 SWAP1 PUSH32 0xA4E59C931D14F7C8A7A35027F92EE40B5F2886B9FDCDB78F30BC5ECCE5A2F814 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1048 SWAP1 PUSH32 0xCECA317F109C43507871523E82DC2A3CC64DFA18F12DA0B6DB14F6E23F995538 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x1D90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x10C3 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x10EA JUMPI PUSH2 0xEF4 DUP4 DUP4 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F5 DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH2 0x1101 DUP5 DUP5 PUSH2 0x1EDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 CALLDATALOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32C4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 CALLVALUE SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x32A4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1182 SWAP2 PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1233 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x122B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1204 JUMPI PUSH2 0x1204 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x121E JUMPI PUSH2 0x121E PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP3 PUSH2 0x1925 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1283 JUMPI PUSH2 0x127B DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1261 JUMPI PUSH2 0x1261 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x121E JUMPI PUSH2 0x121E PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1243 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1322 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI PUSH2 0x1315 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14F9 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1334 JUMPI PUSH2 0x1334 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x12F7 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1419 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x137D DUP3 PUSH2 0x1F34 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1408 SWAP1 PUSH32 0xE17117C9D2665D1DBEB479ED8058BBEBDE3C50AC50E2E65619F60006CAAC6926 SWAP1 PUSH1 0x60 ADD PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP3 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE SWAP1 POP PUSH2 0x1442 DUP4 PUSH2 0x1F34 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x14CD SWAP1 PUSH32 0xE17117C9D2665D1DBEB479ED8058BBEBDE3C50AC50E2E65619F60006CAAC6926 SWAP1 PUSH1 0x60 ADD PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1516 SWAP1 PUSH2 0x3005 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1542 SWAP1 PUSH2 0x3005 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x158F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1564 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x158F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1572 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x160D JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1619 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP5 AND PUSH1 0x2C DUP4 ADD MSTORE SWAP2 DUP3 SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0xB80 SWAP1 PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x1695 PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A2 DUP3 PUSH2 0x14F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD LT ISZERO PUSH2 0x16BB JUMPI POP PUSH1 0x0 SWAP5 DUP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x15 SUB PUSH2 0x1708 JUMPI DUP1 PUSH1 0x14 DUP2 MLOAD DUP2 LT PUSH2 0x16D7 JUMPI PUSH2 0x16D7 PUSH2 0x2F99 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH2 0x1708 JUMPI PUSH2 0x16F9 DUP2 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP6 PUSH1 0x1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1711 DUP2 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x60 SHR SWAP6 PUSH1 0x0 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA918FA6B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1758 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x1670 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1772 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 DUP5 PUSH2 0x159B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x17B9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x17AD DUP8 DUP3 DUP6 DUP6 PUSH2 0x1FA9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x17C1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD DUP6 MLOAD EQ ISZERO DUP1 PUSH2 0x17E9 JUMPI POP DUP3 MLOAD DUP5 MLOAD EQ ISZERO DUP1 PUSH2 0x17E9 JUMPI POP DUP2 MLOAD DUP4 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3FF55F4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x0 SUB PUSH2 0x1829 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9AD2B5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1844 PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1877 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1862 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x191B JUMPI PUSH2 0x18F6 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x189B JUMPI PUSH2 0x189B PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18B5 JUMPI PUSH2 0x18B5 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18CF JUMPI PUSH2 0x18CF PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x18E9 JUMPI PUSH2 0x18E9 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1B92 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1908 JUMPI PUSH2 0x1908 PUSH2 0x2F99 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x187D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD PUSH4 0xC392301 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x37A4A3C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xDE928F14 SWAP1 PUSH2 0x1994 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP3 SWAP1 CALLVALUE SWAP1 PUSH1 0x0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x305D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19CF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19CC SWAP2 DUP2 ADD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A0E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x19FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x1347 PUSH1 0x0 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND PUSH3 0xDE928F PUSH1 0xE8 SHL EQ PUSH2 0x1A51 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D6741E3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 PUSH1 0x3 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD3FC45D3 CALLER ADDRESS CALLER CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AA0 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B4E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0xEF4 PUSH1 0x1 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xD3FC45D3 PUSH1 0xE0 SHL EQ PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D6741E3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0x1BAB JUMPI PUSH2 0x1BA4 DUP5 DUP5 DUP5 PUSH2 0x209A JUMP JUMPDEST SWAP1 POP PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 DUP6 SUB PUSH2 0x1BE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1820C125 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP4 DUP4 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x2 DUP6 SUB PUSH2 0x1C1F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1C15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1820C125 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP4 DUP4 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x3 DUP6 SUB PUSH2 0x1C50 JUMPI DUP3 ISZERO PUSH2 0x1C46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39795E35 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP5 DUP4 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x4 DUP6 SUB PUSH2 0x1C81 JUMPI DUP3 ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5AC83135 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA4 DUP5 DUP4 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D60ECEF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x2 SLOAD NUMBER SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1CB1 SWAP1 PUSH1 0xC8 SWAP1 PUSH2 0x313D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CC0 PUSH1 0xC8 DUP4 PUSH2 0x313D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT DUP1 PUSH2 0x1CD0 JUMPI POP PUSH1 0x2 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1D18 JUMPI PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x81B7F830F1F0084DB6497C486CBE6974C86488DCC4E3738EAB94AB6D6B1653E7 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8404A1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1D4D PUSH1 0x0 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD1F66C3D2BC1993A86BE5E3D33709D98F0442381BEFCEDD29F578B9B2506B1CE SWAP2 SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1DAA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH4 0x1AED5A85 PUSH1 0xE2 SHL PUSH2 0x159B JUMP JUMPDEST ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6BB56A14 SWAP1 PUSH2 0x1DDD SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1120 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8A3C8A5 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x1EC8 CALLER PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1EF7 DUP3 DUP3 PUSH2 0x319E JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1F28 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C0A54DF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH2 0x848 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1FE0 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x205D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x207D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8C6A8AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF351F PUSH1 0xE3 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x20CF DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E DUP7 PUSH1 0x40 MLOAD PUSH2 0x2116 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x213A SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x217C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21BA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH22 0x22A9219B991AAC1D102AB735B737BBB71022B93937B9 PUSH1 0x51 SHL DUP2 MSTORE POP PUSH2 0x2588 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x21F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF351F PUSH1 0xE3 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB81CD8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2245 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07489B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH32 0xA1FB700AAEE2AE4A2FF6F91CE7EBA292F89C2F5488B8EC4C5C5C8150692595C3 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2286 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x22E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB81CD8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP4 PUSH1 0x20 DUP6 MLOAD PUSH2 0x22F8 SWAP2 SWAP1 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x25A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x231A DUP5 PUSH1 0x0 PUSH1 0x20 DUP8 MLOAD PUSH2 0x2315 SWAP2 SWAP1 PUSH2 0x3290 JUMP JUMPDEST PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2329 DUP7 DUP5 DUP5 PUSH2 0x270C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH32 0xA1FB700AAEE2AE4A2FF6F91CE7EBA292F89C2F5488B8EC4C5C5C8150692595C3 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23B0 DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x23F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x241B SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2499 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH22 0x22A9219B991AAC1D102AB735B737BBB71022B93937B9 PUSH1 0x51 SHL DUP2 MSTORE POP PUSH2 0x2588 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x24AD DUP3 PUSH2 0x325D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 PUSH32 0x4810874456B8E6487BD861375CF6ABD8E1C8BB5858C8CE36A86A04DABFAC199E PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x24F5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2518 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x245B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1D516B2B PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x848 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x848 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2597 JUMPI POP DUP2 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x177C DUP4 DUP4 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25AE DUP3 PUSH1 0x20 PUSH2 0x313D JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x25F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x746F427974657333325F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x260D DUP2 PUSH1 0x1F PUSH2 0x313D JUMP JUMPDEST LT ISZERO PUSH2 0x264C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST PUSH2 0x2656 DUP3 DUP5 PUSH2 0x313D JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x269A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x26B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2703 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x26F2 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x26DA JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SELFBALANCE LT ISZERO PUSH2 0x275E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x27AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x177C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x792 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2820 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x177C DUP2 PUSH2 0x283A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28AB JUMPI PUSH2 0x28AB PUSH2 0x286D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x28CC JUMPI PUSH2 0x28CC PUSH2 0x286D JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28FE PUSH2 0x28F9 DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH2 0x2883 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x298F JUMPI PUSH2 0x298F PUSH2 0x286D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x29BA PUSH2 0x28F9 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x29D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x29F4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x29DD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2A37 PUSH2 0x28F9 DUP4 PUSH2 0x2976 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x29F4 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A79 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2A87 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x28DA JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2AC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ACE DUP9 DUP4 DUP10 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x2AF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2B04 PUSH2 0x28F9 DUP3 PUSH2 0x2976 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x2B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2B48 JUMPI PUSH2 0x2B39 DUP5 PUSH2 0x29FF JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2B28 JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B6D DUP9 DUP4 DUP10 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B90 DUP8 DUP3 DUP9 ADD PUSH2 0x2A16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2BD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C41 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2C2F DUP6 DUP4 MLOAD PUSH2 0x2BC0 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2C13 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2C74 PUSH1 0x20 DUP7 ADD PUSH2 0x29FF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B90 DUP8 DUP3 DUP9 ADD PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x177C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2D30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2D6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D78 DUP7 DUP4 DUP8 ADD PUSH2 0x2999 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296C DUP6 DUP3 DUP7 ADD PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177C DUP3 PUSH2 0x29FF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x14 DUP4 LT ISZERO PUSH2 0x2E19 JUMPI DUP1 DUP2 DUP5 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x21BA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x2E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2E95 PUSH2 0x28F9 DUP3 PUSH2 0x28B3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2499 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B9C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2ECE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BC0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2499 DUP2 DUP6 PUSH2 0x2BC0 JUMP JUMPDEST DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F1D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2B9C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xB80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2BC0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x0 DUP2 MSTORE SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3019 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x177C DUP2 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP10 PUSH1 0x60 SHL AND DUP4 MSTORE DUP1 DUP9 PUSH1 0x60 SHL AND PUSH1 0x14 DUP5 ADD MSTORE DUP1 DUP8 PUSH1 0x60 SHL AND PUSH1 0x28 DUP5 ADD MSTORE POP DUP5 PUSH1 0x3C DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x5C DUP5 ADD CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD PUSH1 0x5C ADD SWAP1 DUP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x848 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEF4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3177 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3196 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3183 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31B7 JUMPI PUSH2 0x31B7 PUSH2 0x286D JUMP JUMPDEST PUSH2 0x31CB DUP2 PUSH2 0x31C5 DUP5 SLOAD PUSH2 0x3005 JUMP JUMPDEST DUP5 PUSH2 0x3150 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3200 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x31E8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x322F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3210 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x324D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x2E19 JUMPI PUSH1 0x4 SWAP3 SWAP1 SWAP3 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x848 PUSH2 0x3127 JUMP INVALID SWAP13 EXTCODESIZE 0xA6 DUP15 0xB5 PUSH21 0x2B8E3961AEA0AFC7371A71BF433C8A67A831803B64 0xC0 PUSH5 0xA178C29C47 SDIV 0x22 SWAP5 SWAP2 0xD3 PUSH6 0xFB5434052E12 LOG3 DUP7 0xD6 PUSH24 0x1D976BEA61070A8C694E8AFFEA3DA2646970667358221220 GAS 0xEF EXTCODECOPY 0xA8 KECCAK256 RETURN PUSH10 0x2934D2B6CB89557C1AF0 PUSH28 0x17BCF51AA369BB790A151CE30DE664736F6C63430008130033000000 ","sourceMap":"1373:1014:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3473:9:9;:14;3469:95;;3503:50;-1:-1:-1;;;;;;;;;;;3521:27:9;;3503:50;;;;;;;;;;;;:17;:50::i;:::-;;3469:95;1373:1014:37;;;;5870:12:9;5916:1;5898:19;;5894:270;;;6026:9;:14;6022:109;;6060:56;-1:-1:-1;;;;;;;;;;;6078:27:9;;6107:8;;6060:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6060:17:9;;-1:-1:-1;;;6060:56:9:i;:::-;;6022:109;-1:-1:-1;6144:9:9;;;;;;;;;-1:-1:-1;6144:9:9;;;;5894:270;6181:34;6206:8;;6181:24;:34::i;:::-;6174:41;;5788:434;;;;1373:1014:37;;;;;;1861:68:13;;;;;;;;;;;;1926:3;1861:68;;;;;160:25:39;;;148:2;133:18;1861:68:13;;;;;;;;28124:607:9;;;;;;;;;;-1:-1:-1;28124:607:9;;;;;:::i;:::-;;:::i;:::-;;;747:14:39;;740:22;722:41;;710:2;695:18;28124:607:9;582:187:39;30555:1637:9;;;;;;;;;;-1:-1:-1;30555:1637:9;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2399:33:39;;;2381:52;;2369:2;2354:18;30555:1637:9;2237:202:39;10868:1544:9;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8361:1367::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1197:156:1:-;;;;;;;;;;-1:-1:-1;1197:156:1;;;;;:::i;:::-;;:::i;6400:1074:9:-;;;;;;;;;;-1:-1:-1;6400:1074:9;;;;;:::i;:::-;;:::i;18145:2631::-;;;;;;:::i;:::-;;:::i;25761:1558::-;;;;;;;;;;;;;:::i;23731:1505::-;;;;;;;;;;;;;:::i;12743:1103::-;;;;;;:::i;:::-;;:::i;736:85:3:-;;;;;;;;;;-1:-1:-1;782:7:3;808:6;-1:-1:-1;;;;;808:6:3;736:85;;;-1:-1:-1;;;;;9050:32:39;;;9032:51;;9020:2;9005:18;736:85:3;8886:203:39;14213:1641:9;;;;;;:::i;:::-;;:::i;1403:458:1:-;;;;;;;;;;-1:-1:-1;1403:458:1;;;;;:::i;:::-;;:::i;2758:108:13:-;;;;;;;;;;-1:-1:-1;2846:13:13;;-1:-1:-1;;;;;2846:13:13;2758:108;;21214:2062:9;;;;;;;;;;-1:-1:-1;21214:2062:9;;;;;:::i;:::-;;:::i;408:41:26:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:41:26;;;;;18145:2631:9;18278:27;18321:9;:14;;;;:57;;-1:-1:-1;;;;;;;;;;;;18340:37:9;;;18321:57;18317:144;;;18394:56;-1:-1:-1;;;;;;;;;;;18412:27:9;;18441:8;;18394:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18394:17:9;;-1:-1:-1;;;18394:56:9:i;:::-;;18317:144;18566:30;18599:69;467:66:19;18599:8:9;:69::i;:::-;18566:102;;18678:34;18755:2;18727:17;:24;:30;18723:623;;18773:20;18804:26;18812:17;18804:26;:::i;:::-;18796:35;;;-1:-1:-1;18916:111:9;18796:35;-1:-1:-1;;;18916:45:9;:111::i;:::-;18895:441;;;19084:237;;-1:-1:-1;;;19084:237:9;;-1:-1:-1;;;;;19084:74:9;;;;;:237;;19184:10;;19220:9;;19255:6;;19287:12;;19084:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19084:237:9;;;;;;;;;;;;:::i;:::-;19060:261;;18895:441;18759:587;18723:623;19451:29;19483:121;-1:-1:-1;;;19587:6:9;19483:28;:121::i;:::-;19451:153;;19732:36;19771:31;19780:21;19771:8;:31::i;:::-;19732:70;;19812:33;19894:2;19860:23;:30;:36;19856:634;;19912:20;19943:32;19951:23;19943:32;:::i;:::-;19935:41;;;-1:-1:-1;20061:111:9;19935:41;-1:-1:-1;;;20061:45:9;:111::i;:::-;20040:440;;;20228:237;;-1:-1:-1;;;20228:237:9;;-1:-1:-1;;;;;20228:74:9;;;;;:237;;20328:10;;20364:9;;20399:6;;20431:12;;20228:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20228:237:9;;;;;;;;;;;;:::i;:::-;20205:260;;20040:440;19898:592;19856:634;20541:21;20576:20;20517:89;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20500:106;;20699:6;20676:9;20652:10;-1:-1:-1;;;;;20621:148:9;-1:-1:-1;;;;;;;;;;;20719:12:9;20745:14;20621:148;;;;;;;:::i;:::-;;;;;;;;18307:2469;;;;;18145:2631;;;;:::o;33283:1452::-;33391:12;33472:17;33503:22;33538:37;33567:7;;-1:-1:-1;;;;;;33567:7:9;33538:28;:37::i;:::-;33458:117;;;;33722:9;33735:1;33722:14;;:36;;;;;33741:17;33740:18;33722:36;33718:123;;;33774:56;-1:-1:-1;;;;;;;;;;;33792:27:9;;33821:8;;33774:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33774:17:9;;-1:-1:-1;;;33774:56:9:i;:::-;;33718:123;33944:1;33926:7;-1:-1:-1;;;;;;33926:7:9;:20;:47;;;;-1:-1:-1;;;;;;33950:23:9;;;33926:47;33922:62;;;33975:9;;;;;;;;;;;;;;;;;;33922:62;-1:-1:-1;;;;;34073:23:9;;34069:92;;34117:44;;-1:-1:-1;;;34117:44:9;;-1:-1:-1;;;;;;34153:7:9;;;34117:44;;;2381:52:39;2354:18;;34117:44:9;;;;;;;;34069:92;34173:12;34187:19;34210:9;-1:-1:-1;;;;;34210:14:9;34245:17;:33;;34277:1;34245:33;;;34265:9;34245:33;34306:8;;34316:10;34328:9;34289:49;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;34289:49:9;;;;;;;;;;34210:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34172:167;;;;34354:7;34350:379;;;34384:6;-1:-1:-1;34377:13:9;;-1:-1:-1;;;34377:13:9;34350:379;34641:6;34635:13;34689:15;34684:2;34676:6;34672:15;34665:40;33283:1452;;;;;:::o;28124:607::-;28306:4;-1:-1:-1;;;;;;28345:35:9;;-1:-1:-1;;;28345:35:9;;:83;;-1:-1:-1;;;;;;;28396:32:9;;-1:-1:-1;;;28396:32:9;28345:83;:131;;;-1:-1:-1;;;;;;;28444:32:9;;-1:-1:-1;;;28444:32:9;28345:131;:180;;;-1:-1:-1;;;;;;;28492:33:9;;-1:-1:-1;;;28492:33:9;28345:180;:247;;;-1:-1:-1;;;;;;;28541:51:9;;-1:-1:-1;;;28541:51:9;28345:247;:299;;;;28608:36;28632:11;28608:23;:36::i;:::-;28345:379;;;;28660:64;28712:11;28660:51;:64::i;30555:1637::-;30683:21;30716:14;30733:7;782::3;808:6;-1:-1:-1;;;;;808:6:3;;736:85;30733:7:9;30716:24;-1:-1:-1;;;;;;30789:18:9;;;:23;30785:1401;;30829:12;30843:19;30866:6;-1:-1:-1;;;;;30866:17:9;30945:34;;;31001:8;31031:9;30901:157;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;30901:157:9;;;;;;;;;;;;;;-1:-1:-1;;;;;30901:157:9;-1:-1:-1;;;;;;30901:157:9;;;;;;;;;;30866:206;;;;30901:157;30866:206;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30828:244;;;;31087:12;31103:7;:46;;;;;31130:6;:13;31147:2;31130:19;31103:46;:145;;;;-1:-1:-1;31169:29:9;;-1:-1:-1;;;31226:21:9;31169:29;;;;;;;;;;;;:::i;:::-;:79;31103:145;31087:162;;31271:7;:52;;-1:-1:-1;;;;;;31271:52:9;;;-1:-1:-1;;;31271:52:9;31264:59;;;;;;;;30785:1401;31472:24;31498:32;31534:54;31568:8;31578:9;31534:33;:54::i;:::-;31471:117;;-1:-1:-1;31471:117:9;-1:-1:-1;31692:26:9;31675:13;:43;;;;;;;;:::i;:::-;;31671:90;;-1:-1:-1;;;;;;;31743:18:9;-1:-1:-1;31736:25:9;;-1:-1:-1;;31736:25:9;31671:90;32084:6;-1:-1:-1;;;;;32064:26:9;:16;-1:-1:-1;;;;;32064:26:9;;:111;;-1:-1:-1;;;;;;32064:111:9;;;-1:-1:-1;;;32064:111:9;32041:134;;;;;;;30785:1401;30706:1486;30555:1637;;;;:::o;10868:1544::-;11075:14;11105:9;:14;11101:244;;11275:25;;-1:-1:-1;;;;;;11230:27:9;11292:7;;11275:25;;;13808:46:39;-1:-1:-1;;;;;;;;;;;447:66:8;11203:9:9;;11175:10;;-1:-1:-1;;;;;;;;;;;11140:194:9;13870:11:39;;11275:25:9;;;-1:-1:-1;;11275:25:9;;;;;;;;;;11140:194;;;:::i;:::-;;;;;;;;11101:244;11355:20;808:6:3;-1:-1:-1;;;;;808:6:3;11463:10:9;:26;;;11459:243;;11528:163;11575:14;11611:7;11640:6;11668:5;11528:25;:163::i;:::-;11505:186;;;;;11459:243;11873:16;11892:47;11926:12;11892:33;:47::i;:::-;11873:66;;11983:22;12008:123;12047:14;12075:7;12096:6;12116:5;12008:25;:123::i;:::-;11983:148;;12223:11;12219:162;;;12250:120;12307:12;12348:7;12337:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;12250:39;:120::i;:::-;12398:7;-1:-1:-1;;;10868:1544:9;;;;;;;:::o;8361:1367::-;8530:12;8558:9;:14;8554:244;;8728:25;;-1:-1:-1;;;;;;8683:27:9;8745:7;;8728:25;;;13808:46:39;-1:-1:-1;;;;;;;;;;;447:66:8;8656:9:9;;8628:10;;-1:-1:-1;;;;;;;;;;;8593:194:9;13870:11:39;;8728:25:9;;;-1:-1:-1;;8728:25:9;;;;;;;;;;8593:194;;;:::i;:::-;;;;;;;;8554:244;8808:20;808:6:3;-1:-1:-1;;;;;808:6:3;8916:10:9;:26;;;8912:120;;8965:56;8986:13;9001:6;9009:5;9016:4;8965:20;:56::i;8912:120::-;9203:16;9222:47;9256:12;9222:33;:47::i;:::-;9203:66;;9313:19;9335:114;9369:13;9396:6;9416:5;9435:4;9335:20;:114::i;:::-;9313:136;;9541:11;9537:161;;;9568:119;9625:12;9666:6;9655:18;;;;;;;;:::i;1197:156:1:-;1283:22;1329:17;1338:7;1329:8;:17::i;6400:1074:9:-;6490:22;6546:4;-1:-1:-1;;;;;6534:24:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:34;;6573:9;6568:900;6584:15;;;6568:900;;;6618:12;;6663:4;6699;;6704:1;6699:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6655:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6617:103;;;;6740:7;6735:629;;6841:13;;:18;6837:513;;7156:6;7150:13;7212:15;7203:6;7199:2;7195:15;7188:40;6837:513;7296:35;;-1:-1:-1;;;7296:35:9;;15473:2:39;7296:35:9;;;15455:21:39;15512:2;15492:18;;;15485:30;15551:27;15531:18;;;15524:55;15596:18;;7296:35:9;15271:349:39;6837:513:9;7391:6;7378:7;7386:1;7378:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;-1:-1:-1;;7440:3:9;;6568:900;;25761:1558;25885:20;808:6:3;-1:-1:-1;;;;;808:6:3;26003:10:9;:26;;;25999:1314;;26045:21;808:6:3;-1:-1:-1;;;;;808:6:3;26090:38:9;:36;:38::i;:::-;26166:1;808:6:3;-1:-1:-1;;;;;808:6:3;26143:247:9;;26321:36;;;-1:-1:-1;;;;;15855:15:39;;26321:36:9;;;15837:34:39;26247:52:9;15887:18:39;;;15880:43;;;;26188:187:9;;851:66:8;;15772:18:39;;26321:36:9;;;;-1:-1:-1;;26321:36:9;;;;;;;;;-1:-1:-1;;;;;26188:37:9;;;:187;:37;:187::i;:::-;26031:369;25875:1444;25761:1558::o;25999:1314::-;26602:16;26621:25;26633:12;26621:11;:25::i;:::-;26602:44;;26661:21;26685:7;782::3;808:6;-1:-1:-1;;;;;808:6:3;;736:85;26685:7:9;26661:31;;26706:38;:36;:38::i;:::-;26782:1;808:6:3;-1:-1:-1;;;;;808:6:3;26759:247:9;;26937:36;;;-1:-1:-1;;;;;15855:15:39;;26937:36:9;;;15837:34:39;26863:52:9;15887:18:39;;;15880:43;;;;26804:187:9;;851:66:8;;15772:18:39;;26937:36:9;15625:304:39;26804:187:9;27222:11;27218:85;;;27253:35;27271:12;27253:35;;;;;;;;;;;;:17;:35::i;:::-;26406:907;;25999:1314;25875:1444;25761:1558::o;23731:1505::-;2472:20:13;;-1:-1:-1;;;2472:20:13;;;;2468:105;;;2515:47;;-1:-1:-1;;;2515:47:13;;;;;;;;;;;2468:105;23815:21:9::1;808:6:3::0;;2846:13:13;;-1:-1:-1;;;;;808:6:3;;;;2846:13:13;;;23942:10:9::1;:33:::0;::::1;23938:484;;24203:32;24215:19;24203:11;:32::i;:::-;24189:46;;24250:30;24260:19;24250:9;:30::i;:::-;24301:13;24294:20:::0;;-1:-1:-1;;;;;;24294:20:9::1;::::0;;24301:13:::1;24335:27;24328:34:::0;23938:484:::1;;;24393:18;:16;:18::i;:::-;24603:46;::::0;;-1:-1:-1;;;;;15855:15:39;;;24603:46:9::1;::::0;::::1;15837:34:39::0;15907:15;;15887:18;;;15880:43;;;;24486:173:9::1;::::0;851:66:8::1;::::0;15772:18:39;;24603:46:9::1;;::::0;;-1:-1:-1;;24603:46:9;;::::1;::::0;;;;;;-1:-1:-1;;;;;24486:37:9;::::1;::::0;:173;:37:::1;:173::i;:::-;24849:46;::::0;;-1:-1:-1;;;;;15855:15:39;;;24849:46:9::1;::::0;::::1;15837:34:39::0;15907:15;;15887:18;;;15880:43;;;;24723:182:9::1;::::0;1058:66:8::1;::::0;15772:18:39;;24849:46:9::1;;::::0;;-1:-1:-1;;24849:46:9;;::::1;::::0;;;;;;-1:-1:-1;;;;;24723:43:9;::::1;::::0;:182;:43:::1;:182::i;:::-;25150:11;25146:84;;;25177:42;25195:19;25177:42;;;;;;;;;;;::::0;:17:::1;:42::i;12743:1103::-:0;12869:9;:14;12865:244;;13039:25;;-1:-1:-1;;;;;;12994:27:9;13056:7;;13039:25;;;13808:46:39;-1:-1:-1;;;;;;;;;;;447:66:8;12967:9:9;;12939:10;;-1:-1:-1;;;;;;;;;;;12904:194:9;13870:11:39;;13039:25:9;;;-1:-1:-1;;13039:25:9;;;;;;;;;;12904:194;;;:::i;:::-;;;;;;;;12865:244;13119:20;808:6:3;-1:-1:-1;;;;;808:6:3;13227:10:9;:26;;;13223:92;;13276:28;13285:7;13294:9;13276:8;:28::i;13223:92::-;13489:16;13508:25;13520:12;13508:11;:25::i;:::-;13489:44;;13544:28;13553:7;13562:9;13544:8;:28::i;:::-;13767:11;13763:77;;;13794:35;13812:12;13794:35;;;;;;;;;;;;:17;:35::i;:::-;12855:991;;12743:1103;;:::o;14213:1641::-;14357:9;:14;14353:244;;14527:25;;-1:-1:-1;;;;;;14482:27:9;14544:7;;14527:25;;;13808:46:39;-1:-1:-1;;;;;;;;;;;447:66:8;14455:9:9;;14427:10;;-1:-1:-1;;;;;;;;;;;14392:194:9;13870:11:39;;14527:25:9;;;-1:-1:-1;;14527:25:9;;;;;;;;;;14392:194;;;:::i;:::-;;;;;;;;14353:244;14630:10;:17;14611:8;:15;:36;14607:112;;14670:38;;-1:-1:-1;;;14670:38:9;;;;;;;;;;;14607:112;14733:8;:15;14752:1;14733:20;14729:92;;14776:34;;-1:-1:-1;;;14776:34:9;;;;;;;;;;;14729:92;14831:20;808:6:3;-1:-1:-1;;;;;808:6:3;14939:10:9;:26;;;14935:257;;14986:9;14981:180;15001:8;:15;14997:1;:19;14981:180;;;15038:36;15047:8;15056:1;15047:11;;;;;;;;:::i;:::-;;;;;;;15060:10;15071:1;15060:13;;;;;;;;:::i;:::-;;;;;;;15038:8;:36::i;:::-;15125:3;;14981:180;;14935:257;15366:16;15385:25;15397:12;15385:11;:25::i;:::-;15366:44;;15426:9;15421:160;15441:8;:15;15437:1;:19;15421:160;;;15474:36;15483:8;15492:1;15483:11;;;;;;;;:::i;:::-;;;;;;;15496:10;15507:1;15496:13;;;;;;;;:::i;15474:36::-;15553:3;;15421:160;;;;15775:11;15771:77;;;15802:35;15820:12;15802:35;;;;;;;;;;;;:17;:35::i;1403:458:1:-;1504:25;1566:8;:15;-1:-1:-1;;;;;1554:28:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:41;;1598:9;1593:234;1617:8;:15;1613:1;:19;1593:234;;;1666:21;1675:8;1684:1;1675:11;;;;;;;;:::i;:::-;;;;;;;1666:8;:21::i;:::-;1650:10;1661:1;1650:13;;;;;;;;:::i;:::-;;;;;;;;;;:37;1799:3;;1593:234;;;;1403:458;;;:::o;21214:2062:9:-;21347:20;808:6:3;-1:-1:-1;;;;;808:6:3;21465:10:9;:26;;;21461:1809;;21554:20;:27;;-1:-1:-1;;;;21554:27:9;-1:-1:-1;;;21554:27:9;;;21633:53;21670:15;21633:36;:53::i;:::-;21744:15;-1:-1:-1;;;;;21705:55:9;21730:12;-1:-1:-1;;;;;21705:55:9;;;;;;;;;;;21940:41;;;-1:-1:-1;;;;;15855:15:39;;;21940:41:9;;;15837:34:39;15907:15;;15887:18;;;15880:43;;;;21828:167:9;;650:66:8;;15772:18:39;;21940:41:9;15625:304:39;21828:167:9;22059:20;:28;;-1:-1:-1;;;;22059:28:9;;;21337:1939;21214:2062;:::o;21461:1809::-;22300:16;22319:25;22331:12;22319:11;:25::i;:::-;22406:20;:27;;-1:-1:-1;;;;22406:27:9;-1:-1:-1;;;22406:27:9;;;22300:44;-1:-1:-1;22508:53:9;22545:15;22508:36;:53::i;:::-;22619:15;-1:-1:-1;;;;;22580:55:9;22605:12;-1:-1:-1;;;;;22580:55:9;;;;;;;;;;;22815:41;;;-1:-1:-1;;;;;15855:15:39;;;22815:41:9;;;15837:34:39;15907:15;;15887:18;;;15880:43;;;;22703:167:9;;650:66:8;;15772:18:39;;22815:41:9;15625:304:39;22703:167:9;22934:20;:28;;-1:-1:-1;;;;22934:28:9;;;23175:85;;;;23210:35;23228:12;23210:35;;;;;;;;;;;;:17;:35::i;4335:143:1:-;4456:15;;;;:6;:15;;;;;4449:22;;4415;;4456:15;4449:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:143;;;:::o;4421:647:33:-;4592:71;;;-1:-1:-1;;;;;;2399:33:39;;4592:71:33;;;;2381:52:39;;;;4592:71:33;;;;;;;;;;2354:18:39;;;;4592:71:33;;;;;;;;;-1:-1:-1;;;;;4592:71:33;-1:-1:-1;;;4592:71:33;;;4871:20;;4523:4;;4592:71;4523:4;;;;;;4592:71;4523:4;;4871:20;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;4421:647;-1:-1:-1;;;;;;;4421:647:33:o;5197:300:25:-;5358:94;;;-1:-1:-1;;;;;;16514:45:39;;5358:94:25;;;16502:58:39;5311:7:25;16576:12:39;;;16569:50;;;-1:-1:-1;;;;;;16649:44:39;;16635:12;;;16628:66;5311:7:25;;;16710:12:39;5358:94:25;;;;;;;;;;;;5330:122;;5477:12;5469:21;;;:::i;35158:1381:9:-;35275:7;;;35413:105;-1:-1:-1;;;;;;;;;35413:105:9;;:28;:105::i;:::-;35380:138;;35529:26;35558:66;35592:22;35558:20;:66::i;:::-;35529:95;;35824:2;35801:13;:20;:25;35797:82;;;-1:-1:-1;35858:1:9;;;;-1:-1:-1;35158:1381:9;-1:-1:-1;;;35158:1381:9:o;35797:82::-;36110:13;:20;36134:2;36110:26;36106:369;;36304:13;36318:2;36304:17;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;36304:17:9;-1:-1:-1;;;36304:25:9;36300:165;;36420:22;36428:13;36420:22;:::i;:::-;36412:31;;;36445:4;;-1:-1:-1;35158:1381:9;-1:-1:-1;;;;35158:1381:9:o;36300:165::-;36501:22;36509:13;36501:22;:::i;:::-;36493:31;;;36526:5;;-1:-1:-1;35158:1381:9;-1:-1:-1;;;;35158:1381:9:o;998:237:16:-;1097:4;-1:-1:-1;;;;;;1132:44:16;;-1:-1:-1;;;1132:44:16;;:96;;;1192:36;1216:11;1192:23;:36::i;1658:457::-;1768:4;;1814:85;-1:-1:-1;;;1814:28:16;:85::i;:::-;-1:-1:-1;1784:115:16;-1:-1:-1;;;;;;1913:29:16;;1909:47;;-1:-1:-1;1951:5:16;;1658:457;-1:-1:-1;;1658:457:16:o;1909:47::-;1986:122;2050:15;2083:11;1986:46;:122::i;:::-;1967:141;1658:457;-1:-1:-1;;;1658:457:16:o;2145:730:31:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:31;;-1:-1:-1;2822:35:31;2259:610;2145:730;;;;;:::o;6454:1014:0:-;6647:14;6715:7;:14;6690;:21;:39;;:121;;;;6764:6;:13;6746:7;:14;:31;;:64;;;;6798:5;:12;6781:6;:13;:29;;6746:64;6673:222;;;6843:41;;-1:-1:-1;;;6843:41:0;;;;;;;;;;;6673:222;6909:14;:21;6934:1;6909:26;6905:101;;6958:37;;-1:-1:-1;;;6958:37:0;;;;;;;;;;;6905:101;7016:21;7052:14;:21;-1:-1:-1;;;;;7040:34:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7016:58;;7090:9;7085:353;7109:14;:21;7105:1;:25;7085:353;;;7160:138;7186:14;7201:1;7186:17;;;;;;;;:::i;:::-;;;;;;;7221:7;7229:1;7221:10;;;;;;;;:::i;:::-;;;;;;;7249:6;7256:1;7249:9;;;;;;;;:::i;:::-;;;;;;;7276:5;7282:1;7276:8;;;;;;;;:::i;:::-;;;;;;;7160;:138::i;:::-;7148:6;7155:1;7148:9;;;;;;;;:::i;:::-;;;;;;;;;;:150;7410:3;;7085:353;;;-1:-1:-1;7455:6:0;6454:1014;-1:-1:-1;;;;;6454:1014:0:o;1293:1034:22:-;1377:16;1409:13;-1:-1:-1;;;;;1409:25:22;;1438:1;1409:30;1405:107;;1462:39;;-1:-1:-1;;;1462:39:22;;-1:-1:-1;;;;;9050:32:39;;1462:39:22;;;9032:51:39;9005:18;;1462:39:22;8886:203:39;1405:107:22;1622:191;;-1:-1:-1;;;1622:191:22;;-1:-1:-1;;;;;1622:37:22;;;;;:191;;1677:10;;1713:4;;1677:10;;1764:9;;1791:8;;;;1622:191;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1622:191:22;;;;;;;;-1:-1:-1;;1622:191:22;;;;;;;;;;;;:::i;:::-;;;1606:715;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:46;2293:5;2300:9;2264:28;:46::i;1606:715::-;-1:-1:-1;;;;;;1889:81:22;;-1:-1:-1;;;1889:81:22;1868:293;;2010:136;;-1:-1:-1;;;2010:136:22;;2070:5;2010:136;;;18203:41:39;-1:-1:-1;;;;;;18280:33:39;;18260:18;;;18253:61;18176:18;;2010:136:22;18037:283:39;1868:293:22;2182:14;2197:1;2182:17;;;-1:-1:-1;;;;;2182:25:22;;2203:4;2182:25;;;2175:32;;;1293:1034;;;:::o;1606:715::-;1293:1034;;;:::o;2863:1024::-;3094:13;-1:-1:-1;;;;;3087:43:22;;3221:10;3265:4;3296:10;3332:9;3367:8;;3179:218;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3148:267;;;;;;3433:10;3087:370;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3087:370:22;;;;;;;;-1:-1:-1;;3087:370:22;;;;;;;;;;;;:::i;:::-;;;3071:810;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3825:45;3854:4;3860:9;3825:28;:45::i;3071:810::-;-1:-1:-1;;;;;;3516:55:22;;-1:-1:-1;;;3516:55:22;3512:236;;3598:135;;-1:-1:-1;;;3598:135:22;;3658:4;3598:135;;;18203:41:39;-1:-1:-1;;;;;;18280:33:39;;18260:18;;;18253:61;18176:18;;3598:135:22;18037:283:39;4318:1955:0;4473:12;4517:13;4513:104;;4573:33;4586:6;4594:5;4601:4;4573:12;:33::i;:::-;4566:40;;;;4513:104;295:1:2;4661:13:0;:35;4657:232;;-1:-1:-1;;;;;4716:20:0;;;4712:120;;4763:54;;-1:-1:-1;;;4763:54:0;;;;;;;;;;;4712:120;4852:26;4866:5;4873:4;4852:13;:26::i;4657:232::-;337:1:2;4934:13:0;:36;4930:234;;-1:-1:-1;;;;;4990:20:0;;;4986:120;;5037:54;;-1:-1:-1;;;5037:54:0;;;;;;;;;;;4986:120;5126:27;5141:5;5148:4;5126:14;:27::i;4930:234::-;382:1:2;5200:13:0;:39;5196:218;;5259:10;;5255:96;;5296:40;;-1:-1:-1;;;5296:40:0;;;;;;;;;;;5255:96;5371:32;5390:6;5398:4;5371:18;:32::i;5196:218::-;429:1:2;5986:13:0;:41;5982:224;;6047:10;;6043:98;;6084:42;;-1:-1:-1;;;6084:42:0;;;;;;;;;;;6043:98;6161:34;6182:6;6190:4;6161:20;:34::i;5982:224::-;6223:43;;-1:-1:-1;;;6223:43:0;;;;;160:25:39;;;133:18;;6223:43:0;14:177:39;6207:1212:13;6343:27;;6287:12;;6264:20;;6343:79;;1728:3;;6343:79;:::i;:::-;6309:113;-1:-1:-1;6432:29:13;6464:76;1926:3;6309:113;6464:76;:::i;:::-;6432:108;;6811:21;6796:12;:36;:84;;;-1:-1:-1;6848:27:13;;:32;6796:84;6779:278;;;6905:27;:42;;;6968:13;6961:20;;-1:-1:-1;;;;;;6961:20:13;;;7000:26;;;;6968:13;;7000:26;7040:7;;;6207:1212::o;6779:278::-;7086:23;7071:12;:38;7067:205;;;7132:129;;-1:-1:-1;;;7132:129:13;;;;;19410:25:39;;;19451:18;;;19444:34;;;19383:18;;7132:129:13;19236:248:39;7067:205:13;7282:21;7300:1;7282:9;:21::i;:::-;7313:34;7320:27;7313:34;;;7364:13;7357:20;;-1:-1:-1;;;;;;7357:20:13;;;7392;;;;7313:34;7392:20;6254:1165;;;6207:1212::o;1368:361:20:-;1530:100;-1:-1:-1;;;;;1530:51:20;;-1:-1:-1;;;1530:51:20;:100::i;:::-;1513:210;;;1655:57;;-1:-1:-1;;;1655:57:20;;-1:-1:-1;;;;;1655:43:20;;;;;:57;;1699:6;;1707:4;;1655:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1655:57:20;;;;;;;;;;;;:::i;2133:194:3:-;782:7;808:6;-1:-1:-1;;;;;2201:19:3;;;808:6;;2201:19;2197:124;;2262:6;;;2241:38;;-1:-1:-1;;;;;2241:38:3;;;;2262:6;;;2241:38;;;2293:6;:17;;-1:-1:-1;;;;;2293:17:3;;-1:-1:-1;;;;;;2293:17:3;;;;;;2133:194;:::o;5812:259:13:-;2846:13;;-1:-1:-1;;;;;2846:13:13;5871:10;:28;5867:91;;5920:38;;-1:-1:-1;;;5920:38:13;;5947:10;5920:38;;;9032:51:39;9005:18;;5920:38:13;8886:203:39;5867:91:13;5969:21;5979:10;5969:9;:21::i;:::-;6007:13;6000:20;;-1:-1:-1;;;;;;6000:20:13;;;6007:13;6037:27;6030:34;5812:259::o;5032:188:1:-;5140:15;;;;:6;:15;;;;;:27;5158:9;5140:15;:27;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;5477:245:13:-;5574:4;-1:-1:-1;;;;;5554:25:13;;;5550:86;;5600:36;;-1:-1:-1;;;5600:36:13;;;;;;;;;;;5550:86;5647:13;:24;;-1:-1:-1;;;;;;5647:24:13;-1:-1:-1;;;;;5647:24:13;;;;;;;;;;-1:-1:-1;5688:27:13;5681:34;5477:245::o;5268::1:-;5384:4;-1:-1:-1;;;;;;5419:35:1;;-1:-1:-1;;;5419:35:1;;:87;;;5470:36;5494:11;5470:23;:36::i;5009:1456:31:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:31;;-1:-1:-1;6123:30:31;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;21914:25:39;;;21987:4;21975:17;;21955:18;;;21948:45;;;;22009:18;;;22002:34;;;22052:18;;;22045:34;;;6276:24:31;;21886:19:39;;6276:24:31;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:31;;-1:-1:-1;;6276:24:31;;;-1:-1:-1;;;;;;;6314:20:31;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:31;;-1:-1:-1;5009:1456:31;;;;;;;;:::o;3893:661:22:-;4093:19;;:24;4089:459;;4374:12;4368:19;4434:15;4419:12;4415:2;4411:21;4404:46;4089:459;4501:36;;-1:-1:-1;;;4501:36:22;;747:14:39;;740:22;4501:36:22;;;722:41:39;695:18;;4501:36:22;582:187:39;7758:687:0;7886:19;7945:5;7921:21;:29;7917:124;;;7973:57;;-1:-1:-1;;;7973:57:0;;8001:21;7973:57;;;19410:25:39;19451:18;;;19444:34;;;19383:18;;7973:57:0;19236:248:39;7917:124:0;8098:12;8105:4;8098:12;:::i;:::-;-1:-1:-1;;;;;8056:55:0;;8083:6;-1:-1:-1;;;;;8056:55:0;254:1:2;8056:55:0;8091:5;8056:55;;;;160:25:39;;148:2;133:18;;14:177;8056:55:0;;;;;;;;8182:12;8196:23;8223:6;-1:-1:-1;;;;;8223:11:0;8242:5;8262:4;8223:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8181:95;;;;8305:133;8347:7;8372:10;8305:133;;;;;;;;;;;;;-1:-1:-1;;;8305:133:0;;;:24;:133::i;:::-;8286:152;7758:687;-1:-1:-1;;;;;;7758:687:0:o;10489:965::-;10602:24;10666:5;10642:21;:29;10638:124;;;10694:57;;-1:-1:-1;;;10694:57:0;;10722:21;10694:57;;;19410:25:39;19451:18;;;19444:34;;;19383:18;;10694:57:0;19236:248:39;10638:124:0;10776:12;:19;10799:1;10776:24;10772:98;;10823:36;;-1:-1:-1;;;10823:36:0;;;;;;;;;;;10772:98;10880:23;11105:12;11099:19;11076:4;11062:12;11058:23;11035:5;11011:121;10992:140;-1:-1:-1;;;;;;11156:29:0;;11152:101;;11208:34;;-1:-1:-1;;;11208:34:0;;;;;;;;;;;11152:101;11385:1;11377:10;;11329:15;-1:-1:-1;;;;;11268:129:0;295:1:2;11268:129:0;11358:5;11268:129;;;;160:25:39;;148:2;133:18;;14:177;11268:129:0;;;;;;;;11414:33;;-1:-1:-1;;;;;;22605:2:39;22601:15;;;22597:53;11414:33:0;;;22585:66:39;22667:12;;11414:33:0;;;;;;;;;;;;11407:40;;;10489:965;;;;:::o;11820:714::-;11934:24;11974:12;:19;11997:1;11974:24;11970:98;;12021:36;;-1:-1:-1;;;12021:36:0;;;;;;;;;;;11970:98;12078:12;12093:92;12125:12;12173:2;12151:12;:19;:24;;;;:::i;:::-;12093:18;:92::i;:::-;12078:107;;12195:21;12219:103;12247:12;12273:1;12310:2;12288:12;:19;:24;;;;:::i;:::-;12219:14;:103::i;:::-;12195:127;;12332:23;12358:37;12373:5;12380:4;12386:8;12358:14;:37::i;:::-;12332:63;;12472:4;12448:15;-1:-1:-1;;;;;12411:66:0;337:1:2;12411:66:0;12465:5;12411:66;;;;160:25:39;;148:2;133:18;;14:177;12411:66:0;;;;;;;;12494:33;;-1:-1:-1;;;;;;22605:2:39;22601:15;;;22597:53;12494:33:0;;;22585:66:39;22667:12;;12494:33:0;;;;;;;;;;;;12487:40;;;;;11820:714;;;;:::o;8713:508::-;8824:19;8904:12;8911:4;8904:12;:::i;:::-;-1:-1:-1;;;;;8860:57:0;;8893:6;-1:-1:-1;;;;;8860:57:0;382:1:2;8860:57:0;8901:1;8860:57;;;;160:25:39;;148:2;133:18;;14:177;8860:57:0;;;;;;;;8988:12;9002:23;9029:6;-1:-1:-1;;;;;9029:17:0;9047:4;9029:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8987:65;;;;9081:133;9123:7;9148:10;9081:133;;;;;;;;;;;;;-1:-1:-1;;;9081:133:0;;;:24;:133::i;:::-;9062:152;8713:508;-1:-1:-1;;;;;8713:508:0:o;9629:514::-;9742:19;9824:12;9831:4;9824:12;:::i;:::-;-1:-1:-1;;;;;9778:59:0;;9813:6;-1:-1:-1;;;;;9778:59:0;429:1:2;9778:59:0;9821:1;9778:59;;;;160:25:39;;148:2;133:18;;14:177;9778:59:0;;;;;;;;9908:12;9922:23;9949:6;-1:-1:-1;;;;;9949:19:0;9969:4;9949:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3911:245;4027:4;-1:-1:-1;;;;;;4062:35:0;;-1:-1:-1;;;4062:35:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:32;;;4113:36:0;829:155:32;8520:295:28;8666:12;8694:7;8690:119;;;-1:-1:-1;8724:10:28;8717:17;;8690:119;8765:33;8773:10;8785:12;8765:7;:33::i;14814:320:38:-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:38;;23215:2:39;14912:62:38;;;23197:21:39;23254:2;23234:18;;;23227:30;-1:-1:-1;;;23273:18:39;;;23266:51;23334:18;;14912:62:38;23013:345:39;14912:62:38;-1:-1:-1;15058:30:38;15074:4;15058:30;15052:37;;14814:320::o;9457:2804::-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:38;;23565:2:39;9631:50:38;;;23547:21:39;23604:2;23584:18;;;23577:30;-1:-1:-1;;;23623:18:39;;;23616:44;23677:18;;9631:50:38;23363:338:39;9631:50:38;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:38;;23908:2:39;9691:63:38;;;23890:21:39;23947:2;23927:18;;;23920:30;-1:-1:-1;;;23966:18:39;;;23959:47;24023:18;;9691:63:38;23706:341:39;9691:63:38;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:38;;;11804:2;11787:11;-1:-1:-1;;11783:25:38;11777:4;11770:39;-1:-1:-1;9821:2397:38;-1:-1:-1;12245:9:38;9457:2804;-1:-1:-1;;;;9457:2804:38:o;1081:484:29:-;1168:12;1225:6;1200:21;:31;;1192:73;;;;-1:-1:-1;;;1192:73:29;;24254:2:39;1192:73:29;;;24236:21:39;24293:2;24273:18;;;24266:30;24332:31;24312:18;;;24305:59;24381:18;;1192:73:29;24052:353:39;1192:73:29;1283:8;:15;1302:1;1283:20;1275:65;;;;-1:-1:-1;;;1275:65:29;;24612:2:39;1275:65:29;;;24594:21:39;;;24631:18;;;24624:30;24690:34;24670:18;;;24663:62;24742:18;;1275:65:29;24410:356:39;1275:65:29;1478:4;1467:8;1461:15;1454:4;1444:8;1440:19;1432:6;1424:59;1416:67;-1:-1:-1;;;;;;1510:18:29;;1502:56;;;;-1:-1:-1;;;1502:56:29;;24973:2:39;1502:56:29;;;24955:21:39;25012:2;24992:18;;;24985:30;25051:27;25031:18;;;25024:55;25096:18;;1502:56:29;24771:349:39;8821:540:28;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:28;;;;;;;;:::i;196:131:39:-;-1:-1:-1;;;;;;270:32:39;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:127::-;835:10;830:3;826:20;823:1;816:31;866:4;863:1;856:15;890:4;887:1;880:15;906:275;977:2;971:9;1042:2;1023:13;;-1:-1:-1;;1019:27:39;1007:40;;-1:-1:-1;;;;;1062:34:39;;1098:22;;;1059:62;1056:88;;;1124:18;;:::i;:::-;1160:2;1153:22;906:275;;-1:-1:-1;906:275:39:o;1186:186::-;1234:4;-1:-1:-1;;;;;1259:6:39;1256:30;1253:56;;;1289:18;;:::i;:::-;-1:-1:-1;1355:2:39;1334:15;-1:-1:-1;;1330:29:39;1361:4;1326:40;;1186:186::o;1377:462::-;1419:5;1472:3;1465:4;1457:6;1453:17;1449:27;1439:55;;1490:1;1487;1480:12;1439:55;1526:6;1513:20;1557:48;1573:31;1601:2;1573:31;:::i;:::-;1557:48;:::i;:::-;1630:2;1621:7;1614:19;1676:3;1669:4;1664:2;1656:6;1652:15;1648:26;1645:35;1642:55;;;1693:1;1690;1683:12;1642:55;1758:2;1751:4;1743:6;1739:17;1732:4;1723:7;1719:18;1706:55;1806:1;1781:16;;;1799:4;1777:27;1770:38;;;;1785:7;1377:462;-1:-1:-1;;;1377:462:39:o;1844:388::-;1921:6;1929;1982:2;1970:9;1961:7;1957:23;1953:32;1950:52;;;1998:1;1995;1988:12;1950:52;2034:9;2021:23;2011:33;;2095:2;2084:9;2080:18;2067:32;-1:-1:-1;;;;;2114:6:39;2111:30;2108:50;;;2154:1;2151;2144:12;2108:50;2177:49;2218:7;2209:6;2198:9;2194:22;2177:49;:::i;:::-;2167:59;;;1844:388;;;;;:::o;2444:183::-;2504:4;-1:-1:-1;;;;;2529:6:39;2526:30;2523:56;;;2559:18;;:::i;:::-;-1:-1:-1;2604:1:39;2600:14;2616:4;2596:25;;2444:183::o;2632:662::-;2686:5;2739:3;2732:4;2724:6;2720:17;2716:27;2706:55;;2757:1;2754;2747:12;2706:55;2793:6;2780:20;2819:4;2843:60;2859:43;2899:2;2859:43;:::i;2843:60::-;2937:15;;;3023:1;3019:10;;;;3007:23;;3003:32;;;2968:12;;;;3047:15;;;3044:35;;;3075:1;3072;3065:12;3044:35;3111:2;3103:6;3099:15;3123:142;3139:6;3134:3;3131:15;3123:142;;;3205:17;;3193:30;;3243:12;;;;3156;;3123:142;;;-1:-1:-1;3283:5:39;2632:662;-1:-1:-1;;;;;;2632:662:39:o;3299:173::-;3367:20;;-1:-1:-1;;;;;3416:31:39;;3406:42;;3396:70;;3462:1;3459;3452:12;3477:886;3529:5;3582:3;3575:4;3567:6;3563:17;3559:27;3549:55;;3600:1;3597;3590:12;3549:55;3636:6;3623:20;3662:4;3686:60;3702:43;3742:2;3702:43;:::i;3686:60::-;3780:15;;;3866:1;3862:10;;;;3850:23;;3846:32;;;3811:12;;;;3890:15;;;3887:35;;;3918:1;3915;3908:12;3887:35;3954:2;3946:6;3942:15;3966:368;3982:6;3977:3;3974:15;3966:368;;;4068:3;4055:17;-1:-1:-1;;;;;4091:11:39;4088:35;4085:125;;;4164:1;4193:2;4189;4182:14;4085:125;4235:56;4287:3;4282:2;4268:11;4260:6;4256:24;4252:33;4235:56;:::i;:::-;4223:69;;-1:-1:-1;4312:12:39;;;;3999;;3966:368;;4368:1604;4563:6;4571;4579;4587;4640:3;4628:9;4619:7;4615:23;4611:33;4608:53;;;4657:1;4654;4647:12;4608:53;4697:9;4684:23;-1:-1:-1;;;;;4767:2:39;4759:6;4756:14;4753:34;;;4783:1;4780;4773:12;4753:34;4806:61;4859:7;4850:6;4839:9;4835:22;4806:61;:::i;:::-;4796:71;;4886:2;4876:12;;4941:2;4930:9;4926:18;4913:32;4970:2;4960:8;4957:16;4954:36;;;4986:1;4983;4976:12;4954:36;5009:24;;5064:4;5056:13;;5052:27;-1:-1:-1;5042:55:39;;5093:1;5090;5083:12;5042:55;5129:2;5116:16;5152:60;5168:43;5208:2;5168:43;:::i;5152:60::-;5246:15;;;5328:1;5324:10;;;;5316:19;;5312:28;;;5277:12;;;;5352:19;;;5349:39;;;5384:1;5381;5374:12;5349:39;5408:11;;;;5428:148;5444:6;5439:3;5436:15;5428:148;;;5510:23;5529:3;5510:23;:::i;:::-;5498:36;;5461:12;;;;5554;;;;5428:148;;;5595:5;-1:-1:-1;;;;5653:2:39;5638:18;;5625:32;;-1:-1:-1;5669:16:39;;;5666:36;;;5698:1;5695;5688:12;5666:36;5721:63;5776:7;5765:8;5754:9;5750:24;5721:63;:::i;:::-;5711:73;;5837:2;5826:9;5822:18;5809:32;5793:48;;5866:2;5856:8;5853:16;5850:36;;;5882:1;5879;5872:12;5850:36;;5905:61;5958:7;5947:8;5936:9;5932:24;5905:61;:::i;:::-;5895:71;;;4368:1604;;;;;;;:::o;5977:250::-;6062:1;6072:113;6086:6;6083:1;6080:13;6072:113;;;6162:11;;;6156:18;6143:11;;;6136:39;6108:2;6101:10;6072:113;;;-1:-1:-1;;6219:1:39;6201:16;;6194:27;5977:250::o;6232:270::-;6273:3;6311:5;6305:12;6338:6;6333:3;6326:19;6354:76;6423:6;6416:4;6411:3;6407:14;6400:4;6393:5;6389:16;6354:76;:::i;:::-;6484:2;6463:15;-1:-1:-1;;6459:29:39;6450:39;;;;6491:4;6446:50;;6232:270;-1:-1:-1;;6232:270:39:o;6507:800::-;6667:4;6696:2;6736;6725:9;6721:18;6766:2;6755:9;6748:21;6789:6;6824;6818:13;6855:6;6847;6840:22;6893:2;6882:9;6878:18;6871:25;;6955:2;6945:6;6942:1;6938:14;6927:9;6923:30;6919:39;6905:53;;6993:2;6985:6;6981:15;7014:1;7024:254;7038:6;7035:1;7032:13;7024:254;;;7131:2;7127:7;7115:9;7107:6;7103:22;7099:36;7094:3;7087:49;7159:39;7191:6;7182;7176:13;7159:39;:::i;:::-;7149:49;-1:-1:-1;7256:12:39;;;;7221:15;;;;7060:1;7053:9;7024:254;;;-1:-1:-1;7295:6:39;;6507:800;-1:-1:-1;;;;;;;6507:800:39:o;7312:531::-;7407:6;7415;7423;7431;7484:3;7472:9;7463:7;7459:23;7455:33;7452:53;;;7501:1;7498;7491:12;7452:53;7537:9;7524:23;7514:33;;7566:38;7600:2;7589:9;7585:18;7566:38;:::i;:::-;7556:48;;7651:2;7640:9;7636:18;7623:32;7613:42;;7706:2;7695:9;7691:18;7678:32;-1:-1:-1;;;;;7725:6:39;7722:30;7719:50;;;7765:1;7762;7755:12;7719:50;7788:49;7829:7;7820:6;7809:9;7805:22;7788:49;:::i;7848:217::-;7995:2;7984:9;7977:21;7958:4;8015:44;8055:2;8044:9;8040:18;8032:6;8015:44;:::i;8070:180::-;8129:6;8182:2;8170:9;8161:7;8157:23;8153:32;8150:52;;;8198:1;8195;8188:12;8150:52;-1:-1:-1;8221:23:39;;8070:180;-1:-1:-1;8070:180:39:o;8255:626::-;8352:6;8360;8413:2;8401:9;8392:7;8388:23;8384:32;8381:52;;;8429:1;8426;8419:12;8381:52;8469:9;8456:23;-1:-1:-1;;;;;8539:2:39;8531:6;8528:14;8525:34;;;8555:1;8552;8545:12;8525:34;8593:6;8582:9;8578:22;8568:32;;8638:7;8631:4;8627:2;8623:13;8619:27;8609:55;;8660:1;8657;8650:12;8609:55;8700:2;8687:16;8726:2;8718:6;8715:14;8712:34;;;8742:1;8739;8732:12;8712:34;8795:7;8790:2;8780:6;8777:1;8773:14;8769:2;8765:23;8761:32;8758:45;8755:65;;;8816:1;8813;8806:12;8755:65;8847:2;8839:11;;;;;8869:6;;-1:-1:-1;8255:626:39;;-1:-1:-1;;;;8255:626:39:o;9094:602::-;9221:6;9229;9282:2;9270:9;9261:7;9257:23;9253:32;9250:52;;;9298:1;9295;9288:12;9250:52;9338:9;9325:23;-1:-1:-1;;;;;9408:2:39;9400:6;9397:14;9394:34;;;9424:1;9421;9414:12;9394:34;9447:61;9500:7;9491:6;9480:9;9476:22;9447:61;:::i;:::-;9437:71;;9561:2;9550:9;9546:18;9533:32;9517:48;;9590:2;9580:8;9577:16;9574:36;;;9606:1;9603;9596:12;9574:36;;9629:61;9682:7;9671:8;9660:9;9656:24;9629:61;:::i;9701:348::-;9785:6;9838:2;9826:9;9817:7;9813:23;9809:32;9806:52;;;9854:1;9851;9844:12;9806:52;9894:9;9881:23;-1:-1:-1;;;;;9919:6:39;9916:30;9913:50;;;9959:1;9956;9949:12;9913:50;9982:61;10035:7;10026:6;10015:9;10011:22;9982:61;:::i;10054:186::-;10113:6;10166:2;10154:9;10145:7;10141:23;10137:32;10134:52;;;10182:1;10179;10172:12;10134:52;10205:29;10224:9;10205:29;:::i;10469:375::-;10587:12;;10635:4;10624:16;;10618:23;-1:-1:-1;;;;;;10709:11:39;;;;10587:12;10618:23;10743:2;10732:14;;10729:109;;;10825:2;10819;10809:6;10805:2;10801:15;10798:1;10794:23;10790:32;10786:2;10782:41;10778:50;10769:59;;10729:109;;;;10469:375;;;:::o;10849:458::-;11109:1;11105;11100:3;11096:11;11092:19;11084:6;11080:32;11069:9;11062:51;11149:6;11144:2;11133:9;11129:18;11122:34;11192:6;11187:2;11176:9;11172:18;11165:34;11235:3;11230:2;11219:9;11215:18;11208:31;11043:4;11256:45;11296:3;11285:9;11281:19;11273:6;11256:45;:::i;11312:647::-;11391:6;11444:2;11432:9;11423:7;11419:23;11415:32;11412:52;;;11460:1;11457;11450:12;11412:52;11493:9;11487:16;-1:-1:-1;;;;;11518:6:39;11515:30;11512:50;;;11558:1;11555;11548:12;11512:50;11581:22;;11634:4;11626:13;;11622:27;-1:-1:-1;11612:55:39;;11663:1;11660;11653:12;11612:55;11692:2;11686:9;11717:48;11733:31;11761:2;11733:31;:::i;11717:48::-;11788:2;11781:5;11774:17;11828:7;11823:2;11818;11814;11810:11;11806:20;11803:33;11800:53;;;11849:1;11846;11839:12;11800:53;11862:67;11926:2;11921;11914:5;11910:14;11905:2;11901;11897:11;11862:67;:::i;11964:377::-;12157:2;12146:9;12139:21;12120:4;12183:44;12223:2;12212:9;12208:18;12200:6;12183:44;:::i;:::-;12275:9;12267:6;12263:22;12258:2;12247:9;12243:18;12236:50;12303:32;12328:6;12320;12303:32;:::i;12346:424::-;12585:6;12577;12572:3;12559:33;12655:2;12651:15;;;;-1:-1:-1;;;;;;12647:53:39;12611:16;;;;12636:65;;;12725:2;12717:11;;12710:27;;;;12761:2;12753:11;;12346:424;-1:-1:-1;12346:424:39:o;12775:287::-;12904:3;12942:6;12936:13;12958:66;13017:6;13012:3;13005:4;12997:6;12993:17;12958:66;:::i;:::-;13040:16;;;;;12775:287;-1:-1:-1;;12775:287:39:o;13067:288::-;13242:6;13231:9;13224:25;13285:2;13280;13269:9;13265:18;13258:30;13205:4;13305:44;13345:2;13334:9;13330:18;13322:6;13305:44;:::i;13360:184::-;13430:6;13483:2;13471:9;13462:7;13458:23;13454:32;13451:52;;;13499:1;13496;13489:12;13451:52;-1:-1:-1;13522:16:39;;13360:184;-1:-1:-1;13360:184:39:o;13549:127::-;13610:10;13605:3;13601:20;13598:1;13591:31;13641:4;13638:1;13631:15;13665:4;13662:1;13655:15;13892:440;14139:2;14128:9;14121:21;14102:4;14165:44;14205:2;14194:9;14190:18;14182:6;14165:44;:::i;:::-;14245:22;;;14240:2;14225:18;;;14218:50;14292:1;14277:17;;14311:15;;;;;13892:440;-1:-1:-1;;13892:440:39:o;14337:127::-;14398:10;14393:3;14389:20;14386:1;14379:31;14429:4;14426:1;14419:15;14453:4;14450:1;14443:15;14469:521;14546:4;14552:6;14612:11;14599:25;14706:2;14702:7;14691:8;14675:14;14671:29;14667:43;14647:18;14643:68;14633:96;;14725:1;14722;14715:12;14633:96;14752:33;;14804:20;;;-1:-1:-1;;;;;;14836:30:39;;14833:50;;;14879:1;14876;14869:12;14833:50;14912:4;14900:17;;-1:-1:-1;14943:14:39;14939:27;;;14929:38;;14926:58;;;14980:1;14977;14970:12;14995:271;15178:6;15170;15165:3;15152:33;15134:3;15204:16;;15229:13;;;15204:16;14995:271;-1:-1:-1;14995:271:39:o;15934:380::-;16013:1;16009:12;;;;16056;;;16077:61;;16131:4;16123:6;16119:17;16109:27;;16077:61;16184:2;16176:6;16173:14;16153:18;16150:38;16147:161;;16230:10;16225:3;16221:20;16218:1;16211:31;16265:4;16262:1;16255:15;16293:4;16290:1;16283:15;16733:297;16851:12;;16898:4;16887:16;;;16881:23;;16851:12;16916:16;;16913:111;;;-1:-1:-1;;16990:4:39;16986:17;;;;16983:1;16979:25;16975:38;16964:50;;16733:297;-1:-1:-1;16733:297:39:o;17035:743::-;-1:-1:-1;;;;;17342:15:39;;;17324:34;;17394:15;;;17389:2;17374:18;;17367:43;17446:15;;17441:2;17426:18;;17419:43;17493:2;17478:18;;17471:34;;;17304:3;17536;17521:19;;17514:32;;;17562:19;;17555:35;;;17267:4;17583:6;17633;17627:3;17612:19;;17599:49;17698:1;17692:3;17683:6;17672:9;17668:22;17664:32;17657:43;17768:3;17761:2;17757:7;17752:2;17744:6;17740:15;17736:29;17725:9;17721:45;17717:55;17709:63;;17035:743;;;;;;;;;:::o;17783:249::-;17852:6;17905:2;17893:9;17884:7;17880:23;17876:32;17873:52;;;17921:1;17918;17911:12;17873:52;17953:9;17947:16;17972:30;17996:5;17972:30;:::i;18325:644::-;18576:3;18608:26;18604:31;18677:2;18668:6;18664:2;18660:15;18656:24;18651:3;18644:37;18732:2;18723:6;18719:2;18715:15;18711:24;18706:2;18701:3;18697:12;18690:46;18787:2;18778:6;18774:2;18770:15;18766:24;18761:2;18756:3;18752:12;18745:46;;18821:6;18816:2;18811:3;18807:12;18800:28;18872:6;18864;18859:2;18854:3;18850:12;18837:42;-1:-1:-1;18943:1:39;18902:16;;18920:2;18898:25;18932:13;;;18898:25;18325:644;-1:-1:-1;;;;;18325:644:39:o;18974:127::-;19035:10;19030:3;19026:20;19023:1;19016:31;19066:4;19063:1;19056:15;19090:4;19087:1;19080:15;19106:125;19171:9;;;19192:10;;;19189:36;;;19205:18;;:::i;19614:544::-;19715:2;19710:3;19707:11;19704:448;;;19751:1;19776:5;19772:2;19765:17;19821:4;19817:2;19807:19;19891:2;19879:10;19875:19;19872:1;19868:27;19862:4;19858:38;19927:4;19915:10;19912:20;19909:47;;;-1:-1:-1;19950:4:39;19909:47;20005:2;20000:3;19996:12;19993:1;19989:20;19983:4;19979:31;19969:41;;20060:82;20078:2;20071:5;20068:13;20060:82;;;20123:17;;;20104:1;20093:13;20060:82;;;20064:3;;;19614:544;;;:::o;20334:1348::-;20458:3;20452:10;-1:-1:-1;;;;;20477:6:39;20474:30;20471:56;;;20507:18;;:::i;:::-;20536:96;20625:6;20585:38;20617:4;20611:11;20585:38;:::i;:::-;20579:4;20536:96;:::i;:::-;20687:4;;20751:2;20740:14;;20768:1;20763:662;;;;21469:1;21486:6;21483:89;;;-1:-1:-1;21538:19:39;;;21532:26;21483:89;-1:-1:-1;;20291:1:39;20287:11;;;20283:24;20279:29;20269:40;20315:1;20311:11;;;20266:57;21585:81;;20733:943;;20763:662;19561:1;19554:14;;;19598:4;19585:18;;-1:-1:-1;;20799:20:39;;;20916:236;20930:7;20927:1;20924:14;20916:236;;;21019:19;;;21013:26;20998:42;;21111:27;;;;21079:1;21067:14;;;;20946:19;;20916:236;;;20920:3;21180:6;21171:7;21168:19;21165:201;;;21241:19;;;21235:26;-1:-1:-1;;21324:1:39;21320:14;;;21336:3;21316:24;21312:37;21308:42;21293:58;21278:74;;21165:201;-1:-1:-1;;;;;21412:1:39;21396:14;;;21392:22;21379:36;;-1:-1:-1;20334:1348:39:o;22090:361::-;22207:12;;22255:4;22244:16;;22238:23;-1:-1:-1;;;;;;22318:11:39;;;;22207:12;22238:23;22352:1;22341:13;;22338:107;;;22413:1;22409:14;;;;22406:1;22402:22;22398:31;;;22390:40;22386:49;;22090:361;-1:-1:-1;;22090:361:39:o;22690:128::-;22757:9;;;22778:11;;;22775:37;;;22792:18;;:::i"},"methodIdentifiers":{"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY()":"ead3fbdf","RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD()":"01bfba61","VERSION()":"ffa1ad74","acceptOwnership()":"79ba5097","batchCalls(bytes[])":"6963d438","execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","isValidSignature(bytes32,bytes)":"1626ba7e","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725X_ContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_CreateOperationsRequireEmptyRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC725X_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInStaticCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_NoContractBytecodeProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationTypeProvided\",\"type\":\"uint256\"}],\"name\":\"ERC725X_UnknownOperationType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP14CallerNotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14CannotTransferOwnershipToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP14MustAcceptOwnershipInSeparateTransaction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"renounceOwnershipEnd\",\"type\":\"uint256\"}],\"name\":\"LSP14NotInRenounceOwnershipInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"postCall\",\"type\":\"bool\"},{\"internalType\":\"bytes4\",\"name\":\"returnedStatus\",\"type\":\"bytes4\"}],\"name\":\"LSP20CallVerificationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"postCall\",\"type\":\"bool\"}],\"name\":\"LSP20CallingVerifierFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logicVerifier\",\"type\":\"address\"}],\"name\":\"LSP20EOACannotVerifyCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RenounceOwnershipStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RENOUNCE_OWNERSHIP_CONFIRMATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"returnedStatus\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingNewOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedValues\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\",\"details\":\"A smart contract account including basic functionalities such as: - Detecting supported standards using [ERC-165] - Executing several operation on other addresses including creating contracts using [ERC-725X] - A generic data key-value store using [ERC-725Y] - Validating signatures using [ERC-1271] - Receiving notification and react on them using [LSP-1-UniversalReceiver] - Safer ownership management through 2-steps transfer using [LSP-14-Ownable2Step] - Extending the account with new functions and interfaceIds of future standards using [LSP-17-ContractExtension] - Verifying calls on the owner to make it easier to interact with the account directly using [LSP-20-CallVerification]\",\"errors\":{\"ERC725X_ContractDeploymentFailed()\":[{\"details\":\"Reverts when contract deployment failed via {execute} or {executeBatch} functions, This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_CreateOperationsRequireEmptyRecipientAddress()\":[{\"details\":\"Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_ExecuteParametersEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\"}],\"ERC725X_ExecuteParametersLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas` array parameters provided when calling the {executeBatch} function.\"}],\"ERC725X_InsufficientBalance(uint256,uint256)\":[{\"details\":\"Reverts when trying to send more native tokens `value` than available in current `balance`.\",\"params\":{\"balance\":\"The balance of native tokens of the ERC725X smart contract.\",\"value\":\"The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\"}}],\"ERC725X_MsgValueDisallowedInDelegateCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`). Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\"}],\"ERC725X_MsgValueDisallowedInStaticCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`). Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\"}],\"ERC725X_NoContractBytecodeProvided()\":[{\"details\":\"Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_UnknownOperationType(uint256)\":[{\"details\":\"Reverts when the `operationTypeProvided` is none of the default operation types available. (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\",\"params\":{\"operationTypeProvided\":\"The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\"}}],\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"LSP14CallerNotPendingOwner(address)\":[{\"details\":\"Reverts when the `caller` that is trying to accept ownership of the contract is not the pending owner.\",\"params\":{\"caller\":\"The address that tried to accept ownership.\"}}],\"LSP14CannotTransferOwnershipToSelf()\":[{\"details\":\"Reverts when trying to transfer ownership to the `address(this)`.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"details\":\"Reverts when pending owner accept ownership in the same transaction of transferring ownership.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"details\":\"Reverts when trying to renounce ownership before the initial confirmation delay.\",\"params\":{\"renounceOwnershipEnd\":\"The end timestamp when one can confirm the renouncement of ownership.\",\"renounceOwnershipStart\":\"The start timestamp when one can confirm the renouncement of ownership.\"}}],\"LSP20CallVerificationFailed(bool,bytes4)\":[{\"details\":\"reverts when the call to the owner does not return the LSP20 success value\",\"params\":{\"postCall\":\"True if the execution call was done, False otherwise\",\"returnedStatus\":\"The bytes4 decoded data returned by the logic verifier.\"}}],\"LSP20CallingVerifierFailed(bool)\":[{\"details\":\"reverts when the call to the owner fail with no revert reason\",\"params\":{\"postCall\":\"True if the execution call was done, False otherwise\"}}],\"LSP20EOACannotVerifyCall(address)\":[{\"details\":\"Reverts when the logic verifier is an Externally Owned Account (EOA) that cannot return the LSP20 success value.\",\"params\":{\"logicVerifier\":\"The address of the logic verifier\"}}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}},\"OwnershipRenounced()\":{\"details\":\"Emitted when the ownership of the contract has been renounced.\"},\"OwnershipTransferStarted(address,address)\":{\"details\":\"Emitted when {transferOwnership(..)} was called and the first step of transferring ownership completed successfully which leads to {pendingOwner} being updated.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}},\"RenounceOwnershipStarted()\":{\"details\":\"Emitted when starting the {renounceOwnership(..)} 2-step process.\"},\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"custom:requirements\":\"- Only the {pendingOwner} can call this function. - When notifying the previous owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_SenderNotification]. - When notifying the new owner via LSP1, the typeId used must be the `keccak256(...)` hash of [LSP0OwnershipTransferred_RecipientNotification].\",\"details\":\"Transfer ownership of the contract from the current {owner()} to the {pendingOwner()}. Once this function is called: - The current {owner()} will lose access to the functions restricted to the {owner()} only. - The {pendingOwner()} will gain access to the functions restricted to the {owner()} only.\"},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"custom:events\":\"- {UniversalReceiver} event when funding the contract on deployment. - {OwnershipTransferred} event when `initialOwner` is set as the contract {owner}.\",\"details\":\"Set `initialOwner` as the contract owner. - The `constructor` also allows funding the contract on deployment. - The `initialOwner` will then be allowed to call protected functions marked with the `onlyOwner` modifier.\",\"params\":{\"initialOwner\":\"The owner of the contract.\"}},\"execute(uint256,address,uint256,bytes)\":{\"custom:events\":\"- {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2). - {UniversalReceiver} event when receiving native tokens.\",\"custom:requirements\":\"- Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully. - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`. - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\",\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"custom:events\":\"- {Executed} event for each call that uses under `operationType`: `CALL` (0), `STATICCALL` (3) and `DELEGATECALL` (4). (each iteration) - {ContractCreated} event, when a contract is created under `operationType`: `CREATE` (1) and `CREATE2` (2) (each iteration) - {UniversalReceiver} event when receiving native tokens.\",\"custom:requirements\":\"- The length of the parameters provided must be equal. - Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - If a `value` is provided, the contract must have at least this amount in its balance to execute successfully. - If the operation type is `CREATE` (1) or `CREATE2` (2), `target` must be `address(0)`. - If the operation type is `STATICCALL` (3) or `DELEGATECALL` (4), `value` transfer is disallowed and must be 0.\",\"custom:warning\":\"- The `msg.value` should not be trusted for any method called within the batch with `operationType`: `DELEGATECALL` (4).\",\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"isValidSignature(bytes32,bytes)\":{\"custom:warning\":\"This function does not enforce by default the inclusion of the address of this contract in the signature digest. It is recommended that protocols or applications using this contract include the targeted address (= this contract) in the data to sign. To ensure that a signature is valid for a specific LSP0ERC725Account and prevent signatures from the same EOA to be replayed across different LSP0ERC725Accounts.\",\"details\":\"Handles two cases: 1. If the owner is an EOA, recovers an address from the hash and the signature provided:      - Returns the `_ERC1271_SUCCESSVALUE` if the address recovered is the same as the owner, indicating that it was a valid signature.      - If the address is different, it returns the `_ERC1271_FAILVALUE` indicating that the signature is not valid. 2. If the owner is a smart contract, it forwards the call of {isValidSignature()} to the owner contract:      - If the contract fails or returns the `_ERC1271_FAILVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_FAILVALUE`, indicating that the signature is not valid.      - If the {isValidSignature()} on the owner returned the `_ERC1271_SUCCESSVALUE`, the {isValidSignature()} on the account returns the `_ERC1271_SUCCESSVALUE`, indicating that it's a valid signature.\",\"params\":{\"dataHash\":\"The hash of the data to be validated.\",\"signature\":\"A signature that can validate the previous parameter (Hash).\"},\"returns\":{\"returnedStatus\":\"A `bytes4` value that indicates if the signature is valid or not.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"custom:info\":\"If no ownership transfer is in progress, the pendingOwner will be `address(0).`.\",\"details\":\"The address that ownership of the contract is transferred to. This address may use {acceptOwnership()} to gain ownership of the contract.\"},\"renounceOwnership()\":{\"custom:danger\":\"Leaves the contract without an owner. Once ownership of the contract has been renounced, any functions that are restricted to be called by the owner or an address allowed by the owner will be permanently inaccessible, making these functions not callable anymore and unusable.\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Renounce ownership of the contract in a 2-step process. 1. The first call will initiate the process of renouncing ownership. 2. The second call is used as a confirmation and will leave the contract without an owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"- {UniversalReceiver} event when receiving native tokens. - {DataChanged} event.\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"- {UniversalReceiver} event when receiving native tokens. - {DataChanged} event. (on each iteration of setting data)\",\"custom:requirements\":\"Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Achieves the goal of [ERC-165] to detect supported interfaces and [LSP-17-ContractExtension] by checking if the interfaceId being queried is supported on another linked extension. If the contract doesn't support the `interfaceId`, it forwards the call to the `supportsInterface` extension according to [LSP-17-ContractExtension], and checks if the extension implements the interface defined by `interfaceId`.\",\"params\":{\"interfaceId\":\"The interface ID to check if the contract supports it.\"},\"returns\":{\"_0\":\"`true` if this contract implements the interface defined by `interfaceId`, `false` otherwise.\"}},\"transferOwnership(address)\":{\"custom:requirements\":\"- Can be only called by the {owner} or by an authorised address that pass the verification check performed on the owner. - When notifying the new owner via LSP1, the `typeId` used must be the `keccak256(...)` hash of [LSP0OwnershipTransferStarted]. - Pending owner cannot accept ownership in the same tx via the LSP1 hook.\",\"details\":\"Initiate the process of transferring ownership of the contract by setting the new owner as the pending owner. If the new owner is a contract that supports + implements LSP1, this will also attempt to notify the new owner that ownership has been transferred to them by calling the {universalReceiver()} function on the `newOwner` contract.\",\"params\":{\"newOwner\":\"The address of the new owner.\"}},\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"- {UniversalReceiver} when receiving native tokens. - {UniversalReceiver} event with the function parameters, call options, and the response of the UniversalReceiverDelegates (URD) contract that was called.\",\"details\":\"Achieves the goal of [LSP-1-UniversalReceiver] by allowing the account to be notified about incoming/outgoing transactions and enabling reactions to these actions. The reaction is achieved by having two external contracts ([LSP1UniversalReceiverDelegate]) that react on the whole transaction and on the specific typeId, respectively. The function performs the following steps: 1. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY].      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function. 2. Query the [ERC-725Y] storage with the data key [_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX] + `bytes32(typeId)`.   (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)      - If there is an address stored under the data key, check if this address supports the LSP1 interfaceId.      - If yes, call this address with the typeId and data (params), along with additional calldata consisting of 20 bytes of `msg.sender` and 32 bytes of `msg.value`. If not, continue the execution of the function. This function delegates internally the handling of native tokens to the {universalReceiver} function itself passing `_TYPEID_LSP0_VALUE_RECEIVED` as typeId and the calldata as received data.\",\"params\":{\"receivedData\":\"The data received.\",\"typeId\":\"The type of call received.\"},\"returns\":{\"returnedValues\":\"The ABI encoded return value of the LSP1UniversalReceiverDelegate call and the LSP1TypeIdDelegate call.\"}}},\"title\":\"Deployable Implementation of [LSP-0-ERC725Account] Standard.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP14CannotTransferOwnershipToSelf()\":[{\"notice\":\"Cannot transfer ownership to the address of the contract itself.\"}],\"LSP14MustAcceptOwnershipInSeparateTransaction()\":[{\"notice\":\"Cannot accept ownership in the same transaction with {transferOwnership(...)}.\"}],\"LSP14NotInRenounceOwnershipInterval(uint256,uint256)\":[{\"notice\":\"Cannot confirm ownership renouncement yet. The ownership renouncement is allowed from: `renounceOwnershipStart` until: `renounceOwnershipEnd`.\"}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"},\"OwnershipRenounced()\":{\"notice\":\"Successfully renounced ownership of the contract. This contract is now owned by anyone, it's owner is `address(0)`.\"},\"OwnershipTransferStarted(address,address)\":{\"notice\":\"The transfer of ownership of the contract was initiated. Pending new owner set to: `newOwner`.\"},\"RenounceOwnershipStarted()\":{\"notice\":\"Ownership renouncement initiated.\"},\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Contract version.\"},\"acceptOwnership()\":{\"notice\":\"`msg.sender` is accepting ownership of contract: `address(this)`.\"},\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a LSP0ERC725Account contract with owner set to address `initialOwner`.\"},\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Achieves the goal of [EIP-1271] by validating signatures of smart contracts according to their own logic.\"},\"renounceOwnership()\":{\"notice\":\"`msg.sender` is renouncing ownership of contract `address(this)`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checking if this contract supports the interface defined by the `bytes4` interface ID `interfaceId`.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership initiated by `newOwner`.\"},\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Notifying the contract by calling its `universalReceiver` function with the following informations: typeId: `typeId`; data: `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UP.sol\":\"LSP0ERC725Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0x30faca9e584d40972ded6ef505f7b2ec86bef57ba382a461cf69939bb04a3879\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5384e205fe05e9174865600c69ff69c30bbdf764d66c5e5608343f6df92f24fa\",\"dweb:/ipfs/QmPXEuNg4GVrqiapuJsn7rGYxFkuSGKGff46MgTPRj5r43\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x98e44c24f108317e314fe431e9178c05c199383092e3e358c294fd3a6fa9f8e0\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://071667b6982a6bb749e2592ea9ab045bf076d428eef431f7abb8f2cb0137615d\",\"dweb:/ipfs/QmT9sNeKZLqHXkpwJt3KHvEar4gqXjNUnEhnGakPovNbBH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x8a8baf99256d7af9389700213dff72587e3a7083da9f25fbe20940244da58a8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b203d51255de422125cfbe57c6acd8f8730d1df430b8cc838b8773e64e952f6d\",\"dweb:/ipfs/QmNMjDiUrgMAaRWM3PjZkRTQSgTQS1GRinwBDPESbvW2ER\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol\":{\"keccak256\":\"0x9066f85dcef006b7896a367fd08fd0a62706a32457be6859191f15f5e865d049\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64ee93036c278b6c458dfbc07324c219aaefba30cc27cbef78711bb6b3259178\",\"dweb:/ipfs/QmYX41QaQb4nR8qQpiKNAHM7EVJM4KZdJaV6j2CeUgYAPq\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol\":{\"keccak256\":\"0x281f3faae5275658f9deac2402e1d267585ff7c9cab76c8286f3c111d45937fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b6242256fa26b8bd1639b68a19c9ec31465f5ac0644189f8ece3eb83540b3ed5\",\"dweb:/ipfs/QmR99tQjcUdw9sUwV64ti3kgcxyC9K9aiy146VXZS3Gbei\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/ILSP14Ownable2Step.sol\":{\"keccak256\":\"0x05ca1e94dce690e868ec7f1eb8776a016e1117ad2eac3ec38f0cf0df1fbf3dd4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://47927c7dada048db78f03b04be4f87d67751cc4c277a70e60cac79edaaf07f69\",\"dweb:/ipfs/QmeqS32QNL78GnbjSPR1YH6bwgtmiR85ceW6h9efeW7FTH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Constants.sol\":{\"keccak256\":\"0x456a3b97d311fa515285ca06f3ae6086c760a73b73e95e806f392ac21e231600\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e2ebe4846d92df77de5436c7e73077eb1ddf909c1e41ef3c0bdc13a21dcd310\",\"dweb:/ipfs/QmazkXSWdj1QGXG8ymbRKvhsFvrfGV97jfg9sn99KYajvK\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Errors.sol\":{\"keccak256\":\"0x91eac2f8e413fcf5c61f2c0494d93de1c5a97404ceb365504ae10f00506b042f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c454097fcc2325540840a5f539bb9f52b53914e512fa969b72ce5b89c4241aa4\",\"dweb:/ipfs/QmceznDNfzCGpnX2bsTxnvqyxRPzQjqHsZSGtRsokbZNWk\"]},\"@lukso/lsp-smart-contracts/contracts/LSP14Ownable2Step/LSP14Ownable2Step.sol\":{\"keccak256\":\"0x0dda32e2d2dba5b3d46a1001bcfe02f5d9c9cc8cc1a4f58fcfb9afda8aec6ec4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4b27cf49d9f9c65e902afaece0fd214b8fa1c32f2b3f369f704eb7b121d772c7\",\"dweb:/ipfs/Qmcn4rGo6XsnYmWxvzNp7dM26ZtVvvSTU4HTcAdLd2CKzP\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\":{\"keccak256\":\"0xaafc91328097796841faacbbe3151d36302282d91e947ce29244b4fdc285c717\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ee5d998e6705e2cfd2b7c188b308c5ad1938ba31925d70af28e2c260b32b30\",\"dweb:/ipfs/QmUBayZquBqjG2wtkZxKfjXRwd4p3ztNmRshAoCeSavjxW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/ILSP20CallVerifier.sol\":{\"keccak256\":\"0xc302150618a783d0912ccf73c86e723822a0c42400c0dafe66cbae0a8bdda939\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6cd7fbb3517319f1f6f3104979512f535da6cb72fc7cb98a7e57e31251dcf005\",\"dweb:/ipfs/QmZaMpDsPnYRLeXTbuGv8iSsGp91zVVKcZ4hGw5XyWxstY\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20CallVerification.sol\":{\"keccak256\":\"0xf97a0412c94233fef7a1bc49d2d3b374be0e53faf31e20e8e6f45fca0af54d0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://148f9ba63ea4f641e2ec60aa3ea8e0576642abc116e55f9eeffd4dbb2986a221\",\"dweb:/ipfs/QmRkT4xx18H32j7yS4bNERMMAe3m3oWBgZ9grRJS7Gqpt4\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Constants.sol\":{\"keccak256\":\"0x385f90f7c45f4d196ecdbe53b6228435022b23644882ca7e2727597aace14875\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12d6227162fe438673bdfd34eb03e21831d9e026a1e6fc03b4c419e8012fc6ee\",\"dweb:/ipfs/Qma4KThYJh3gWS5JXmpD5z44wuH9uym3BPwfvNFfzFgcU2\"]},\"@lukso/lsp-smart-contracts/contracts/LSP20CallVerification/LSP20Errors.sol\":{\"keccak256\":\"0x0b07d30183b746fd59d33424041fb1e6d3f61af19da4be7778dbcf43a8fe08fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d95aad9cd0762630948d719c199aa7825880deed36687ed57ccd7a6fcf5deac\",\"dweb:/ipfs/QmS9cWMEiCuX7JgjQZgKk35m6b4RUjsPBHVoEfpXVkMhqV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp-smart-contracts/contracts/Version.sol\":{\"keccak256\":\"0xe485fb88e582ae027a7862104f9a9669fe44611f77e427405781ca8ddd828174\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://74fd27c12de2131ef32e93ab3d73e2a7a19897f72481efadb28838c2b60a61ac\",\"dweb:/ipfs/QmaRicGJvoYcpifydqsdeHS1GhofC4Rp5eeurP9PTPJcNG\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/UP.sol\":{\"keccak256\":\"0x24a5c05adc3eb2882f3a11420196671adbd9fbb7098dc7d2cb965185d44052bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3af5a4c467af0aad70750a0d9465577cde96547fc569b1a4120ddf59f22827b2\",\"dweb:/ipfs/QmTdgkZN1tqP6NH9x1CXnnMQKrYKQaqYEevQt81DfgCmTr\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"solidity-bytes-utils/contracts/BytesLib.sol":{"BytesLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe2a2901eb4d03425963942d67bde250ffa830d981f8ddb12921cbba13b08d1f64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2A 0x29 ADD 0xEB 0x4D SUB TIMESTAMP MSIZE PUSH4 0x942D67BD 0xE2 POP SELFDESTRUCT 0xA8 ADDRESS 0xD9 DUP2 0xF8 0xDD 0xB1 0x29 0x21 0xCB 0xBA SGT 0xB0 DUP14 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"370:18904:38:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:18904:38;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe2a2901eb4d03425963942d67bde250ffa830d981f8ddb12921cbba13b08d1f64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2A 0x29 ADD 0xEB 0x4D SUB TIMESTAMP MSIZE PUSH4 0x942D67BD 0xE2 POP SELFDESTRUCT 0xA8 ADDRESS 0xD9 DUP2 0xF8 0xDD 0xB1 0x29 0x21 0xCB 0xBA SGT 0xB0 DUP14 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"370:18904:38:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}}}}}